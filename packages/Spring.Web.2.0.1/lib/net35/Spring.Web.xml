<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spring.Web</name>
    </assembly>
    <members>
        <member name="T:Spring.Caching.AspNetCache">
            <summary>
            An <see cref="T:Spring.Caching.ICache"/> implementation backed by ASP.NET Cache (see <see cref="P:System.Web.HttpRuntime.Cache"/>).
            </summary>
            <remarks>
            <para>
            Because ASP.NET Cache uses strings as cache keys, you need to ensure
            that the key object type has properly implemented <b>ToString</b> method.
            </para>
            <para>
            Despite the shared underlying <see cref="P:System.Web.HttpRuntime.Cache"/>, it is possible to use more than
            one instance of <see cref="T:Spring.Caching.AspNetCache"/> without interfering each other.
            </para>
            </remarks>
            <author>Aleksandar Seovic</author>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Caching.AspNetCache.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Spring.Caching.AspNetCache"/> 
            </summary>
        </member>
        <member name="M:Spring.Caching.AspNetCache.#ctor(Spring.Caching.AspNetCache.IRuntimeCache)">
            <summary>
            Initializes a new instance of <see cref="T:Spring.Caching.AspNetCache"/>
            with the specified <see cref="T:Spring.Caching.AspNetCache.IRuntimeCache"/> implementation.
            </summary>
            <param name="runtimeCache"></param>
        </member>
        <member name="M:Spring.Caching.AspNetCache.Get(System.Object)">
            <summary>
            Retrieves an item from the cache.
            </summary>
            <param name="key">
            Item key.
            </param>
            <returns>
            Item for the specified <paramref name="key"/>, or <c>null</c>.
            </returns>
        </member>
        <member name="M:Spring.Caching.AspNetCache.Remove(System.Object)">
            <summary>
            Removes an item from the cache.
            </summary>
            <param name="key">
            Item key.
            </param>
        </member>
        <member name="M:Spring.Caching.AspNetCache.DoInsert(System.Object,System.Object,System.TimeSpan)">
            <summary>
            Inserts an item into the cache.
            </summary>
            <remarks>
            Items inserted using this method have default <see cref="P:Spring.Caching.AspNetCache.Priority"/> and default <see cref="P:Spring.Caching.AspNetCache.SlidingExpiration"/>
            </remarks>
            <param name="key">
            Item key.
            </param>
            <param name="value">
            Item value.
            </param>
            <param name="timeToLive">
            Item's time-to-live (TTL).
            </param>
        </member>
        <member name="M:Spring.Caching.AspNetCache.Insert(System.Object,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            Inserts an item into the cache.
            </summary>
            <param name="key">
            Item key.
            </param>
            <param name="value">
            Item value.
            </param>
            <param name="timeToLive">
            Item's time-to-live.
            </param>
            <param name="slidingExpiration">
            Flag specifying whether the item's time-to-live should be reset
            when the item is accessed.
            </param>
        </member>
        <member name="M:Spring.Caching.AspNetCache.Insert(System.Object,System.Object,System.TimeSpan,System.Boolean,System.Web.Caching.CacheItemPriority)">
            <summary>
            Inserts an item into the cache.
            </summary>
            <param name="key">
            Item key.
            </param>
            <param name="value">
            Item value.
            </param>
            <param name="timeToLive">
            Item's time-to-live.
            </param>
            <param name="slidingExpiration">
            Flag specifying whether the item's time-to-live should be reset
            when the item is accessed.
            </param>
            <param name="itemPriority">
            Item priority.
            </param>
        </member>
        <member name="M:Spring.Caching.AspNetCache.GenerateKey(System.Object)">
            <summary>
            Generate a key to be used for the underlying <see cref="T:System.Web.Caching.Cache"/> implementation.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Spring.Caching.AspNetCache.SlidingExpiration">
            <summary>
            Gets/Sets a flag, whether to use sliding expiration policy.
            </summary>
        </member>
        <member name="P:Spring.Caching.AspNetCache.Priority">
            <summary>
            Gets/Sets a default priority to be applied to all items inserted into this cache.
            </summary>
        </member>
        <member name="P:Spring.Caching.AspNetCache.Keys">
            <summary>
            Gets a collection of all cache item keys.
            </summary>
        </member>
        <member name="T:Spring.Caching.AspNetCache.IRuntimeCache">
            <summary>
            Abstracts the underlying runtime cache
            </summary>
        </member>
        <member name="M:Spring.Caching.AspNetCache.IRuntimeCache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            Insert an item into the cache.
            </summary>
        </member>
        <member name="M:Spring.Caching.AspNetCache.IRuntimeCache.Remove(System.String)">
            <summary>
            Removes an item from the cache.
            </summary>
            <param name="key">The key of the item to remove</param>
            <returns>The object that has been removed from the cache</returns>
        </member>
        <member name="M:Spring.Caching.AspNetCache.IRuntimeCache.Get(System.String)">
            <summary>
            Retrieve an item with the specified key from the cache.
            </summary>
            <param name="key">The key of the item to be retrieved</param>
            <returns>The item, if found. <value>null</value> otherwise</returns>
        </member>
        <member name="T:Spring.Caching.AspNetCache.RuntimeCache">
            <summary>
            Actually delegates all calls to the underlying <see cref="P:System.Web.HttpRuntime.Cache"/>
            </summary>
        </member>
        <member name="T:Spring.Context.Support.HttpApplicationConfigurer">
             <summary>
            
             </summary>
             <author>Erich Eichinger</author>
        </member>
        <member name="F:Spring.Context.Support.HttpApplicationConfigurer.s_applicationDefinition">
            <summary>
            Holds shared application Template
            </summary>
        </member>
        <member name="F:Spring.Context.Support.HttpApplicationConfigurer.s_moduleDefinitions">
            <summary>
            Holds shared modules Templates
            </summary>
        </member>
        <member name="M:Spring.Context.Support.HttpApplicationConfigurer.Configure(Spring.Context.IConfigurableApplicationContext,System.Web.HttpApplication)">
            <summary>
            Configures the <see paramref="app"/> instance and its modules.
            </summary>
            <remarks>
            When called, configures <see paramref="app"/> using the <see cref="T:Spring.Context.IApplicationContext"/> instance 
            provided in <paramref name="appContext"/> and the templates available in
            <see cref="P:Spring.Context.Support.HttpApplicationConfigurer.ApplicationTemplate"/> and <see cref="P:Spring.Context.Support.HttpApplicationConfigurer.ModuleTemplates"/>.
            </remarks>
            <param name="appContext">the application context instance to be used for resolving object references.</param>
            <param name="app">the <see cref="T:System.Web.HttpApplication"/> instance to be configured.</param>
        </member>
        <member name="P:Spring.Context.Support.HttpApplicationConfigurer.ApplicationTemplate">
            <summary>
            Gets or Sets the shared application template
            </summary>
        </member>
        <member name="P:Spring.Context.Support.HttpApplicationConfigurer.ModuleTemplates">
            <summary>
            Gets the dictionary of shared module templates
            </summary>
            <remarks>
            to synchronize access to the dictionary, use <see cref="P:System.Collections.ICollection.SyncRoot"/> property.
            </remarks>
        </member>
        <member name="T:Spring.Context.Support.WebApplicationContext">
             <summary>
             Web application context, taking the context definition files
             from the file system or from URLs.
            
             Treats resource paths as web resources, when using
             IApplicationContext.GetResource. Resource paths are considered relative
             to the virtual directory.
            
             Note: In case of multiple config locations, later object definitions will
             override ones defined in earlier loaded files. This can be leveraged to
             deliberately override certain object definitions via an extra XML file.
             </summary>
             <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.#ctor(System.String[])">
            <summary>
            Create a new WebApplicationContext, loading the definitions
            from the given XML resource.
            </summary>
            <param name="configurationLocations">Names of configuration resources.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.#ctor(System.String,System.Boolean,System.String[])">
            <summary>
            Create a new WebApplicationContext, loading the definitions
            from the given XML resource.
            </summary>
            <param name="name">The application context name.</param>
            <param name="caseSensitive">Flag specifying whether to make this context case sensitive or not.</param>
            <param name="configurationLocations">Names of configuration resources.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.#ctor(System.String,System.Boolean,System.String[],Spring.Core.IO.IResource[])">
            <summary>
            Create a new WebApplicationContext, loading the definitions
            from the given XML resource.
            </summary>
            <param name="name">The application context name.</param>
            <param name="caseSensitive">Flag specifying whether to make this context case sensitive or not.</param>
            <param name="configurationLocations">Names of configuration resources.</param>
            <param name="configurationResources">Configuration resources.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.#ctor(System.String,System.Boolean,Spring.Context.IApplicationContext,System.String[])">
            <summary>
            Create a new WebApplicationContext with the given parent,
            loading the definitions from the given XML resources.
            </summary>
            <param name="name">The application context name.</param>
            <param name="caseSensitive">Flag specifying whether to make this context case sensitive or not.</param>
            <param name="parentContext">The parent context.</param>
            <param name="configurationLocations">Names of configuration resources.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.#ctor(Spring.Context.Support.WebApplicationContextArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Spring.Context.Support.WebApplicationContext"/> class.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.ToString">
            <summary>
            returns detailed instance information for debugging
            </summary>
            <returns></returns>
        </member>
        <member name="F:Spring.Context.Support.WebApplicationContext.s_webContextCache">
            <summary>
            Since the HttpRuntime discards it's configurationsection cache, we maintain our own context cache.
            Despite it really speeds up context-lookup, since we don't have to go through the whole HttpConfigurationSystem
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.OnContextRegistryCleared(System.Object,System.EventArgs)">
            <summary>
            EventHandler for ContextRegistry.Cleared event. Discards webContextCache.
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.GetRootContext">
            <summary>
            Returns the root context of this web application
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.GetContext(System.String)">
            <summary>
            Returns the web application context for the given (absolute!) virtual path
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.InitObjectDefinitionReader(Spring.Objects.Factory.Xml.XmlObjectDefinitionReader)">
            <summary>
            Initializes object definition reader.
            </summary>
            <param name="objectDefinitionReader">Reader to initialize.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.CreateObjectFactory">
            <summary>
            Creates web object factory for this context using parent context's factory as a parent.
            </summary>
            <returns>Web object factory to use.</returns>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.GetContextPathWithTrailingSlash">
            <summary>
            Returns the application-relative virtual path of this context (without leading '~'!).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.CreateXmlObjectDefinitionReader(Spring.Objects.Factory.Support.DefaultListableObjectFactory)">
            <summary>
            Create a reader instance capable of handling web objects (Pages,Controls) for importing o
            bject definitions into the specified <paramref name="objectFactory"/>.
            </summary>
        </member>
        <member name="P:Spring.Context.Support.WebApplicationContext.Current">
            <summary>
            Returns the web application context for the current request's filepath
            </summary>
        </member>
        <member name="P:Spring.Context.Support.WebApplicationContext.ConfigurationLocations">
            <summary>
            An array of resource locations, referring to the XML object
            definition files with which this context is to be built.
            </summary>
            <returns>
            An array of resource locations, or <see langword="null"/> if none.
            </returns>
            <seealso cref="P:Spring.Context.Support.AbstractXmlApplicationContext.ConfigurationLocations"/>
        </member>
        <member name="P:Spring.Context.Support.WebApplicationContext.ConfigurationResources">
            <summary>
            An array of resources instances with which this context is to be built.
            </summary>
            <returns>
            An array of <see cref="T:Spring.Core.IO.IResource"/>s, or <see langword="null"/> if none.
            </returns>
            <seealso cref="P:Spring.Context.Support.AbstractXmlApplicationContext.ConfigurationLocations"/>
        </member>
        <member name="T:Spring.Context.Support.WebApplicationContextArgs">
            <summary>
            Encapsulates arguments to the <see cref="T:Spring.Context.Support.WebApplicationContext"/> class.
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContextArgs.#ctor">
            <summary>
            Initializes a new instance of the WebApplicationContextArgs class.
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContextArgs.#ctor(System.String,Spring.Context.IApplicationContext,System.String[],Spring.Core.IO.IResource[])">
            <summary>
            Initializes a new instance of the WebApplicationContextArgs class.
            </summary>
            <param name="name">The name.</param>
            <param name="parentContext">The parent context.</param>
            <param name="configurationLocations">The configuration locations.</param>
            <param name="configurationResources">The configuration resources.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContextArgs.#ctor(System.String,Spring.Context.IApplicationContext,System.String[],Spring.Core.IO.IResource[],System.Boolean)">
            <summary>
            Initializes a new instance of the WebApplicationContextArgs class.
            </summary>
            <param name="name">The name.</param>
            <param name="parentContext">The parent context.</param>
            <param name="configurationLocations">The configuration locations.</param>
            <param name="configurationResources">The configuration resources.</param>
            <param name="caseSensitive">if set to <c>true</c> [case sensitive].</param>
        </member>
        <member name="T:Spring.Context.Support.WebContextHandler">
            <summary>
            Creates an <see cref="T:Spring.Context.IApplicationContext"/> instance
            using context definitions supplied in a custom configuration and
            configures the <see cref="T:Spring.Context.Support.ContextRegistry"/> with that instance.
            </summary>
            <remarks>
            This class extends <see cref="T:Spring.Context.Support.ContextHandler">ContextHandler</see> with
            web specific behaviour. It uses <see cref="T:Spring.Context.Support.WebApplicationContext">WebApplicationContext</see>
            as default Context-Type.
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Context.Support.WebContextHandler.GetContextName(System.Object,System.Xml.XmlElement)">
            <summary>
            Gets the context name from the given <see cref="T:System.Web.Configuration.HttpConfigurationContext"/>
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebContextHandler.CreateChildContexts(Spring.Context.IApplicationContext,System.Object,System.Collections.Generic.IList{System.Xml.XmlNode})">
            <summary>
            Throws a configuration exception, if child contexts are specified.
            </summary>
            <remarks>
            Nesting contexts in webapplications is done by explicitly declaring
            spring context sections for each directory.
            </remarks>
        </member>
        <member name="M:Spring.Context.Support.WebContextHandler.InstantiateContext(Spring.Context.IApplicationContext,System.Object,System.String,System.Type,System.Boolean,System.Collections.Generic.IList{System.String})">
            <summary>
            Handles web specific details of context instantiation.
            </summary>
        </member>
        <member name="P:Spring.Context.Support.WebContextHandler.DefaultApplicationContextType">
            <summary>
            Sets default context type to <see cref="T:Spring.Context.Support.WebApplicationContext"/>
            </summary>
        </member>
        <member name="P:Spring.Context.Support.WebContextHandler.DefaultCaseSensitivity">
            <summary>
            Sets default case-sensitivity to 'false' for web-applications
            </summary>
        </member>
        <member name="T:Spring.Context.Support.WebSupportModule">
            <summary>
            Provides various support for proper handling requests.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="F:Spring.Context.Support.WebSupportModule.CURRENTHANDLER_OBJECTDEFINITION">
            <summary>
            Identifies the Objectdefinition used for the current IHttpHandler instance in TLS
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebSupportModule.#cctor">
            <summary>
            For webapplications always
            <ul>
            <li>convert IResources using the current context.</li>
            <li>use "web" as default resource protocol</li>
            <li>use <see cref="T:Spring.Threading.HybridContextStorage"/> as default threading storage</li>
            </ul>
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebSupportModule.Init(System.Web.HttpApplication)">
            <summary>
            Registers this module for all events required by the Spring.Web framework
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebSupportModule.OnConfigureHandler(System.Object,System.EventArgs)">
            <summary>
            Configures the current IHttpHandler as specified by <see cref="T:Spring.Web.Support.PageHandlerFactory"/>. If the
            <see cref="T:Spring.Web.Support.PageHandlerFactory"/> is not executed for the current request and an instance of
            <see cref="T:System.Web.UI.Page"/> is served revalidate if the instance should be configured.
            </summary>
        </member>
        <member name="M:Spring.Context.Support.WebSupportModule.ConfigureHandler(System.Web.HttpContext,System.Web.IHttpHandler,Spring.Context.IConfigurableApplicationContext,System.String,System.Boolean)">
            <summary>
            Configures the specified handler instance using the object definition <paramref name="name"/>.
            </summary>
            <remarks>
            TODO
            </remarks>
            <param name="context"></param>
            <param name="handler"></param>
            <param name="applicationContext"></param>
            <param name="name"></param>
            <param name="isContainerManaged"></param>
            <returns></returns>
        </member>
        <member name="M:Spring.Context.Support.WebSupportModule.SetCurrentHandlerConfiguration(Spring.Context.IConfigurableApplicationContext,System.String,System.Boolean)">
            <summary>
             TODO
            </summary>
            <param name="applicationContext"></param>
            <param name="name"></param>
            <param name="isContainerManaged"></param>
        </member>
        <member name="M:Spring.Context.Support.WebSupportModule.ConfigureHandlerNow(System.Web.IHttpHandler,Spring.Context.IConfigurableApplicationContext,System.String,System.Boolean)">
            <summary>
             TODO
            </summary>
            <param name="handler"></param>
            <param name="applicationContext"></param>
            <param name="name"></param>
            <param name="isContainerManaged"></param>
        </member>
        <member name="M:Spring.Context.Support.WebSupportModule.Dispose">
            <summary>
            Disposes this instance
            </summary>
        </member>
        <member name="T:Spring.Context.Support.WebSupportModule.HandlerConfigurationMetaData">
            <summary>
            Holds the handler configuration information.
            </summary>
        </member>
        <member name="T:Spring.Core.IO.WebResource">
            <summary>
            <see cref="T:Spring.Core.IO.IResource"/> implementation specifically
            for resources served up from a web server.
            </summary>
            <remarks>
            <p>
            Uses the <c>System.Web.HttpContext.Current.Server.MapPath</c>
            method to resolve the file name for a given resource.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Core.IO.WebResource.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Core.IO.WebResource"/> class.
            </summary>
            <param name="resourceName">
            The name of the file system resource (on the server).
            </param>
        </member>
        <member name="M:Spring.Core.IO.WebResource.ResolveFileHandle(System.String)">
            <summary>
            Resolves the <see cref="T:System.IO.FileInfo"/> handle 
            for the supplied <paramref name="resourceName"/>.
            </summary>
            <param name="resourceName">
            The name of the file system resource.
            </param>
            <returns>
            The <see cref="T:System.IO.FileInfo"/> handle for this resource.
            </returns>
        </member>
        <member name="M:Spring.Core.IO.WebResource.ResolveRootLocation(System.String)">
            <summary>
            Resolves the root location for the supplied <paramref name="resourceName"/>.
            </summary>
            <param name="resourceName">
            The name of the file system resource.
            </param>
            <returns>
            The root location of the resource.
            </returns>
        </member>
        <member name="M:Spring.Core.IO.WebResource.ResolveResourcePath(System.String)">
            <summary>
            Resolves the path for the supplied <paramref name="resourceName"/>.
            </summary>
            <param name="resourceName">
            The name of the file system resource.
            </param>
            <returns>
            The current path of the resource.
            </returns>
        </member>
        <member name="M:Spring.Core.IO.WebResource.ResolveBasePathPlaceHolder(System.String,System.String)">
            <summary>
            Resolves the presence of the
            <paramref name="basePathPlaceHolder"/> value
            in the supplied <paramref name="resourceName"/> into a path.
            </summary>
            <param name="resourceName">
            The name of the resource.
            </param>
            <param name="basePathPlaceHolder">
            The string that is a placeholder for a base path.
            </param>
            <returns>
            The name of the resource with any <paramref name="basePathPlaceHolder"/>
            value having been resolved into an actual path.
            </returns>
        </member>
        <member name="M:Spring.Core.IO.WebResource.IsRelativeResource(System.String)">
            <summary>
            Does the supplied <paramref name="resourceName"/> relative ?
            </summary>
            <param name="resourceName">
            The name of the resource to test.
            </param>
            <returns>
            <see langword="true"/> if resource name is relative; 
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Spring.Core.IO.WebResource.CreateResourceInstance(System.String)">
            <summary>
            Factory Method. Create a new instance of the current resource type using the given resourceName
            </summary>
        </member>
        <member name="M:Spring.Core.IO.WebResource.GetResourceLoader">
            <summary>
            The ResourceLoader to be used for resolving relative resources
            </summary>
        </member>
        <member name="P:Spring.Core.IO.WebResource.PathSeparatorChars">
            <summary>
            Gets those characters that are valid path separators for the
            resource type.
            </summary>
            <value>
            Those characters that are valid path separators for the resource
            type.
            </value>
            <seealso cref="P:Spring.Core.IO.AbstractResource.PathSeparatorChars"/>
        </member>
        <member name="T:Spring.DataBinding.DataSourceItemFormatter">
            <summary>
            This formatter acts as an adapter to a datasource. It parses a given datasource into 
            a table to allow converting back and forth between objects and their keys during formatting.
            </summary>
            <remarks>
            <para>
            The DataSourceItemFormatter expects the "source" to have 2 properties named "DataSourceField" and "DataValueField".
            </para>
            </remarks>
        </member>
        <member name="T:Spring.DataBinding.IBindingAwareFormatter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spring.DataBinding.IBindingAwareFormatter.SetBindingContext(System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Spring.DataBinding.BindingDirection)">
            <summary>
            Sets the binding context of this formatter.
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="variables"></param>
            <param name="direction"></param>
        </member>
        <member name="M:Spring.DataBinding.IBindingAwareFormatter.ClearBindingContext">
            <summary>
            Clears the binding context of this formatter.
            </summary>
        </member>
        <member name="M:Spring.DataBinding.DataSourceItemFormatter.#ctor(System.String,System.String)">
            <summary>
            Initialize this instance.
            </summary>
            <param name="dataSourceField">The name of the "source"s property containing the dataSource</param>
            <param name="dataValueField">The name of the "source"s property containing the name of the key property</param>
        </member>
        <member name="M:Spring.DataBinding.DataSourceItemFormatter.SetBindingContext(System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Spring.DataBinding.BindingDirection)">
            <summary>
            Sets the bindingContext for the current thread.
            </summary>
            <param name="source">The source object</param>
            <param name="target">The target object</param>
            <param name="variables">Variables to be used during binding</param>
            <param name="direction">The current binding's direction</param>
        </member>
        <member name="M:Spring.DataBinding.DataSourceItemFormatter.ClearBindingContext">
            <summary>
            Reset the current thread's binding context.
            </summary>
        </member>
        <member name="M:Spring.DataBinding.DataSourceItemFormatter.Initialize(System.Collections.IEnumerable,System.String,Spring.DataBinding.BindingDirection)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="dataSource">The datasource containing list items</param>
            <param name="dataItemKeyField">The name of the listitem's property that evaluates to the item's key</param>
            <param name="direction">The direction of the current binding</param>
        </member>
        <member name="M:Spring.DataBinding.DataSourceItemFormatter.Format(System.Object)">
            <summary>
            Returns the key of the specified value object.
            </summary>
            <param name="value">The value to extract the key from.</param>
            <returns>Key extracted from <paramref name="value"/>.</returns>
        </member>
        <member name="M:Spring.DataBinding.DataSourceItemFormatter.Parse(System.String)">
            <summary>
            Return the object with the specified key from the datasource.
            </summary>
            <param name="key">The key of the object.</param>
            <returns>Parsed <paramref name="key"/>.</returns>
        </member>
        <member name="T:Spring.DataBinding.HttpRequestListBindingContainer">
            <summary>
            Binds agroup of HTTP request multi-valued items to the data model.
            </summary>
            <remarks>
            Due to the fact, that browsers don't send the values of unchecked checkboxes, you 
            can't use <see cref="T:Spring.DataBinding.HttpRequestListBindingContainer"/> for binding to checkboxes.
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.DataBinding.HttpRequestListBindingContainer.#ctor(System.String,System.String,System.Type)">
            <summary>
            Creates a new instance of <see cref="T:Spring.DataBinding.HttpRequestListBindingContainer"/>.
            </summary>
            <param name="requestParams">
            Comma separated list of multi-valued request parameters that
            should be used to create a target item.
            </param>
            <param name="targetList">
            Expression that identifies a target list items should be added to.
            </param>
            <param name="itemType">
            The type of the target item.
            </param>
        </member>
        <member name="M:Spring.DataBinding.HttpRequestListBindingContainer.AddBinding(System.String,System.String,Spring.DataBinding.BindingDirection,Spring.Globalization.IFormatter)">
            <summary>
            Adds the <see cref="T:Spring.DataBinding.SimpleExpressionBinding"/> binding.
            </summary>
            <remarks>
            This is a convinience method for adding <b>SimpleExpressionBinding</b>,
            one of the most often used binding types, to the bindings list.
            </remarks>
            <param name="sourceExpression">
            The source expression.
            </param>
            <param name="targetExpression">
            The target expression.
            </param>
            <param name="direction">
            Binding direction.
            </param>
            <param name="formatter">
            <see cref="T:Spring.Globalization.IFormatter"/> to use for value formatting and parsing.
            </param>
            <returns>
            Added <see cref="T:Spring.DataBinding.SimpleExpressionBinding"/> instance.
            </returns>
        </member>
        <member name="M:Spring.DataBinding.HttpRequestListBindingContainer.BindSourceToTarget(System.Object,System.Object,Spring.Validation.IValidationErrors,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Binds source object to target object.
            </summary>
            <param name="source">
              The source object.
            </param>
            <param name="target">
              The target object.
            </param>
            <param name="validationErrors">
              Validation errors collection that type conversion errors should be added to.
            </param>
            <param name="variables">
              Variables that should be used during expression evaluation.
            </param>
        </member>
        <member name="M:Spring.DataBinding.HttpRequestListBindingContainer.BindTargetToSource(System.Object,System.Object,Spring.Validation.IValidationErrors,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Binds target object to source object.
            </summary>
            <param name="source">
              The source object.
            </param>
            <param name="target">
              The target object.
            </param>
            <param name="validationErrors">
              Validation errors collection that type conversion errors should be added to.
            </param>
            <param name="variables">
              Variables that should be used during expression evaluation.
            </param>
        </member>
        <member name="T:Spring.DataBinding.IWebDataBound">
            <summary>
            A page or control must implement this interface to support spring's databinding infrastructure.
            </summary>
            <remarks>
            <seealso cref="T:Spring.DataBinding.IDataBound"/>
            <seealso cref="T:Spring.DataBinding.IBindingContainer"/>
            <seealso cref="T:Spring.Web.UI.Controls.DataBindingPanel"/>
            </remarks>
        </member>
        <member name="P:Spring.DataBinding.IWebDataBound.UniqueID">
            <summary>
            Return the UniqueID of this page or control.
            </summary>
        </member>
        <member name="P:Spring.DataBinding.IWebDataBound.ApplicationContext">
            <summary>
            Return the <see cref="T:Spring.Context.IApplicationContext"/> where <see cref="T:Spring.Globalization.IFormatter"/> 
            instances should be optained from.
            </summary>
        </member>
        <member name="E:Spring.DataBinding.IWebDataBound.DataBindingsInitialized">
            <summary>
            This event is raised to initialize bindings for <see cref="P:Spring.DataBinding.IDataBound.BindingManager"/>.
            </summary>
        </member>
        <member name="T:Spring.DataBinding.MultipleSelectionListControlBinding">
            <summary>
             Handles binding of a multiple selection ListControl to a target's IList property.
            </summary>
        </member>
        <member name="M:Spring.DataBinding.MultipleSelectionListControlBinding.#ctor(System.String,System.String,Spring.DataBinding.BindingDirection,Spring.Globalization.IFormatter)">
            <summary>
             Creates a new instance of this binding.
            </summary>
            <param name="sourceExpression">The expression that will evaluate to the <see cref="T:System.Web.UI.WebControls.ListControl"/> acting as the source</param>
            <param name="targetExpression">The expression that will evaluate to an <see cref="T:System.Collections.IList"/> property acting as the target</param>
             <param name="direction">Binding's direction</param>
            <param name="itemFormatter">An optional formatter converting target items into <see cref="P:System.Web.UI.WebControls.ListItem.Value"/> and back</param>
             <remarks>
             If no formatter is specified, a <see cref="T:Spring.DataBinding.DataSourceItemFormatter"/> will be used.
             </remarks>
        </member>
        <member name="M:Spring.DataBinding.MultipleSelectionListControlBinding.DoBindSourceToTarget(System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Actually performs unbinding the ListControl's selected values into the target's <see cref="T:System.Collections.IList"/>
            </summary>
        </member>
        <member name="M:Spring.DataBinding.MultipleSelectionListControlBinding.DoBindTargetToSource(System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Actually performs binding the targetlist to the ListControl.
            </summary>
        </member>
        <member name="M:Spring.DataBinding.MultipleSelectionListControlBinding.SetSourceValue(System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Setting source value is not allowed in this bindingType.
            </summary>
        </member>
        <member name="M:Spring.DataBinding.MultipleSelectionListControlBinding.SetTargetValue(System.Object,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Setting target value is not allowed in this bindingType.
            </summary>
        </member>
        <member name="T:Spring.Globalization.Resolvers.CookieCultureResolver">
            <summary>
            Culture resolver that uses cookie to store culture information.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="T:Spring.Globalization.Resolvers.DefaultWebCultureResolver">
            <summary>
            Default culture resolver for web applications. Contains some common utility methods for web culture resolvers.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Globalization.Resolvers.DefaultWebCultureResolver.GetDefaultLocale">
            <summary>
            Returns default culture. If <see cref="P:Spring.Globalization.Resolvers.DefaultCultureResolver.DefaultCulture"/> property is not set, 
            it tries to get culture from the request headers
            and falls back to a current thread's culture if no headers are available.
            </summary>
            <returns>Default culture to use.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.DefaultWebCultureResolver.GetRequestLanguage">
            <summary>
            Extracts the users favorite language from "accept-language" header of the current request.
            </summary>
            <returns>a language string if any or <c>null</c>, if no languages have been sent with the request</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.DefaultWebCultureResolver.GetCulture(System.String)">
            <summary>
            Resolves a culture by name.
            </summary>
            <param name="cultureName">the name of the culture to get</param>
            <returns>a (possible neutral!) <see cref="T:System.Globalization.CultureInfo"/> or <c>null</c>, if culture could not be resolved</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.DefaultWebCultureResolver.ResolveCulture">
            <summary>
            Resolves the culture from the context.
            </summary>
            <returns>Culture that should be used to render view.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.DefaultWebCultureResolver.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Not supported for this implementation.
            </summary>
            <param name="culture">The new culture or <code>null</code> to clear the culture.</param>
        </member>
        <member name="M:Spring.Globalization.Resolvers.CookieCultureResolver.ResolveCulture">
            <summary>
            Resolves the culture from the request.
            </summary>
            <remarks>
            If the culture cookie doesn't exist, this method will return 
            the value of the 'Accept-Language' request header, or if no
            headers are specified, the culture of the current server thread.
            </remarks>
            <returns>Culture that should be used to render view.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.CookieCultureResolver.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Sets the culture.
            </summary>
            <param name="culture">The new culture or <code>null</code> to clear the culture.</param>
        </member>
        <member name="M:Spring.Globalization.Resolvers.CookieCultureResolver.CreateCookie(System.Globalization.CultureInfo)">
            <summary>
            Creates cookie for the specified culture.
            </summary>
            <param name="culture">Culture to store in a cookie.</param>
            <returns>Created cookie.</returns>
        </member>
        <member name="T:Spring.Globalization.Resolvers.RequestCultureResolver">
            <summary>
            Culture resolver that uses request headers to determine culture. If no languages
            are specified in the request headers, it returns default culture specifed, and 
            if no default culture was specifed it returns current culture for the executing 
            server thread.
            </summary>
            <remarks>
            <b>Note:</b> This culture resolver cannot be used to change the culture 
            because request headers cannot be modified. In order to change the culture
            when using this culture resolver user has to change language settings in
            the web browser.
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Globalization.Resolvers.RequestCultureResolver.ResolveCulture">
            <summary>
            Tries to determine culture from the request headers. If no languages
            are specified in the request headers, it returns default culture specifed, and 
            if no default culture was specifed it returns current culture for the executing 
            server thread.
            </summary>
            <returns>Culture that should be used to render view.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.RequestCultureResolver.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Not supported for this resolver implementation
            </summary>
            <param name="culture">The new culture or <code>null</code> to clear the culture.</param>
        </member>
        <member name="T:Spring.Globalization.Resolvers.SessionCultureResolver">
            <summary>
            Culture resolver that uses HTTP session to store culture information.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Globalization.Resolvers.SessionCultureResolver.ResolveCulture">
            <summary>
            Resolves the culture from the request.
            </summary>
            <remarks>
            If culture information doesn't exist in the session, it will be created and its value will 
            be set to the value of the 'Accept-Language' request header, or if no
            headers are specified to the culture of the current server thread.
            </remarks>
            <returns>Culture that should be used to render view.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.SessionCultureResolver.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Sets the culture.
            </summary>
            <param name="culture">The new culture or <code>null</code> to clear the culture.</param>
        </member>
        <member name="P:Spring.Globalization.Resolvers.SessionCultureResolver.SessionCulture">
            <summary>
            Gets/Sets the current session's culture.
            </summary>
        </member>
        <member name="T:Spring.Globalization.AspNetResourceCache">
            <summary>
            Resource cache implementation that uses ASP.NET <see cref="T:System.Web.Caching.Cache"/> to cache resources.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Globalization.AspNetResourceCache.GetResources(System.String)">
            <summary>
            Gets the list of resources from cache.
            </summary>
            <param name="cacheKey">Cache key to use for lookup.</param>
            <returns>A list of cached resources for the specified target object and culture.</returns>
        </member>
        <member name="M:Spring.Globalization.AspNetResourceCache.PutResources(System.String,System.Collections.Generic.IList{Spring.Globalization.Resource})">
            <summary>
            Puts the list of resources in the cache.
            </summary>
            <param name="cacheKey">Cache key to use for the specified resources.</param>
            <param name="resources">A list of resources to cache.</param>
        </member>
        <member name="T:Spring.Objects.Factory.Support.ChildWebObjectDefinition">
            <summary>
            Web object definitions extend <see cref="T:Spring.Objects.Factory.Support.RootObjectDefinition"/>
            by adding scope property.
            </summary>
            <remarks>
            <p>
            This is the most common type of object definition in ASP.Net web applications
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="T:Spring.Objects.Factory.Support.IWebObjectDefinition">
            <summary>
            Defines additional members web object definitions need to implement.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="P:Spring.Objects.Factory.Support.IWebObjectDefinition.Scope">
            <summary>
            Gets or sets scope for the web object (application, session or request)
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.IWebObjectDefinition.IsPage">
            <summary>
            Returns true if web object is .aspx page.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.IWebObjectDefinition.PageName">
            <summary>
            Gets the rooted url of the .aspx page, if object definition represents page.
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.#ctor(System.String,System.Type,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.ChildWebObjectDefinition"/> class
            for a singleton, providing property values and constructor arguments.
            </summary>
            <param name="parentName">Name of the parent object definition.</param>
            <param name="type">The class of the object to instantiate.</param>
            <param name="arguments">
            The <see cref="T:Spring.Objects.Factory.Config.ConstructorArgumentValues"/>
            to be applied to a new instance of the object.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.#ctor(System.String,System.String,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.ChildWebObjectDefinition"/> class
            for a singleton, providing property values and constructor arguments.
            </summary>
            <param name="parentName">Name of the parent object definition.</param>
            <param name="typeName">The class name of the object to instantiate.</param>
            <param name="arguments">
            The <see cref="T:Spring.Objects.Factory.Config.ConstructorArgumentValues"/>
            to be applied to a new instance of the object.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.#ctor(System.String,System.String,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.ChildWebObjectDefinition"/> class
            for an .aspx page, providing property values.
            </summary>
            <param name="parentName">Name of the parent object definition.</param>
            <param name="pageName">Name of the .aspx page to instantiate.</param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.OverrideFrom(Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Overrides this object's values using values from <c>other</c> argument.
            </summary>
            <param name="other">The object to copy values from.</param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.ToString">
            <summary>
            A <see cref="T:System.String"/> that represents the current
            <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current
            <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Spring.Objects.Factory.Support.ChildWebObjectDefinition.Spring#Objects#Factory#Support#IWebObjectDefinition#Scope">
            <summary>
            Object scope.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.ChildWebObjectDefinition.IsPage">
            <summary>
            Returns true if web object is .aspx page.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.ChildWebObjectDefinition.PageName">
            <summary>
            Gets the rooted url of the .aspx page, if object definition represents page.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.ChildWebObjectDefinition.IsSingleton">
            <summary>
            Forces ASP pages to be treated as prototypes all the time inorder to comply with ASP.Net requirements.
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Support.IWebObjectNameGenerator">
            <summary>
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Objects.Factory.Support.RootWebObjectDefinition">
            <summary>
            Web object definitions extend <see cref="T:Spring.Objects.Factory.Support.RootObjectDefinition"/>
            by adding scope property.
            </summary>
            <remarks>
            	<p>
            This is the most common type of object definition in ASP.Net web applications
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.#ctor(System.Type,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.RootObjectDefinition"/> class
            for a singleton, providing property values and constructor arguments.
            </summary>
            <param name="type">
            The type of the object to instantiate.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
            <param name="arguments">
            The <see cref="T:Spring.Objects.Factory.Config.ConstructorArgumentValues"/>
            to be applied to a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.#ctor(System.String,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.RootObjectDefinition"/> class
            for a singleton, providing property values and constructor arguments.
            </summary>
            <param name="typeName">
            The assembly qualified <see cref="P:System.Type.FullName"/> of the object to instantiate.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
            <param name="arguments">
            The <see cref="T:Spring.Objects.Factory.Config.ConstructorArgumentValues"/>
            to be applied to a new instance of the object.
            </param>
            <remarks>
            <p>
            Takes an object class name to avoid eager loading of the object class.
            </p>
            </remarks>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.#ctor(System.String,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.RootWebObjectDefinition"/> class
            for an .aspx page, providing property values.
            </summary>
            <param name="pageName">
            Name of the .aspx page to instantiate.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.#ctor(Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.RootWebObjectDefinition"/> class
            </summary>
            <param name="other">
            The definition that is to be copied.
            </param>
            <remarks>
            <p>
            Deep copy constructor.
            </p>
            </remarks>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.OverrideFrom(Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Overrides this object's values using values from <c>other</c> argument.
            </summary>
            <param name="other">The object to copy values from.</param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.ToString">
            <summary>
            A <see cref="T:System.String"/> that represents the current
            <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current
            <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Spring.Objects.Factory.Support.RootWebObjectDefinition.Spring#Objects#Factory#Support#IWebObjectDefinition#Scope">
            <summary>
            Object scope.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.RootWebObjectDefinition.IsPage">
            <summary>
            Returns true if web object is .aspx page.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.RootWebObjectDefinition.PageName">
            <summary>
            Gets the rooted url of the .aspx page, if object definition represents page.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.RootWebObjectDefinition.IsSingleton">
            <summary>
            Forces ASP pages to be treated as prototypes all the time inorder to comply with ASP.Net requirements.
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Support.WebInstantiationStrategy">
            <summary>
            Object instantiation strategy for use in
            <see cref="T:Spring.Objects.Factory.Support.WebObjectFactory"/>.
            </summary>
            <remarks>
            <p>
            This strategy checks if objects id ASP.Net page and if it is uses
            PageParser to compile and instantiate page instance. Otherwise it
            delagates call to its parent.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebInstantiationStrategy.#ctor">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.WebInstantiationStrategy"/> class.
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebInstantiationStrategy.Instantiate(Spring.Objects.Factory.Support.RootObjectDefinition,System.String,Spring.Objects.Factory.IObjectFactory)">
            <summary>
            Instantiate an instance of the object described by the supplied
            <paramref name="definition"/> from the supplied <paramref name="factory"/>.
            </summary>
            <param name="definition">
            The definition of the object that is to be instantiated.
            </param>
            <param name="name">
            The name associated with the object definition. The name can be the null
            or zero length string if we're autowiring an object that doesn't belong
            to the supplied <paramref name="factory"/>.
            </param>
            <param name="factory">
            The owning <see cref="T:Spring.Objects.Factory.IObjectFactory"/>
            </param>
            <returns>
            An instance of the object described by the supplied
            <paramref name="definition"/> from the supplied <paramref name="factory"/>.
            </returns>
        </member>
        <member name="T:Spring.Objects.Factory.Support.WebObjectDefinitionFactory">
            <summary>
            Custom implementation of <see cref="T:Spring.Objects.Factory.Support.IObjectDefinitionFactory"/>
            for web applications.
            </summary>
            <remarks>
            <p>
            This implementation adds support for .aspx pages and scoped objects.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectDefinitionFactory.CreateObjectDefinition(System.String,System.String,System.AppDomain)">
            <summary>
            Factory style method for getting concrete
            <see cref="T:Spring.Objects.Factory.Support.IConfigurableObjectDefinition"/>
            instances.
            </summary>
            <remarks>If no parent is specified, a RootWebObjectDefinition is created, otherwise a 
            ChildWebObjectDefinition.</remarks>
            <param name="typeName">The <see cref="T:System.Type"/> of the defined object.</param>
            <param name="parent">The name of the parent object definition (if any).</param>
            <param name="domain">The <see cref="T:System.AppDomain"/> against which any class names
            will be resolved into <see cref="T:System.Type"/> instances.</param>
            <returns>
            An
            <see cref="T:Spring.Objects.Factory.Support.IConfigurableObjectDefinition"/>
            instance.
            </returns>
        </member>
        <member name="T:Spring.Objects.Factory.Support.WebObjectFactory">
            <summary>
            Concrete implementation of
            <see cref="T:Spring.Objects.Factory.IListableObjectFactory"/> that knows 
            how to handle <see cref="T:Spring.Objects.Factory.Support.IWebObjectDefinition"/>s.
            </summary>
            <remarks>
            <p>
            This class should only be used within the context of an ASP.NET web application.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="F:Spring.Objects.Factory.Support.WebObjectFactory.contextPath">
            <summary>
            Holds the virtual path this factory has been created from.
            </summary>
        </member>
        <member name="F:Spring.Objects.Factory.Support.WebObjectFactory.createObjectDictionary">
            <summary>
            Holds the handler reference for creating an object dictionary
            matching this factory's case-sensitivity
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.EnsureEventHandlersRegistered">
            <summary>
            Registers events handlers with <see cref="T:Spring.Context.Support.WebSupportModule"/> to ensure
            proper disposal of 'request'- and 'session'-scoped objects
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.WebObjectFactory"/> class.
            </summary>
            <param name="contextPath">The virtual path resources will be relative resolved to.</param>
            <param name="caseSensitive">Flag specifying whether to make this object factory case sensitive or not.</param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.#ctor(System.String,System.Boolean,Spring.Objects.Factory.IObjectFactory)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.WebObjectFactory"/> class.
            </summary>
            <param name="contextPath">The virtual path resources will be relative resolved to.</param>
            <param name="caseSensitive">Flag specifying whether to make this object factory case sensitive or not.</param>
            <param name="parentFactory">
            The parent object factory.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.CreateObjectDictionary">
            <summary>
            Creates a dictionary matching this factory's case sensitivity behaviour.
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.CreateRootObjectDefinition(Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Creates the root object definition.
            </summary>
            <param name="templateDefinition">The template definition.</param>
            <returns>Root object definition.</returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.GetSingleton(System.String)">
            <summary>
            Tries to find cached object for the specified name. 
            </summary>
            <remarks>
            This implementation tries to find object first in the Request scope,
            then in the Session scope and finally in the Application scope.
            </remarks>
            <param name="objectName">Object name to look for.</param>
            <returns>Cached object if found, null otherwise.</returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.GetScopedSingleton(System.String,System.Collections.IDictionary)">
            <summary>
            Looks up an <paramref name="objectName"/> in the specified cache dictionary.
            </summary>
            <param name="objectName">the name to lookup.</param>
            <param name="scopedSingletonCache">the cache dictionary to search</param>
            <returns>the found instance. null otherwise</returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.CreateAndCacheSingletonInstance(System.String,Spring.Objects.Factory.Support.RootObjectDefinition,System.Object[])">
            <summary>
            Creates a singleton instance for the specified object name and definition.
            </summary>
            <param name="objectName">
            The object name (will be used as the key in the singleton cache key).
            </param>
            <param name="objectDefinition">The object definition.</param>
            <param name="arguments">
            The arguments to use if creating a prototype using explicit arguments to
            a static factory method. It is invalid to use a non-null arguments value
            in any other case.
            </param>
            <returns>The created object instance.</returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.CreateAndCacheScopedSingletonInstance(System.String,Spring.Objects.Factory.Support.RootObjectDefinition,System.Object[],System.Collections.IDictionary)">
            <summary>
            Creates a singleton instance for the specified object name and definition 
            and caches the instance in the specified dictionary
            </summary>
            <param name="objectName">
            The object name (will be used as the key in the singleton cache key).
            </param>
            <param name="objectDefinition">The object definition.</param>
            <param name="arguments">
            The arguments to use if creating a prototype using explicit arguments to
            a static factory method. It is invalid to use a non-null arguments value
            in any other case.
            </param>
            <param name="scopedSingletonCache">the dictionary to be used for caching singleton instances</param>
            <returns>The created object instance.</returns>
            <remarks>
            If the object is successfully created, <paramref name="scopedSingletonCache"/> 
            contains the cached instance with the key <paramref name="objectName"/>.
            </remarks>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.RegisterDisposableObjectIfNecessary(System.String,System.Object,Spring.Objects.Factory.Support.RootObjectDefinition)">
            <summary>
            We need this override so that Web Scoped Singletons are not registered in general 
            DisposalObjectRegister 
            </summary>
            <param name="name"></param>
            <param name="instance"></param>
            <param name="objectDefinition"></param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.AddEagerlyCachedSingleton(System.String,Spring.Objects.Factory.Config.IObjectDefinition,System.Object)">
            <summary>
            Add the created, but yet unpopulated singleton to the singleton cache
            to be able to resolve circular references
            </summary>
            <param name="objectName">the name of the object to add to the cache.</param>
            <param name="objectDefinition">the definition used to create and populated the object.</param>
            <param name="rawSingletonInstance">the raw object instance.</param>
            <remarks>
            Derived classes may override this method to select the right cache based on the object definition.
            </remarks>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.RemoveEagerlyCachedSingleton(System.String,Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Remove the specified singleton from the singleton cache that has 
            been added before by a call to <see cref="M:Spring.Objects.Factory.Support.WebObjectFactory.AddEagerlyCachedSingleton(System.String,Spring.Objects.Factory.Config.IObjectDefinition,System.Object)"/>
            </summary>
            <param name="objectName">the name of the object to remove from the cache.</param>
            <param name="objectDefinition">the definition used to create and populated the object.</param>
            <remarks>
            Derived classes may override this method to select the right cache based on the object definition.
            </remarks>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.ConfigureObject(System.String,Spring.Objects.Factory.Support.RootObjectDefinition,Spring.Objects.IObjectWrapper)">
            <summary>
            Configures object instance by injecting dependencies, satisfying Spring lifecycle
            interfaces and applying object post-processors.
            </summary>
            <param name="name">
            The name of the object definition expressing the dependencies that are to
            be injected into the supplied <parameref name="target"/> instance.
            </param>
            <param name="definition">
            An object definition that should be used to configure object.
            </param>
            <param name="wrapper">
            A wrapped object instance that is to be so configured.
            </param>
            <seealso cref="M:Spring.Objects.Factory.IObjectFactory.ConfigureObject(System.Object,System.String)"/>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.OnEndRequest(System.Web.HttpContext)">
            <summary>
            Disposes all 'request'-scoped objects at the end of each Request
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.OnEndSession(System.Web.SessionState.HttpSessionState,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            Disposes all 'session'-scoped objects at the end of a session
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.CreateCaseInsensitiveDictionary">
            <summary>
            Creates a case insensitive hashtable instance
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.CreateCaseSensitiveDictionary">
            <summary>
            Creates a case sensitive hashtable instance
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.WebObjectFactory.ContextPath">
            <summary>
            Returns the virtual path this object factory is associated with.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.WebObjectFactory.Context">
            <summary>
            Convinience accessor for HttpContext
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.WebObjectFactory.Request">
            <summary>
            Get the table of 'request'-scoped objects.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.WebObjectFactory.Session">
            <summary>
            Get the table of 'session'-scoped objects. Returns null, if Session is disabled.
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Support.WebObjectUtils">
            <summary>
            Miscellaneous utility methods to support web functionality within Spring.Objects
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectUtils.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Util.WebUtils"/> class.
            </summary>
            <remarks>
            <p>
            This is a utility class, and as such exposes no public constructors.
            </p>
            </remarks>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectUtils.CreatePageInstance(System.String)">
            <summary>
            Creates an instance of the ASPX page
            referred to by the supplied <paramref name="pageUrl"/>.
            </summary>
            <param name="pageUrl">
            The URL of the ASPX page.
            </param>
            <returns>Page instance.</returns>
            <exception cref="T:Spring.Objects.Factory.ObjectCreationException">
            If this method is not called in the scope of an active web session
            (i.e. the implementation this method depends on this code executing
            in the environs of a running web server such as IIS); or if the
            page could not be instantiated (for whatever reason, such as the
            ASPX <paramref name="pageUrl"/> not actually existing).
            </exception>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectUtils.CreateHandler(System.String)">
            <summary>
            Creates the raw handler instance without any exception handling
            </summary>
            <param name="pageUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectUtils.GetPageType(System.String)">
            <summary>
            Returns the <see cref="T:System.Type"/> of the ASPX page
            referred to by the supplied <paramref name="pageUrl"/>.
            </summary>
            <remarks>
            <p>
            As indicated by the exception that can be thrown by this method,
            the ASPX page referred to by the supplied <paramref name="pageUrl"/>
            does have to be instantiated in order to determine its 
            see cref="System.Type"/&gt;
            </p>
            </remarks>
            <param name="pageUrl">
            The filename of the ASPX page.
            </param>
            <returns>
            The <see cref="T:System.Type"/> of the ASPX page
            referred to by the supplied <paramref name="pageUrl"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="pageUrl"/> is <see langword="null"/> or
            contains only whitespace character(s).
            </exception>
            <exception cref="T:Spring.Objects.Factory.ObjectCreationException">
            If this method is not called in the scope of an active web session
            (i.e. the implementation this method depends on this code executing
            in the environs of a running web server such as IIS); or if the
            page could not be instantiated (for whatever reason, such as the
            ASPX <paramref name="pageUrl"/> not actually existing).
            </exception>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectUtils.GetCompiledPageType(System.String)">
            <summary>
            Calls the underlying ASP.NET infrastructure to obtain the compiled page type 
            relative to the current <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath"/>.
            </summary>
            <param name="pageUrl">
            The filename of the ASPX page relative to the current <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath"/>
            </param>
            <returns>
            The <see cref="T:System.Type"/> of the ASPX page
            referred to by the supplied <paramref name="pageUrl"/>.
            </returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectUtils.GetControlType(System.String)">
            <summary>
            Gets the controls type from a given filename
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Xml.WebObjectDefinitionDocumentReader">
            <summary>
            An <see cref="T:Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader"/> capable of handling web objects (Pages,Controls).
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionDocumentReader.CreateHelper(Spring.Objects.Factory.Xml.XmlReaderContext,System.Xml.XmlElement)">
            <summary>
            Creates an <see cref="T:Spring.Objects.Factory.Xml.WebObjectDefinitionParserHelper"/> instance for the given 
            <paramref name="readerContext"/> and <paramref name="root"/> element.
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Xml.WebObjectDefinitionParserHelper">
            <summary>
            An <see cref="T:Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper"/> capable of handling web objects (Pages,Controls)
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionParserHelper.#ctor(Spring.Objects.Factory.Support.IWebObjectNameGenerator,Spring.Objects.Factory.Xml.XmlReaderContext,System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Spring.Objects.Factory.Xml.WebObjectDefinitionParserHelper"/> class.
            </summary>
            <param name="webObjectNameGenerator">used for generating object definition names from web object types (page, control)</param>
            <param name="readerContext">The reader context.</param>
            <param name="root">The root element of the xml document to parse</param>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionParserHelper.GetScope(System.String)">
            <summary>
            Gets the scope out of the supplied <paramref name="value"/>.
            </summary>
            <remarks>
            <p>
            If the supplied <paramref name="value"/> is invalid
            (i.e. it does not resolve to one of the 
            <see cref="T:Spring.Objects.Factory.Support.ObjectScope"/> values),
            then the return value of this method call will be
            <see cref="F:Spring.Objects.Factory.Support.ObjectScope.Default"/>;
            no exception will be raised (although the value of the invalid
            scope <paramref name="value"/> will be logged).
            </p>
            </remarks>
            <param name="value">The string containing the scope name.</param>
            <returns>The scope.</returns>
            <seealso cref="T:Spring.Objects.Factory.Support.ObjectScope"/>
        </member>
        <member name="T:Spring.Objects.Factory.Xml.WebObjectDefinitionReader">
            <summary>
            An <see cref="T:Spring.Objects.Factory.Xml.XmlObjectDefinitionReader"/> capable of handling web object definitions (Pages, Controls)
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionReader.#ctor(System.String,Spring.Objects.Factory.Support.IObjectDefinitionRegistry,System.Xml.XmlResolver)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Xml.XmlObjectDefinitionReader"/> class.
            </summary>
            <param name="contextVirtualPath">the (rooted) virtual path to resolve relative virtual paths.</param>
            <param name="registry">
            The <see cref="T:Spring.Objects.Factory.Support.IObjectDefinitionRegistry"/>
            instance that this reader works on.
            </param>
            <param name="resolver">the <see cref="T:System.Xml.XmlResolver"/> to use for resolving entities.</param>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionReader.CreateObjectDefinitionDocumentReader">
            <summary>
            Creates the <see cref="T:Spring.Objects.Factory.Xml.IObjectDefinitionDocumentReader"/> to use for actually
            reading object definitions from an XML document.
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionReader.CreateControlDefinitionName(System.String)">
            <summary>
            Create an object definition name for the given control path
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionReader.CreatePageDefinitionName(System.String)">
            <summary>
            Create an object definition name for the given page path
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Xml.WebObjectsNamespaceParser">
            <summary>
            A custom implementation of the
            <see cref="T:Spring.Objects.Factory.Xml.INamespaceParser"/>
            interface that properly handles web application specific attributes,
            such as object scope.
            </summary>
            <remarks>
            <p>
            Parses object definitions according to the standard Spring.NET schema.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <see cref="T:Spring.Objects.Factory.Xml.ObjectsNamespaceParser"/>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectsNamespaceParser.#ctor">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Xml.WebObjectsNamespaceParser"/> class.
            </summary>
        </member>
        <member name="T:Spring.Threading.HttpContextStorage">
            <summary>
            Implements <see cref="T:Spring.Threading.IThreadStorage"/> by using <see cref="T:System.Web.HttpContext"/>.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Threading.HttpContextStorage.GetData(System.String)">
            <summary>
            Retrieves an object with the specified name.
            </summary>
            <param name="name">The name of the item.</param>
            <returns>The object in the context associated with the specified name or null if no object has been stored previously</returns>
        </member>
        <member name="M:Spring.Threading.HttpContextStorage.SetData(System.String,System.Object)">
            <summary>
            Stores a given object and associates it with the specified name.
            </summary>
            <param name="name">The name with which to associate the new item.</param>
            <param name="value">The object to store in the call context.</param>
        </member>
        <member name="M:Spring.Threading.HttpContextStorage.FreeNamedDataSlot(System.String)">
            <summary>
            Empties a data slot with the specified name.
            </summary>
            <param name="name">The name of the data slot to empty.</param>
        </member>
        <member name="T:Spring.Threading.HybridContextStorage">
            <summary>
            Implements <see cref="T:Spring.Threading.IThreadStorage"/> by using both <see cref="T:System.Web.HttpContext"/> and <see cref="T:System.Runtime.Remoting.Messaging.CallContext"/> and choosing dynamically between them.
            </summary>
            <remarks>
            In web applications a single Request may be executed on different threads. In this case HttpContext.Current is the only invariant.<br/>
            This implementation dynamically chooses between <see cref="T:System.Runtime.Remoting.Messaging.CallContext">System.Runtime.Remoting.Messaging.CallContext</see> 
            and <see cref="T:System.Web.HttpContext">System.Web.HttpContext</see> to store data.
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Threading.HybridContextStorage.GetData(System.String)">
            <summary>
            Retrieves an object with the specified name.
            </summary>
            <param name="name">The name of the item.</param>
            <returns>The object in the context associated with the specified name or null if no object has been stored previously</returns>
        </member>
        <member name="M:Spring.Threading.HybridContextStorage.SetData(System.String,System.Object)">
            <summary>
            Stores a given object and associates it with the specified name.
            </summary>
            <param name="name">The name with which to associate the new item.</param>
            <param name="value">The object to store in the call context.</param>
        </member>
        <member name="M:Spring.Threading.HybridContextStorage.FreeNamedDataSlot(System.String)">
            <summary>
            Empties a data slot with the specified name.
            </summary>
            <param name="name">The name of the data slot to empty.</param>
        </member>
        <member name="T:Spring.Util.HttpContextSwitch">
            <summary>
            Performs a <see cref="M:System.Web.HttpContext.RewritePath(System.String)"/>. Original path will be restored on <see cref="M:Spring.Util.HttpContextSwitch.Dispose"/>
            </summary>
            <remarks>
            Rewrites the current HttpContext's filepath to &lt;directory&gt;/currentcontext.dummy.<br/>
            This affects resolving resources by calls to <see cref="M:Spring.Util.ConfigurationUtils.GetSection(System.String)"/> and <see cref="M:System.Web.HttpRequest.MapPath(System.String)"/><br/>
            Original path is restored during <see cref="M:Spring.Util.HttpContextSwitch.Dispose"/>.
            </remarks>
            <example>
            <code>
            using( new HttpContextSwitch( "/path" ) )
            {
                Response.Write( Request.FilePath ); // writes "/path/currentcontext.dummy" to response.
            }
            // Request.FilePath has been reset to original url here
            </code>
            </example>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Util.HttpContextSwitch.#ctor(System.String)">
            <summary>
            Performs an immediate call to <see cref="M:System.Web.HttpContext.RewritePath(System.String)"/>
            </summary>
            <param name="virtualDirectory">a directory path (without trailing filename!)</param>
        </member>
        <member name="M:Spring.Util.HttpContextSwitch.Dispose">
            <summary>
            Restores original path if necessary
            </summary>
        </member>
        <member name="T:Spring.Util.ISessionState">
            <summary>
            Abstracts HttpSession
            </summary>
        </member>
        <member name="M:Spring.Util.ISessionState.Abandon">
            <summary>
            <see cref="M:System.Web.SessionState.HttpSessionState.Abandon"/>
            </summary>
        </member>
        <member name="P:Spring.Util.ISessionState.IsCookieless">
            <summary>
            <see cref="P:System.Web.SessionState.HttpSessionState.IsCookieless"/>
            </summary>
        </member>
        <member name="P:Spring.Util.ISessionState.IsNewSession">
            <summary>
            <see cref="P:System.Web.SessionState.HttpSessionState.IsNewSession"/>
            </summary>
        </member>
        <member name="P:Spring.Util.ISessionState.LCID">
            <summary>
            <see cref="P:System.Web.SessionState.HttpSessionState.LCID"/>
            </summary>
        </member>
        <member name="P:Spring.Util.ISessionState.Mode">
            <summary>
            <see cref="P:System.Web.SessionState.HttpSessionState.Mode"/>
            </summary>
        </member>
        <member name="P:Spring.Util.ISessionState.SessionID">
            <summary>
            <see cref="P:System.Web.SessionState.HttpSessionState.SessionID"/>
            </summary>
        </member>
        <member name="P:Spring.Util.ISessionState.CodePage">
            <summary>
            <see cref="P:System.Web.SessionState.HttpSessionState.CodePage"/>
            </summary>
        </member>
        <member name="P:Spring.Util.ISessionState.CookieMode">
            <summary>
            <see cref="P:System.Web.SessionState.HttpSessionState.CookieMode"/>
            </summary>
        </member>
        <member name="T:Spring.Util.IVirtualEnvironment">
            <summary>
            Abstracts the underlying infrastructure of a HttpRequest
            </summary>
        </member>
        <member name="M:Spring.Util.IVirtualEnvironment.MapPath(System.String)">
            <summary>
            Maps a virtual path to it's physical location
            </summary>
        </member>
        <member name="M:Spring.Util.IVirtualEnvironment.RewritePath(System.String,System.Boolean)">
            <summary>
            Rewrites the <see cref="P:Spring.Util.IVirtualEnvironment.CurrentVirtualPath"/>, thus also affecting <see cref="M:Spring.Util.IVirtualEnvironment.MapPath(System.String)"/>
            </summary>
        </member>
        <member name="M:Spring.Util.IVirtualEnvironment.GetCompiledType(System.String)">
            <summary>
            Get the compiled type for the given virtual path
            </summary>
            <param name="absoluteVirtualPath">the absolute (=rooted) virtual path</param>
            <returns></returns>
        </member>
        <member name="M:Spring.Util.IVirtualEnvironment.CreateInstanceFromVirtualPath(System.String,System.Type)">
            <summary>
            Creates an instance from the given virtual path
            </summary>
            <param name="absoluteVirtualPath">the absolute (=rooted) virtual path</param>
            <param name="requiredBaseType">the required base type </param>
        </member>
        <member name="P:Spring.Util.IVirtualEnvironment.ApplicationVirtualPath">
            <summary>
            The virtual (rooted) path of the current Application with trailing slash
            </summary>
            <remarks>
            For the site rooted applications, "/" will be returned, for all others "/..someappdir../"
            </remarks>
        </member>
        <member name="P:Spring.Util.IVirtualEnvironment.CurrentVirtualPath">
            <summary>
            The virtual (rooted) path of the current Request including <see cref="P:System.Web.HttpRequest.PathInfo"/>
            </summary>
        </member>
        <member name="P:Spring.Util.IVirtualEnvironment.CurrentVirtualFilePath">
            <summary>
            The virtual (rooted) path of the current Request without trailing <see cref="P:System.Web.HttpRequest.PathInfo"/>
            </summary>
        </member>
        <member name="P:Spring.Util.IVirtualEnvironment.CurrentExecutionFilePath">
            <summary>
            The virtual (rooted) path of the currently executing script
            </summary>
            <remarks>
            Normally this property is the same as <see cref="P:Spring.Util.IVirtualEnvironment.CurrentVirtualPath"/>. 
            In case of <see cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)"/>, this property returns the current script 
            whereas CurrentVirtualPath returns the original script path.
            </remarks>
        </member>
        <member name="P:Spring.Util.IVirtualEnvironment.QueryString">
            <summary>
            The query parameters
            </summary>
        </member>
        <member name="P:Spring.Util.IVirtualEnvironment.Session">
            <summary>
            Returns the current Session's variable dictionary
            </summary>
        </member>
        <member name="P:Spring.Util.IVirtualEnvironment.RequestVariables">
            <summary>
            Returns the current Request's variable dictionary <see cref="P:System.Web.HttpContext.Items"/>
            </summary>
        </member>
        <member name="P:Spring.Util.IVirtualEnvironment.RequestParams">
            <summary>
            Returns the current Request's parameter dictionary <see cref="P:System.Web.HttpRequest.Params"/>
            </summary>
        </member>
        <member name="T:Spring.Util.SecurityCritical">
            <summary>
            Utility class to be used from within this assembly for executing security critical code 
            NEVER EVER MAKE THIS PUBLIC!
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Util.VirtualEnvironment">
            <summary>
            Provides platform independent access to HttpRuntime methods
            </summary>
            <remarks>
            For e.g. testing purposes, the default environment implementation may be replaced using <see cref="M:Spring.Util.VirtualEnvironment.SetInstance(Spring.Util.IVirtualEnvironment)"/>.
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.SetInstance(Spring.Util.IVirtualEnvironment)">
            <summary>
            Replaces the current enviroment implementation.
            </summary>
            <param name="newEnvironment">the new environment implementation to be used</param>
            <returns>the previously set environment instance</returns>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.MapPath(System.String)">
            <summary>
            Maps a virtual path to it's physical location
            </summary>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.RewritePath(System.String,System.Boolean)">
            <summary>
            Rewrites the <see cref="P:Spring.Util.VirtualEnvironment.CurrentVirtualPath"/>, thus also affecting <see cref="M:Spring.Util.VirtualEnvironment.MapPath(System.String)"/>
            </summary>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.CreateInstanceFromVirtualPath(System.String,System.Type)">
            <summary>
            Returns an instance of the specified file.
            </summary>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.GetCompiledType(System.String)">
            <summary>
            Returns an the compiled type of the specified file.
            </summary>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.RaiseEndRequest(System.Object,System.EventArgs)">
            <summary>
            Receives EndRequest-event from an <see cref="T:System.Web.HttpApplication"/> instance
            and dispatches it to all handlers registered with this module.
            </summary>
            <param name="sender">the HttpApplication instance sending this event</param>
            <param name="e">always <see cref="F:System.EventArgs.Empty"/></param>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.RaiseEndSession(System.Web.SessionState.HttpSessionState,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            Receives the EndSession-event and dispatches it to all handlers
            registered with this module.
            </summary>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.SetInitialized">
            <summary>
            Signals, that VirtualEnvironment is ready to accept 
            handler registrations for EndRequest and EndSession events
            </summary>
        </member>
        <member name="M:Spring.Util.VirtualEnvironment.AssertInitialized">
            <summary>
            Ensures, that WebSupportModule has been initialized. Otherwise an exception is thrown.
            </summary>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.ApplicationVirtualPath">
            <summary>
            The virtual (rooted) path of the current Application containing a leading '/' as well as a trailing '/'
            </summary>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.CurrentVirtualPath">
            <summary>
            The virtual (rooted) path of the current Request including <see cref="P:System.Web.HttpRequest.PathInfo"/>
            </summary>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.CurrentVirtualPathAndQuery">
            <summary>
            The virtual (rooted) path of the current Request including <see cref="P:System.Web.HttpRequest.PathInfo"/>
            </summary>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.CurrentVirtualFilePath">
            <summary>
            The virtual (rooted) path of the current Request without trailing <see cref="P:System.Web.HttpRequest.PathInfo"/>
            </summary>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.CurrentExecutionFilePath">
            <summary>
            The virtual (rooted) path of the currently executing script
            </summary>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.QueryString">
            <summary>
            The query parameters
            </summary>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.RequestVariables">
            <summary>
            Returns the current Request's variable dictionary (<see cref="P:System.Web.HttpContext.Items"/>)
            </summary>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.RequestParams">
            <summary>
            Returns the current Request's parameter dictionary (<see cref="P:System.Web.HttpRequest.Params"/>)
            </summary>
        </member>
        <member name="E:Spring.Util.VirtualEnvironment.EndRequest">
            <summary>
            Register with this event to receive any EndRequest event occuring in the current AppDomain.
            </summary>
        </member>
        <member name="E:Spring.Util.VirtualEnvironment.EndSession">
            <summary>
            Register with this event to receive any EndSession event occuring in the current AppDomain
            </summary>
            <remarks>
            This event may be raised asynchronously on it's own thread.
            Don't rely on e.g. <see cref="P:System.Web.HttpContext.Current"/> being available.
            </remarks>
        </member>
        <member name="P:Spring.Util.VirtualEnvironment.IsInitialized">
            <summary>
            Is this VirtualEnviroment ready to accept handler registrations
            for EndRequest and EndSession events ?
            </summary>
        </member>
        <member name="T:Spring.Util.VirtualEnvironment.RequestEventHandler">
            <summary>
            Represents a method that handles Request related events
            </summary>
        </member>
        <member name="T:Spring.Util.VirtualEnvironment.SessionEventHandler">
            <summary>
            Represents a method that handles Session related events
            </summary>
        </member>
        <member name="T:Spring.Util.VirtualEnvironment.HttpRuntimeEnvironment">
            <summary>
            Implementation for running within HttpRuntime
            </summary>
        </member>
        <member name="T:Spring.Util.WebUtils">
            <summary>
            Miscellaneous web utility methods.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Util.WebUtils.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Util.WebUtils"/> class.
            </summary>
            <remarks>
            <p>
            This is a utility class, and as such exposes no public constructors.
            </p>
            </remarks>
        </member>
        <member name="F:Spring.Util.WebUtils.DEFAULT_RESOURCE_PROTOCOL">
            <summary>
            Default protocol used for resolving resources in web applications
            </summary>
        </member>
        <member name="M:Spring.Util.WebUtils.GetPageName(System.String)">
            <summary>
            Extracts the bare ASPX page name without any extension from the
            supplied <paramref name="url"/>.
            </summary>
            <example>
            <p>
            Examples of what would be returned from this method given a url would be:
            </p>
            <p>
            <list type="bullet">
            <item><description>'Login.aspx' =&gt; 'Login'</description></item>
            <item><description>'~/Login.aspx' =&gt; 'Login'</description></item>
            <item><description>'~/B2B/SignUp.aspx' =&gt; 'SignUp'</description></item>
            <item><description>'B2B/Foo/FooServices.aspx' =&gt; 'FooServices'</description></item>
            </list>
            </p>
            </example>
            <param name="url">The full URL to the ASPX page.</param>
            <returns>
            The bare ASPX page name without any extension.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="url"/> is <see langword="null"/> or
            contains only whitespace character(s).
            </exception>
        </member>
        <member name="M:Spring.Util.WebUtils.GetVirtualDirectory(System.String)">
            <summary>
            Returns only the directory portion of a virtual path
            </summary>
            <remarks>
            The returned path is guaranteed to always have a leading and a trailing slash.<br/>
            If a path does not end with a file-extension it is assumed to be a directory
            </remarks>
        </member>
        <member name="M:Spring.Util.WebUtils.CreateAbsolutePath(System.String,System.String)">
            <summary>
            Returns absolute path that can be referenced within plain HTML.
            </summary>
            <remarks>
            <p>
            If relative path starts with '/' (forward slash), no concatenation will occur
            and it will be assumed that the relative path specified is indeed the absolute path
            and will be returned verbatim.</p>
            <p>
            Otherwise, relative path will be appended to the application path, while making sure that 
            path separators are not duplicated between the paths.</p>
            </remarks>
            <param name="applicationPath">Application path.</param>
            <param name="relativePath">Relative path to combine with the application path.</param>
            <returns>Absolute path.</returns>
        </member>
        <member name="M:Spring.Util.WebUtils.CombineVirtualPaths(System.String,System.String)">
            <summary>
            Combines a rooted base path with a relative path.
            </summary>
            <param name="rootPath">Must be a path starting with '/'</param>
            <param name="relativePath">the path to be combined. May start with basepath Placeholder '~'</param>
            <returns>the combined path</returns>
            <remarks>
            If relativePath starts with '~', rootPath is ignored and '~' resolves to the current AppDomain's application virtual path<br/>
            If relativePath start with '/', rootPath is ignored and relativePath is returned as-is.
            </remarks>
        </member>
        <member name="M:Spring.Util.WebUtils.GetAppRelativePath(System.String)">
            <summary>
            Gets the application-relative virtual path portion of the given absolute URL.
            </summary>
            <param name="url">the absolute url</param>
            <returns>the url relative to the current application's virtual path</returns>
        </member>
        <member name="M:Spring.Util.WebUtils.GetNormalizedVirtualPath(System.String)">
            <summary>
            Gets a normalized application-relative virtual path of the given virtual path. 
            </summary>
            <example>
            <p>
            Examples of what would be returned from this method given a virtual path would be:
            </p>
            <p>
            <list type="bullet">
            <item><description>'Login.aspx' => 'Login.aspx'</description></item>
            <item><description>'~/Login.aspx' => '/Login.aspx'</description></item>
            <item><description>'~/B2B/SignUp.aspx' => '/B2B/SignUp.aspx'</description></item>
            <item><description>'B2B/Foo/FooServices.aspx' => 'B2B/Foo/FooServices.aspx'</description></item>
            </list>
            </p>
            </example>
            <param name="virtualPath">the virtual path.</param>
            <returns>the normalized virtual path</returns>
        </member>
        <member name="M:Spring.Util.WebUtils.GetRelativePath(System.String,System.String)">
            <summary>
            Gets the virtual path portion of the given absolute URL 
            relative to the given base path.
            </summary>
            <remarks>
            Base path comparison is done case insensitive.
            </remarks>
            <param name="basePath">the absolute base path</param>
            <param name="url">the absolute url</param>
            <returns>the url relative to the given basePath</returns>
        </member>
        <member name="M:Spring.Util.WebUtils.GetLogicalParent(System.Web.UI.Control)">
            <summary>
             Returns the 'logical' parent of the specified control. Technically when dealing with masterpages and control hierarchy,
             the order goes controls-&gt;masterpage-&gt;page. But one often wants the more logical order controls-&gt;page-&gt;masterpage.
            </summary>
            <param name="control">the control, who's parent is to be determined.</param>
            <returns>the logical parent or <c>null</c> if the top of the hierarchy is reached.</returns>
             <exception cref="T:System.ArgumentNullException">if <paramref name="control"/> is <c>null</c></exception>
        </member>
        <member name="M:Spring.Util.WebUtils.UrlEncode(System.String)">
            <summary>
            Encode <paramref name="value"/> for use in URLs.
            </summary>
            <param name="value">the text to be encoded.</param>
            <returns>the url-encoded <paramref name="value"/></returns>
            <remarks>
            This method may be used outside of a current request. If executed within a 
            request, <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)"/> is used.
            <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)"/> will be used otherwise.
            </remarks>
        </member>
        <member name="T:Spring.Web.Providers.ConfigurableSqlMembershipProvider">
            <summary>
            A spring configurable version of <see cref="T:System.Web.Security.SqlMembershipProvider"/>
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.Providers.IMembershipProvider">
            <summary>
            An Interface for <see cref="T:Spring.Web.Providers.MembershipProviderAdapter"/> class.
            </summary>
            <author>Damjan Tomic</author>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             The <c>providerId</c> attribute is mandatory.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a new membership user to the data source.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object populated with the information for the newly created user.
            </returns>
            
            <param name="isApproved">Whether or not the new user is approved to be validated.</param>
            <param name="passwordAnswer">The password answer for the new user</param>
            <param name="username">The user name for the new user. </param>
            <param name="providerUserKey">The unique identifier from the membership data source for the user.</param>
            <param name="password">The password for the new user. </param>
            <param name="passwordQuestion">The password question for the new user.</param>
            <param name="email">The e-mail address for the new user.</param>
            <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus"></see> enumeration value indicating whether the user was created successfully.</param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
            <summary>
            Processes a request to update the password question and answer for a membership user.
            </summary>
            
            <returns>
            true if the password question and answer are updated successfully; otherwise, false.
            </returns>
            
            <param name="newPasswordQuestion">The new password question for the specified user. </param>
            <param name="newPasswordAnswer">The new password answer for the specified user. </param>
            <param name="username">The user to change the password question and answer for. </param>
            <param name="password">The password for the specified user. </param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.GetPassword(System.String,System.String)">
            <summary>
            Gets the password for the specified user name from the data source.
            </summary>
            
            <returns>
            The password for the specified user name.
            </returns>
            
            <param name="username">The user to retrieve the password for. </param>
            <param name="answer">The password answer for the user. </param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Processes a request to update the password for a membership user.
            </summary>
            
            <returns>
            true if the password was updated successfully; otherwise, false.
            </returns>
            
            <param name="newPassword">The new password for the specified user. </param>
            <param name="oldPassword">The current password for the specified user. </param>
            <param name="username">The user to update the password for. </param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.ResetPassword(System.String,System.String)">
            <summary>
            Resets a user's password to a new, automatically generated password.
            </summary>
            
            <returns>
            The new password for the specified user.
            </returns>
            
            <param name="username">The user to reset the password for. </param>
            <param name="answer">The password answer for the specified user. </param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Updates information about a user in the data source.
            </summary>
            
            <param name="user">A <see cref="T:System.Web.Security.MembershipUser"></see> object that represents the user to update and the updated information for the user. </param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.ValidateUser(System.String,System.String)">
            <summary>
            Verifies that the specified user name and password exist in the data source.
            </summary>
            
            <returns>
            true if the specified username and password are valid; otherwise, false.
            </returns>
            
            <param name="username">The name of the user to validate. </param>
            <param name="password">The password for the specified user. </param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.UnlockUser(System.String)">
            <summary>
            Clears a lock so that the membership user can be validated.
            </summary>
            
            <returns>
            true if the membership user was successfully unlocked; otherwise, false.
            </returns>
            
            <param name="userName">The membership user to clear the lock status for.</param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.GetUser(System.Object,System.Boolean)">
            <summary>
            Gets information from the data source for a user based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object populated with the specified user's information from the data source.
            </returns>
            
            <param name="providerUserKey">The unique identifier for the membership user to get information for.</param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.GetUser(System.String,System.Boolean)">
            <summary>
            Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object populated with the specified user's information from the data source.
            </returns>
            
            <param name="username">The name of the user to get information for. </param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user. </param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.GetUserNameByEmail(System.String)">
            <summary>
            Gets the user name associated with the specified e-mail address.
            </summary>
            
            <returns>
            The user name associated with the specified e-mail address. If no match is found, return null.
            </returns>
            
            <param name="email">The e-mail address to search for. </param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.DeleteUser(System.String,System.Boolean)">
            <summary>
            Removes a user from the membership data source. 
            </summary>
            
            <returns>
            true if the user was successfully deleted; otherwise, false.
            </returns>
            
            <param name="username">The name of the user to delete.</param>
            <param name="deleteAllRelatedData">true to delete data related to the user from the database; false to leave data related to the user in the database.</param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of all the users in the data source in pages of data.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> collection that contains a page of pageSize<see cref="T:System.Web.Security.MembershipUser"></see> objects beginning at the page specified by pageIndex.
            </returns>
            
            <param name="totalRecords">The total number of matched users.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.GetNumberOfUsersOnline">
            <summary>
            Gets the number of users currently accessing the application.
            </summary>
            
            <returns>
            The number of users currently accessing the application.
            </returns>
            
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the user name contains the specified user name to match.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> collection that contains a page of pageSize<see cref="T:System.Web.Security.MembershipUser"></see> objects beginning at the page specified by pageIndex.
            </returns>
            
            <param name="totalRecords">The total number of matched users.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.IMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> collection that contains a page of pageSize<see cref="T:System.Web.Security.MembershipUser"></see> objects beginning at the page specified by pageIndex.
            </returns>
            
            <param name="totalRecords">The total number of matched users.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="emailToMatch">The e-mail address to search for.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
            
            <returns>
            The friendly name used to refer to the provider during configuration.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.Description">
            <summary>
            Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).
            </summary>
            
            <returns>
            A brief, friendly description suitable for display in administrative tools or other UIs.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.EnablePasswordRetrieval">
            <summary>
            Indicates whether the membership provider is configured to allow users to retrieve their passwords.
            </summary>
            
            <returns>
            true if the membership provider is configured to support password retrieval; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.EnablePasswordReset">
            <summary>
            Indicates whether the membership provider is configured to allow users to reset their passwords.
            </summary>
            
            <returns>
            true if the membership provider supports password reset; otherwise, false. The default is true.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.RequiresQuestionAndAnswer">
            <summary>
            Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.
            </summary>
            
            <returns>
            true if a password answer is required for password reset and retrieval; otherwise, false. The default is true.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.ApplicationName">
            <summary>
            The name of the application using the custom membership provider.
            </summary>
            
            <returns>
            The name of the application using the custom membership provider.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.MaxInvalidPasswordAttempts">
            <summary>
            Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.
            </summary>
            
            <returns>
            The number of invalid password or password-answer attempts allowed before the membership user is locked out.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.PasswordAttemptWindow">
            <summary>
            Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.
            </summary>
            
            <returns>
            The number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.RequiresUniqueEmail">
            <summary>
            Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.
            </summary>
            
            <returns>
            true if the membership provider requires a unique e-mail address; otherwise, false. The default is true.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.PasswordFormat">
            <summary>
            Gets a value indicating the format for storing passwords in the membership data store.
            </summary>
            
            <returns>
            One of the <see cref="T:System.Web.Security.MembershipPasswordFormat"></see> values indicating the format for storing passwords in the data store.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.MinRequiredPasswordLength">
            <summary>
            Gets the minimum length required for a password.
            </summary>
            
            <returns>
            The minimum length required for a password. 
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.MinRequiredNonAlphanumericCharacters">
            <summary>
            Gets the minimum number of special characters that must be present in a valid password.
            </summary>
            
            <returns>
            The minimum number of special characters that must be present in a valid password.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.IMembershipProvider.PasswordStrengthRegularExpression">
            <summary>
            Gets the regular expression used to evaluate a password.
            </summary>
            
            <returns>
            A regular expression used to evaluate a password.
            </returns>
            
        </member>
        <member name="M:Spring.Web.Providers.ConfigurableSqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">
             <para>
             A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             </para>
             Values may be overridden by specifying them in <see cref="P:Spring.Web.Providers.ConfigurableSqlMembershipProvider.Parameters"/> list.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>
        </member>
        <member name="P:Spring.Web.Providers.ConfigurableSqlMembershipProvider.ConnectionStringName">
            <summary>
            The ConnectionString to be used
            </summary>
        </member>
        <member name="P:Spring.Web.Providers.ConfigurableSqlMembershipProvider.Parameters">
            <summary>
            A collection of the name/value pairs representing the provider-specific
            attributes specified in the configuration for this provider.
            </summary> 
        </member>
        <member name="T:Spring.Web.Providers.ConfigurableSqlProfileProvider">
             <summary>
            
             </summary>
             <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.Providers.IProfileProvider">
            <summary>
            An Interface for <see cref="T:Spring.Web.Providers.IProfileProvider"/> class.
            </summary>
            <remarks>
            <p>
            Configuration for this provider <b>requires</b> <c>providerId</c> element set in web.config file, 
            as the Id of wrapped provider (defined in the Spring context).  
            </p>    
            </remarks>
            <author>Damjan Tomic</author>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             The <c>providerId</c> attribute is mandatory.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>      
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            Returns the collection of settings property values for the specified application instance and settings property group.
            </summary>
            
            <returns>
            A <see cref="T:System.Configuration.SettingsPropertyValueCollection"></see> containing the values for the specified settings property group.
            </returns>
            
            <param name="context">A <see cref="T:System.Configuration.SettingsContext"></see> describing the current application use.</param>
            <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyCollection"></see> containing the settings property group whose values are to be retrieved.</param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>
            Sets the values of the specified group of property settings.
            </summary>
            
            <param name="context">A <see cref="T:System.Configuration.SettingsContext"></see> describing the current application usage.</param>
            <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyValueCollection"></see> representing the group of property settings to set.</param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)">
            <summary>
            When overridden in a derived class, deletes profile properties and information for the supplied list of profiles.
            </summary>
            
            <returns>
            The number of profiles deleted from the data source.
            </returns>
            
            <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see>  of information about profiles that are to be deleted.</param>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.DeleteProfiles(System.String[])">
            <summary>
            When overridden in a derived class, deletes profile properties and information for profiles that match the supplied list of user names.
            </summary>
            
            <returns>
            The number of profiles deleted from the data source.
            </returns>
            
            <param name="usernames">A string array of user names for profiles to be deleted.</param>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
            <summary>
            When overridden in a derived class, deletes all user-profile data for profiles in which the last activity date occurred before the specified date.
            </summary>
            
            <returns>
            The number of profiles deleted from the data source.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
            <param name="userInactiveSinceDate">A <see cref="T:System.DateTime"></see> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate"></see>  value of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
            <summary>
            When overridden in a derived class, returns the number of profiles in which the last activity date occurred on or before the specified date.
            </summary>
            
            <returns>
            The number of profiles in which the last activity date occurred on or before the specified date.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="userInactiveSinceDate">A <see cref="T:System.DateTime"></see> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate"></see>  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)">
            <summary>
            When overridden in a derived class, retrieves user profile data for all profiles in the data source.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see> containing user-profile information for all profiles in the data source.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
            <param name="pageIndex">The index of the page of results to return.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            When overridden in a derived class, retrieves user-profile data from the data source for profiles in which the last activity date occurred on or before the specified date.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see> containing user-profile information about the inactive profiles.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="userInactiveSinceDate">A <see cref="T:System.DateTime"></see> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate"></see>  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
            <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
            <param name="pageIndex">The index of the page of results to return.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            When overridden in a derived class, retrieves profile information for profiles in which the user name matches the specified user names.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see> containing user-profile information for profiles where the user name matches the supplied usernameToMatch parameter.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
            <param name="pageIndex">The index of the page of results to return.</param>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.IProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            When overridden in a derived class, retrieves profile information for profiles in which the last activity date occurred on or before the specified date and the user name matches the specified user name.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see> containing user profile information for inactive profiles where the user name matches the supplied usernameToMatch parameter.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="userInactiveSinceDate">A <see cref="T:System.DateTime"></see> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate"></see> value of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
            <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
            <param name="pageIndex">The index of the page of results to return.</param>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="P:Spring.Web.Providers.IProfileProvider.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
            
            <returns>
            The friendly name used to refer to the provider during configuration.
            </returns>
        </member>
        <member name="P:Spring.Web.Providers.IProfileProvider.Description">
            <summary>
            Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).
            </summary>
            
            <returns>
            A brief, friendly description suitable for display in administrative tools or other UIs.
            </returns>
        </member>
        <member name="P:Spring.Web.Providers.IProfileProvider.ApplicationName">
            <summary>
            Gets or sets the name of the currently running application.
            </summary>
            
            <returns>
            A <see cref="T:System.String"></see> that contains the application's shortened name, which does not contain a full path or extension, for example, SimpleAppSettings.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Spring.Web.Providers.ConfigurableSqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">
             <para>
             A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             </para>
             Values may be overridden by specifying them in <see cref="P:Spring.Web.Providers.ConfigurableSqlProfileProvider.Parameters"/> list.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>
        </member>
        <member name="P:Spring.Web.Providers.ConfigurableSqlProfileProvider.ConnectionStringName">
            <summary>
            The ConnectionString to be used
            </summary>
        </member>
        <member name="P:Spring.Web.Providers.ConfigurableSqlProfileProvider.Parameters">
            <summary>
            A collection of the name/value pairs representing the provider-specific
            attributes specified in the configuration for this provider.
            </summary> 
        </member>
        <member name="T:Spring.Web.Providers.ConfigurableSqlRoleProvider">
            <summary>
            A spring-configurable version of <see cref="T:System.Web.Security.SqlRoleProvider"/>
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.Providers.IRoleProvider">
            <summary>
            An Interface for <see cref="T:Spring.Web.Providers.RoleProviderAdapter"/> class.
            </summary>
            <remarks>
            <p>
            Configuration for this provider <b>requires</b> <c>providerId</c> element set in web.config file, 
            as the Id of wrapped provider (defined in the Spring context).  
            </p>    
            </remarks>
            <author>Damjan Tomic</author>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             The <c>providerId</c> attribute is mandatory.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>      
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.IsUserInRole(System.String,System.String)">
            <summary>
            Gets a value indicating whether the specified user is in the specified role for the configured applicationName.
            </summary>
            
            <returns>
            true if the specified user is in the specified role for the configured applicationName; otherwise, false.
            </returns>
            
            <param name="username">The user name to search for.</param>
            <param name="roleName">The role to search in.</param>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.GetRolesForUser(System.String)">
            <summary>
            Gets a list of the roles that a specified user is in for the configured applicationName.
            </summary>
            
            <returns>
            A string array containing the names of all the roles that the specified user is in for the configured applicationName.
            </returns>
            
            <param name="username">The user to return a list of roles for.</param>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.CreateRole(System.String)">
            <summary>
            Adds a new role to the data source for the configured applicationName.
            </summary>
            
            <param name="roleName">The name of the role to create.</param>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.DeleteRole(System.String,System.Boolean)">
            <summary>
            Removes a role from the data source for the configured applicationName.
            </summary>
            
            <returns>
            true if the role was successfully deleted; otherwise, false.
            </returns>
            
            <param name="throwOnPopulatedRole">If true, throw an exception if roleName has one or more members and do not delete roleName.</param>
            <param name="roleName">The name of the role to delete.</param>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.RoleExists(System.String)">
            <summary>
            Gets a value indicating whether the specified role name already exists in the role data source for the configured applicationName.
            </summary>
            
            <returns>
            true if the role name already exists in the data source for the configured applicationName; otherwise, false.
            </returns>
            
            <param name="roleName">The name of the role to search for in the data source. </param>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.AddUsersToRoles(System.String[],System.String[])">
            <summary>
            Adds the specified user names to the specified roles for the configured applicationName.
            </summary>
            
            <param name="roleNames">A string array of the role names to add the specified user names to. </param>
            <param name="usernames">A string array of user names to be added to the specified roles. </param>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>
            Removes the specified user names from the specified roles for the configured applicationName.
            </summary>
            
            <param name="roleNames">A string array of role names to remove the specified user names from. </param>
            <param name="usernames">A string array of user names to be removed from the specified roles. </param>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.GetUsersInRole(System.String)">
            <summary>
            Gets a list of users in the specified role for the configured applicationName.
            </summary>
            
            <returns>
            A string array containing the names of all the users who are members of the specified role for the configured applicationName.
            </returns>
            
            <param name="roleName">The name of the role to get the list of users for. </param>
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.GetAllRoles">
            <summary>
            Gets a list of all the roles for the configured applicationName.
            </summary>
            
            <returns>
            A string array containing the names of all the roles stored in the data source for the configured applicationName.
            </returns>
            
        </member>
        <member name="M:Spring.Web.Providers.IRoleProvider.FindUsersInRole(System.String,System.String)">
            <summary>
            Gets an array of user names in a role where the user name contains the specified user name to match.
            </summary>
            
            <returns>
            A string array containing the names of all the users where the user name matches usernameToMatch and the user is a member of the specified role.
            </returns>
            
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="roleName">The role to search in.</param>
        </member>
        <member name="P:Spring.Web.Providers.IRoleProvider.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
            
            <returns>
            The friendly name used to refer to the provider during configuration.
            </returns>
        </member>
        <member name="P:Spring.Web.Providers.IRoleProvider.Description">
            <summary>
            Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).
            </summary>
            
            <returns>
            A brief, friendly description suitable for display in administrative tools or other UIs.
            </returns>
        </member>
        <member name="P:Spring.Web.Providers.IRoleProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application to store and retrieve role information for.
            </summary>
            
            <returns>
            The name of the application to store and retrieve role information for.
            </returns>
            
        </member>
        <member name="M:Spring.Web.Providers.ConfigurableSqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">
             <para>
             A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             </para>
             Values may be overridden by specifying them in <see cref="P:Spring.Web.Providers.ConfigurableSqlRoleProvider.Parameters"/> list.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>
        </member>
        <member name="P:Spring.Web.Providers.ConfigurableSqlRoleProvider.ConnectionStringName">
            <summary>
            The ConnectionString to be used
            </summary>
        </member>
        <member name="P:Spring.Web.Providers.ConfigurableSqlRoleProvider.Parameters">
            <summary>
            A collection of the name/value pairs representing the provider-specific
            attributes specified in the configuration for this provider.
            </summary> 
        </member>
        <member name="T:Spring.Web.Providers.ConfigurableXmlSiteMapProvider">
            <summary>
            A spring-configurable version of <see cref="T:System.Web.Security.SqlRoleProvider"/>
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.Providers.ISiteMapProvider">
            <summary>
            An Interface for <see cref="T:Spring.Web.Providers.SiteMapProviderAdapter"/> class.
            </summary>
            <remarks>
            <p>
            Configuration for this provider <b>requires</b> <c>providerId</c> element set in web.config file, 
            as the Id of wrapped provider (defined in the Spring context).  
            </p>    
            </remarks>
            <author>Damjan Tomic</author>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             The <c>providerId</c> attribute is mandatory.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.FindSiteMapNode(System.Web.HttpContext)">
            <summary>
            Retrieves a <see cref="T:System.Web.SiteMapNode"></see> object that represents the currently requested page using the specified <see cref="T:System.Web.HttpContext"></see> object.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the currently requested page; otherwise, null, if no corresponding <see cref="T:System.Web.SiteMapNode"></see> can be found in the <see cref="T:System.Web.SiteMapNode"></see> or if the page context is null. 
            </returns>
            
            <param name="context">The <see cref="T:System.Web.HttpContext"></see> used to match node information with the URL of the requested page.</param>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.FindSiteMapNodeFromKey(System.String)">
            <summary>
            Retrieves a <see cref="T:System.Web.SiteMapNode"></see> object based on a specified key.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the page identified by key; otherwise, null, if no corresponding <see cref="T:System.Web.SiteMapNode"></see> is found or if security trimming is enabled and the <see cref="T:System.Web.SiteMapNode"></see> cannot be returned for the current user. The default is null.
            </returns>
            
            <param name="key">A lookup key with which a <see cref="T:System.Web.SiteMapNode"></see> is created.</param>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.FindSiteMapNode(System.String)">
            <summary>
            When overridden in a derived class, retrieves a <see cref="T:System.Web.SiteMapNode"></see> object that represents the page at the specified URL.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the page identified by rawURL; otherwise, null, if no corresponding <see cref="T:System.Web.SiteMapNode"></see> is found or if security trimming is enabled and the <see cref="T:System.Web.SiteMapNode"></see> cannot be returned for the current user.
            </returns>
            
            <param name="rawUrl">A URL that identifies the page for which to retrieve a <see cref="T:System.Web.SiteMapNode"></see>. </param>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.GetChildNodes(System.Web.SiteMapNode)">
            <summary>
            When overridden in a derived class, retrieves the child nodes of a specific <see cref="T:System.Web.SiteMapNode"></see>.
            </summary>
            
            <returns>
            A read-only <see cref="T:System.Web.SiteMapNodeCollection"></see> that contains the immediate child nodes of the specified <see cref="T:System.Web.SiteMapNode"></see>; otherwise, null or an empty collection, if no child nodes exist.
            </returns>
            
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> for which to retrieve all child nodes. </param>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.GetCurrentNodeAndHintAncestorNodes(System.Int32)">
            <summary>
            Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the parent and ancestor site map nodes for the current page.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the currently requested page; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
            <param name="upLevel">The number of ancestor site map node generations to get. A value of -1 indicates that all ancestors might be retrieved and cached by the provider.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">upLevel is less than -1.</exception>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)">
            <summary>
            Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the site map nodes in the proximity of the current node.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the currently requested page; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
            <param name="upLevel">The number of ancestor <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached by the provider.</param>
            <param name="downLevel">The number of child <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no descendant nodes are retrieved and a -1 indicates that all descendant nodes might be retrieved and cached by the provider.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">upLevel or downLevel is less than -1.</exception>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.GetParentNode(System.Web.SiteMapNode)">
            <summary>
            When overridden in a derived class, retrieves the parent node of a specific <see cref="T:System.Web.SiteMapNode"></see> object.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the parent of node; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> has no parent or security trimming is enabled and the parent node is not accessible to the current user.
            </returns>
            
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> for which to retrieve the parent node. </param>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)">
            <summary>
            Provides an optimized lookup method for site map providers when retrieving an ancestor node for the currently requested page and fetching the descendant nodes for the ancestor.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents an ancestor <see cref="T:System.Web.SiteMapNode"></see> of the currently requested page; otherwise, null, if the current or ancestor <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
            <param name="relativeDepthFromWalkup">The number of descendant node levels to retrieve from the target ancestor node. </param>
            <param name="walkupLevels">The number of ancestor node levels to traverse when retrieving the requested ancestor node. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">walkupLevels or relativeDepthFromWalkup is less than 0.</exception>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)">
            <summary>
            Provides an optimized lookup method for site map providers when retrieving an ancestor node for the specified <see cref="T:System.Web.SiteMapNode"></see> object and fetching its child nodes.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents an ancestor of node; otherwise, null, if the current or ancestor <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
            <param name="relativeDepthFromWalkup">The number of descendant node levels to retrieve from the target ancestor node.</param>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> that acts as a reference point for walkupLevels and relativeDepthFromWalkup. </param>
            <param name="walkupLevels">The number of ancestor node levels to traverse when retrieving the requested ancestor node.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The value specified for walkupLevels or relativeDepthFromWalkup is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">node is null.</exception>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)">
            <summary>
            Provides a method that site map providers can override to perform an optimized retrieval of one or more levels of parent and ancestor nodes, relative to the specified <see cref="T:System.Web.SiteMapNode"></see> object. 
            </summary>
            
            <param name="upLevel">The number of ancestor <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached.</param>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> that acts as a reference point for upLevel.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">upLevel is less than -1.</exception>
            <exception cref="T:System.ArgumentNullException">node is null.</exception>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)">
            <summary>
            Provides a method that site map providers can override to perform an optimized retrieval of nodes found in the proximity of the specified node. 
            </summary>
            
            <param name="upLevel">The number of ancestor <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors (and their descendant nodes to the level of node) might be retrieved and cached.</param>
            <param name="downLevel">The number of descendant <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no descendant nodes are retrieved and -1 indicates that all descendant nodes might be retrieved and cached.</param>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> that acts as a reference point for upLevel.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">upLevel or downLevel is less than -1.</exception>
            <exception cref="T:System.ArgumentNullException">node is null.</exception>
        </member>
        <member name="M:Spring.Web.Providers.ISiteMapProvider.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)">
            <summary>
            Retrieves a Boolean value indicating whether the specified <see cref="T:System.Web.SiteMapNode"></see> object can be viewed by the user in the specified context.
            </summary>
            
            <returns>
            true if security trimming is enabled and node can be viewed by the user or security trimming is not enabled; otherwise, false.
            </returns>
            
            <param name="context">The <see cref="T:System.Web.HttpContext"></see> that contains user information.</param>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> that is requested by the user.</param>
            <exception cref="T:System.ArgumentNullException">context is null.- or -node is null.</exception>
        </member>
        <member name="P:Spring.Web.Providers.ISiteMapProvider.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
            
            <returns>
            The friendly name used to refer to the provider during configuration.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.ISiteMapProvider.Description">
            <summary>
            Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).
            </summary>
            
            <returns>
            A brief, friendly description suitable for display in administrative tools or other UIs.
            </returns>
                    
        </member>
        <member name="P:Spring.Web.Providers.ISiteMapProvider.CurrentNode">
            <summary>
            Gets the <see cref="T:System.Web.SiteMapNode"></see> object that represents the currently requested page.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the currently requested page; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.ISiteMapProvider.ParentProvider">
            <summary>
            Gets or sets the parent <see cref="T:System.Web.SiteMapProvider"></see> object of the current provider.
            </summary>
            
            <returns>
            The parent provider of the current <see cref="T:System.Web.SiteMapProvider"></see>.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.ISiteMapProvider.RootProvider">
            <summary>
            Gets the root <see cref="T:System.Web.SiteMapProvider"></see> object in the current provider hierarchy.
            </summary>
            
            <returns>
            An <see cref="T:System.Web.SiteMapProvider"></see> that is the top-level site map provider in the provider hierarchy that the current provider belongs to.
            </returns>
            
            <exception cref="T:System.Configuration.Provider.ProviderException">There is a circular reference to the current site map provider. </exception>
        </member>
        <member name="P:Spring.Web.Providers.ISiteMapProvider.RootNode">
            <summary>
            Gets the root <see cref="T:System.Web.SiteMapNode"></see> object of the site map data that the current provider represents.
            </summary>
            
            <returns>
            The root <see cref="T:System.Web.SiteMapNode"></see> of the current site map data provider. The default implementation performs security trimming on the returned node.
            </returns>
            
        </member>
        <member name="M:Spring.Web.Providers.ConfigurableXmlSiteMapProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">
             <para>
             A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             </para>
             Values may be overridden by specifying them in <see cref="P:Spring.Web.Providers.ConfigurableXmlSiteMapProvider.Parameters"/> list.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>
        </member>
        <member name="P:Spring.Web.Providers.ConfigurableXmlSiteMapProvider.SiteMapFile">
            <summary>
            The XML file to be used for reading in the sitemap
            </summary>
        </member>
        <member name="P:Spring.Web.Providers.ConfigurableXmlSiteMapProvider.Parameters">
            <summary>
            A collection of the name/value pairs representing the provider-specific
            attributes specified in the configuration for this provider.
            </summary> 
        </member>
        <member name="T:Spring.Web.Providers.MembershipProviderAdapter">
            <summary>
            Wrapper for <see cref="T:System.Web.Security.MembershipProvider"/> class.
            </summary>
            <remarks>
            <p>
            Configuration for this provider <b>requires</b> <c>providerId</c> element set in web.config file, 
            as the Id of wrapped provider (defined in the Spring context).  
            </p>    
            </remarks>
            <author>Damjan Tomic</author>
        </member>
        <member name="F:Spring.Web.Providers.MembershipProviderAdapter.wrappedProvider">
            <summary>
            Reference to wrapped provider (defined in Spring context).
            </summary>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             The <c>providerId</c> attribute may be used to override the name being used for looking up an object definition.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a new membership user to the data source.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object populated with the information for the newly created user.
            </returns>
            
            <param name="isApproved">Whether or not the new user is approved to be validated.</param>
            <param name="passwordAnswer">The password answer for the new user</param>
            <param name="username">The user name for the new user. </param>
            <param name="providerUserKey">The unique identifier from the membership data source for the user.</param>
            <param name="password">The password for the new user. </param>
            <param name="passwordQuestion">The password question for the new user.</param>
            <param name="email">The e-mail address for the new user.</param>
            <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus"></see> enumeration value indicating whether the user was created successfully.</param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
            <summary>
            Processes a request to update the password question and answer for a membership user.
            </summary>
            
            <returns>
            true if the password question and answer are updated successfully; otherwise, false.
            </returns>
            
            <param name="newPasswordQuestion">The new password question for the specified user. </param>
            <param name="newPasswordAnswer">The new password answer for the specified user. </param>
            <param name="username">The user to change the password question and answer for. </param>
            <param name="password">The password for the specified user. </param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.GetPassword(System.String,System.String)">
            <summary>
            Gets the password for the specified user name from the data source.
            </summary>
            
            <returns>
            The password for the specified user name.
            </returns>
            
            <param name="username">The user to retrieve the password for. </param>
            <param name="answer">The password answer for the user. </param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Processes a request to update the password for a membership user.
            </summary>
            
            <returns>
            true if the password was updated successfully; otherwise, false.
            </returns>
            
            <param name="newPassword">The new password for the specified user. </param>
            <param name="oldPassword">The current password for the specified user. </param>
            <param name="username">The user to update the password for. </param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.ResetPassword(System.String,System.String)">
            <summary>
            Resets a user's password to a new, automatically generated password.
            </summary>
            
            <returns>
            The new password for the specified user.
            </returns>
            
            <param name="username">The user to reset the password for. </param>
            <param name="answer">The password answer for the specified user. </param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Updates information about a user in the data source.
            </summary>
            
            <param name="user">A <see cref="T:System.Web.Security.MembershipUser"></see> object that represents the user to update and the updated information for the user. </param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.ValidateUser(System.String,System.String)">
            <summary>
            Verifies that the specified user name and password exist in the data source.
            </summary>
            
            <returns>
            true if the specified username and password are valid; otherwise, false.
            </returns>
            
            <param name="username">The name of the user to validate. </param>
            <param name="password">The password for the specified user. </param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.UnlockUser(System.String)">
            <summary>
            Clears a lock so that the membership user can be validated.
            </summary>
            
            <returns>
            true if the membership user was successfully unlocked; otherwise, false.
            </returns>
            
            <param name="userName">The membership user to clear the lock status for.</param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.GetUser(System.Object,System.Boolean)">
            <summary>
            Gets information from the data source for a user based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object populated with the specified user's information from the data source.
            </returns>
            
            <param name="providerUserKey">The unique identifier for the membership user to get information for.</param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.GetUser(System.String,System.Boolean)">
            <summary>
            Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object populated with the specified user's information from the data source.
            </returns>
            
            <param name="username">The name of the user to get information for. </param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user. </param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.GetUserNameByEmail(System.String)">
            <summary>
            Gets the user name associated with the specified e-mail address.
            </summary>
            
            <returns>
            The user name associated with the specified e-mail address. If no match is found, return null.
            </returns>
            
            <param name="email">The e-mail address to search for. </param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.DeleteUser(System.String,System.Boolean)">
            <summary>
            Removes a user from the membership data source. 
            </summary>
            
            <returns>
            true if the user was successfully deleted; otherwise, false.
            </returns>
            
            <param name="username">The name of the user to delete.</param>
            <param name="deleteAllRelatedData">true to delete data related to the user from the database; false to leave data related to the user in the database.</param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of all the users in the data source in pages of data.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> collection that contains a page of pageSize<see cref="T:System.Web.Security.MembershipUser"></see> objects beginning at the page specified by pageIndex.
            </returns>
            
            <param name="totalRecords">The total number of matched users.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.GetNumberOfUsersOnline">
            <summary>
            Gets the number of users currently accessing the application.
            </summary>
            
            <returns>
            The number of users currently accessing the application.
            </returns>
            
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the user name contains the specified user name to match.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> collection that contains a page of pageSize<see cref="T:System.Web.Security.MembershipUser"></see> objects beginning at the page specified by pageIndex.
            </returns>
            
            <param name="totalRecords">The total number of matched users.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.MembershipProviderAdapter.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> collection that contains a page of pageSize<see cref="T:System.Web.Security.MembershipUser"></see> objects beginning at the page specified by pageIndex.
            </returns>
            
            <param name="totalRecords">The total number of matched users.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="emailToMatch">The e-mail address to search for.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
            
            <returns>
            The friendly name used to refer to the provider during configuration.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.Description">
            <summary>
            Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).
            </summary>
            
            <returns>
            A brief, friendly description suitable for display in administrative tools or other UIs.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.EnablePasswordRetrieval">
            <summary>
            Indicates whether the membership provider is configured to allow users to retrieve their passwords.
            </summary>
            
            <returns>
            true if the membership provider is configured to support password retrieval; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.EnablePasswordReset">
            <summary>
            Indicates whether the membership provider is configured to allow users to reset their passwords.
            </summary>
            
            <returns>
            true if the membership provider supports password reset; otherwise, false. The default is true.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.RequiresQuestionAndAnswer">
            <summary>
            Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.
            </summary>
            
            <returns>
            true if a password answer is required for password reset and retrieval; otherwise, false. The default is true.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.ApplicationName">
            <summary>
            The name of the application using the custom membership provider.
            </summary>
            
            <returns>
            The name of the application using the custom membership provider.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.MaxInvalidPasswordAttempts">
            <summary>
            Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.
            </summary>
            
            <returns>
            The number of invalid password or password-answer attempts allowed before the membership user is locked out.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.PasswordAttemptWindow">
            <summary>
            Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.
            </summary>
            
            <returns>
            The number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.RequiresUniqueEmail">
            <summary>
            Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.
            </summary>
            
            <returns>
            true if the membership provider requires a unique e-mail address; otherwise, false. The default is true.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.PasswordFormat">
            <summary>
            Gets a value indicating the format for storing passwords in the membership data store.
            </summary>
            
            <returns>
            One of the <see cref="T:System.Web.Security.MembershipPasswordFormat"></see> values indicating the format for storing passwords in the data store.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.MinRequiredPasswordLength">
            <summary>
            Gets the minimum length required for a password.
            </summary>
            
            <returns>
            The minimum length required for a password. 
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.MinRequiredNonAlphanumericCharacters">
            <summary>
            Gets the minimum number of special characters that must be present in a valid password.
            </summary>
            
            <returns>
            The minimum number of special characters that must be present in a valid password.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.MembershipProviderAdapter.PasswordStrengthRegularExpression">
            <summary>
            Gets the regular expression used to evaluate a password.
            </summary>
            
            <returns>
            A regular expression used to evaluate a password.
            </returns>
            
        </member>
        <member name="T:Spring.Web.Providers.ProfileProviderAdapter">
            <summary>
            Wrapper for <see cref="T:System.Web.Profile.ProfileProvider"/> class.
            </summary>
            <remarks>
            <p>
            Configuration for this provider <b>requires</b> <c>providerId</c> element set in web.config file, 
            as the Id of wrapped provider (defined in the Spring context).  
            </p>    
            </remarks>
            <author>Damjan Tomic</author>
        </member>
        <member name="F:Spring.Web.Providers.ProfileProviderAdapter.wrappedProvider">
            <summary>
            Reference to wrapped provider (defined in Spring context).
            </summary>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             The <c>providerId</c> attribute may be used to override the name being used for looking up an object definition.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>      
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            Returns the collection of settings property values for the specified application instance and settings property group.
            </summary>
            
            <returns>
            A <see cref="T:System.Configuration.SettingsPropertyValueCollection"></see> containing the values for the specified settings property group.
            </returns>
            
            <param name="context">A <see cref="T:System.Configuration.SettingsContext"></see> describing the current application use.</param>
            <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyCollection"></see> containing the settings property group whose values are to be retrieved.</param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>
            Sets the values of the specified group of property settings.
            </summary>
            
            <param name="context">A <see cref="T:System.Configuration.SettingsContext"></see> describing the current application usage.</param>
            <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyValueCollection"></see> representing the group of property settings to set.</param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)">
            <summary>
            When overridden in a derived class, deletes profile properties and information for the supplied list of profiles.
            </summary>
            
            <returns>
            The number of profiles deleted from the data source.
            </returns>
            
            <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see>  of information about profiles that are to be deleted.</param>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.DeleteProfiles(System.String[])">
            <summary>
            When overridden in a derived class, deletes profile properties and information for profiles that match the supplied list of user names.
            </summary>
            
            <returns>
            The number of profiles deleted from the data source.
            </returns>
            
            <param name="usernames">A string array of user names for profiles to be deleted.</param>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
            <summary>
            When overridden in a derived class, deletes all user-profile data for profiles in which the last activity date occurred before the specified date.
            </summary>
            
            <returns>
            The number of profiles deleted from the data source.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
            <param name="userInactiveSinceDate">A <see cref="T:System.DateTime"></see> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate"></see>  value of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
            <summary>
            When overridden in a derived class, returns the number of profiles in which the last activity date occurred on or before the specified date.
            </summary>
            
            <returns>
            The number of profiles in which the last activity date occurred on or before the specified date.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="userInactiveSinceDate">A <see cref="T:System.DateTime"></see> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate"></see>  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)">
            <summary>
            When overridden in a derived class, retrieves user profile data for all profiles in the data source.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see> containing user-profile information for all profiles in the data source.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
            <param name="pageIndex">The index of the page of results to return.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            When overridden in a derived class, retrieves user-profile data from the data source for profiles in which the last activity date occurred on or before the specified date.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see> containing user-profile information about the inactive profiles.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="userInactiveSinceDate">A <see cref="T:System.DateTime"></see> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate"></see>  of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
            <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
            <param name="pageIndex">The index of the page of results to return.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            When overridden in a derived class, retrieves profile information for profiles in which the user name matches the specified user names.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see> containing user-profile information for profiles where the user name matches the supplied usernameToMatch parameter.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
            <param name="pageIndex">The index of the page of results to return.</param>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="M:Spring.Web.Providers.ProfileProviderAdapter.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            When overridden in a derived class, retrieves profile information for profiles in which the last activity date occurred on or before the specified date and the user name matches the specified user name.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.Profile.ProfileInfoCollection"></see> containing user profile information for inactive profiles where the user name matches the supplied usernameToMatch parameter.
            </returns>
            
            <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption"></see> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
            <param name="userInactiveSinceDate">A <see cref="T:System.DateTime"></see> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate"></see> value of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
            <param name="totalRecords">When this method returns, contains the total number of profiles.</param>
            <param name="pageIndex">The index of the page of results to return.</param>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageSize">The size of the page of results to return.</param>
        </member>
        <member name="P:Spring.Web.Providers.ProfileProviderAdapter.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
            
            <returns>
            The friendly name used to refer to the provider during configuration.
            </returns>
        </member>
        <member name="P:Spring.Web.Providers.ProfileProviderAdapter.Description">
            <summary>
            Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).
            </summary>
            
            <returns>
            A brief, friendly description suitable for display in administrative tools or other UIs.
            </returns>
        </member>
        <member name="P:Spring.Web.Providers.ProfileProviderAdapter.ApplicationName">
            <summary>
            Gets or sets the name of the currently running application.
            </summary>
            
            <returns>
            A <see cref="T:System.String"></see> that contains the application's shortened name, which does not contain a full path or extension, for example, SimpleAppSettings.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Spring.Web.Providers.RoleProviderAdapter">
            <summary>
            Wrapper for <see cref="T:System.Web.Security.RoleProvider"/> class.
            </summary>
            <remarks>
            <p>
            Configuration for this provider <b>requires</b> <c>providerId</c> element set in web.config file, 
            as the Id of wrapped provider (defined in the Spring context).  
            </p>    
            </remarks>
            <author>Damjan Tomic</author>
        </member>
        <member name="F:Spring.Web.Providers.RoleProviderAdapter.wrappedProvider">
            <summary>
            Reference to wrapped provider (defined in Spring context).
            </summary>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             The <c>providerId</c> attribute may be used to override the name being used for looking up an object definition.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>      
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.IsUserInRole(System.String,System.String)">
            <summary>
            Gets a value indicating whether the specified user is in the specified role for the configured applicationName.
            </summary>
            
            <returns>
            true if the specified user is in the specified role for the configured applicationName; otherwise, false.
            </returns>
            
            <param name="username">The user name to search for.</param>
            <param name="roleName">The role to search in.</param>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.GetRolesForUser(System.String)">
            <summary>
            Gets a list of the roles that a specified user is in for the configured applicationName.
            </summary>
            
            <returns>
            A string array containing the names of all the roles that the specified user is in for the configured applicationName.
            </returns>
            
            <param name="username">The user to return a list of roles for.</param>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.CreateRole(System.String)">
            <summary>
            Adds a new role to the data source for the configured applicationName.
            </summary>
            
            <param name="roleName">The name of the role to create.</param>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.DeleteRole(System.String,System.Boolean)">
            <summary>
            Removes a role from the data source for the configured applicationName.
            </summary>
            
            <returns>
            true if the role was successfully deleted; otherwise, false.
            </returns>
            
            <param name="throwOnPopulatedRole">If true, throw an exception if roleName has one or more members and do not delete roleName.</param>
            <param name="roleName">The name of the role to delete.</param>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.RoleExists(System.String)">
            <summary>
            Gets a value indicating whether the specified role name already exists in the role data source for the configured applicationName.
            </summary>
            
            <returns>
            true if the role name already exists in the data source for the configured applicationName; otherwise, false.
            </returns>
            
            <param name="roleName">The name of the role to search for in the data source. </param>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.AddUsersToRoles(System.String[],System.String[])">
            <summary>
            Adds the specified user names to the specified roles for the configured applicationName.
            </summary>
            
            <param name="roleNames">A string array of the role names to add the specified user names to. </param>
            <param name="usernames">A string array of user names to be added to the specified roles. </param>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>
            Removes the specified user names from the specified roles for the configured applicationName.
            </summary>
            
            <param name="roleNames">A string array of role names to remove the specified user names from. </param>
            <param name="usernames">A string array of user names to be removed from the specified roles. </param>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.GetUsersInRole(System.String)">
            <summary>
            Gets a list of users in the specified role for the configured applicationName.
            </summary>
            
            <returns>
            A string array containing the names of all the users who are members of the specified role for the configured applicationName.
            </returns>
            
            <param name="roleName">The name of the role to get the list of users for. </param>
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.GetAllRoles">
            <summary>
            Gets a list of all the roles for the configured applicationName.
            </summary>
            
            <returns>
            A string array containing the names of all the roles stored in the data source for the configured applicationName.
            </returns>
            
        </member>
        <member name="M:Spring.Web.Providers.RoleProviderAdapter.FindUsersInRole(System.String,System.String)">
            <summary>
            Gets an array of user names in a role where the user name contains the specified user name to match.
            </summary>
            
            <returns>
            A string array containing the names of all the users where the user name matches usernameToMatch and the user is a member of the specified role.
            </returns>
            
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="roleName">The role to search in.</param>
        </member>
        <member name="P:Spring.Web.Providers.RoleProviderAdapter.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
            
            <returns>
            The friendly name used to refer to the provider during configuration.
            </returns>
        </member>
        <member name="P:Spring.Web.Providers.RoleProviderAdapter.Description">
            <summary>
            Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).
            </summary>
            
            <returns>
            A brief, friendly description suitable for display in administrative tools or other UIs.
            </returns>
        </member>
        <member name="P:Spring.Web.Providers.RoleProviderAdapter.ApplicationName">
            <summary>
            Gets or sets the name of the application to store and retrieve role information for.
            </summary>
            
            <returns>
            The name of the application to store and retrieve role information for.
            </returns>
            
        </member>
        <member name="T:Spring.Web.Providers.SiteMapProviderAdapter">
            <summary>
            Wrapper for <see cref="T:System.Web.SiteMapProvider"/> class.
            </summary>
            <remarks>
            <p>
            Configuration for this provider <b>requires</b> <c>providerId</c> element set in web.config file, 
            as the Id of wrapped provider (defined in the Spring context).  
            </p>    
            </remarks>
            <author>Damjan Tomic</author>
        </member>
        <member name="F:Spring.Web.Providers.SiteMapProviderAdapter.wrappedProvider">
            <summary>
            Reference to wrapped provider (defined in Spring context).
            </summary>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            
            <param name="config">A collection of the name/value pairs representing the provider-specific 
             attributes specified in the configuration for this provider.
             The <c>providerId</c> attribute may be used to override the name being used for looking up an object definition.
             </param>
            <param name="name">The friendly name of the provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> or <paramref name="config"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name"/> has a length of zero or providerId attribute is not set.</exception>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.FindSiteMapNode(System.Web.HttpContext)">
            <summary>
            Retrieves a <see cref="T:System.Web.SiteMapNode"></see> object that represents the currently requested page using the specified <see cref="T:System.Web.HttpContext"></see> object.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the currently requested page; otherwise, null, if no corresponding <see cref="T:System.Web.SiteMapNode"></see> can be found in the <see cref="T:System.Web.SiteMapNode"></see> or if the page context is null. 
            </returns>
            
            <param name="context">The <see cref="T:System.Web.HttpContext"></see> used to match node information with the URL of the requested page.</param>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.FindSiteMapNodeFromKey(System.String)">
            <summary>
            Retrieves a <see cref="T:System.Web.SiteMapNode"></see> object based on a specified key.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the page identified by key; otherwise, null, if no corresponding <see cref="T:System.Web.SiteMapNode"></see> is found or if security trimming is enabled and the <see cref="T:System.Web.SiteMapNode"></see> cannot be returned for the current user. The default is null.
            </returns>
            
            <param name="key">A lookup key with which a <see cref="T:System.Web.SiteMapNode"></see> is created.</param>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.FindSiteMapNode(System.String)">
            <summary>
            When overridden in a derived class, retrieves a <see cref="T:System.Web.SiteMapNode"></see> object that represents the page at the specified URL.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the page identified by rawURL; otherwise, null, if no corresponding <see cref="T:System.Web.SiteMapNode"></see> is found or if security trimming is enabled and the <see cref="T:System.Web.SiteMapNode"></see> cannot be returned for the current user.
            </returns>
            
            <param name="rawUrl">A URL that identifies the page for which to retrieve a <see cref="T:System.Web.SiteMapNode"></see>. </param>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.GetChildNodes(System.Web.SiteMapNode)">
            <summary>
            When overridden in a derived class, retrieves the child nodes of a specific <see cref="T:System.Web.SiteMapNode"></see>.
            </summary>
            
            <returns>
            A read-only <see cref="T:System.Web.SiteMapNodeCollection"></see> that contains the immediate child nodes of the specified <see cref="T:System.Web.SiteMapNode"></see>; otherwise, null or an empty collection, if no child nodes exist.
            </returns>
            
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> for which to retrieve all child nodes. </param>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.GetCurrentNodeAndHintAncestorNodes(System.Int32)">
            <summary>
            Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the parent and ancestor site map nodes for the current page.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the currently requested page; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
            <param name="upLevel">The number of ancestor site map node generations to get. A value of -1 indicates that all ancestors might be retrieved and cached by the provider.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">upLevel is less than -1.</exception>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.GetCurrentNodeAndHintNeighborhoodNodes(System.Int32,System.Int32)">
            <summary>
            Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the site map nodes in the proximity of the current node.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the currently requested page; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
            <param name="upLevel">The number of ancestor <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached by the provider.</param>
            <param name="downLevel">The number of child <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no descendant nodes are retrieved and a -1 indicates that all descendant nodes might be retrieved and cached by the provider.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">upLevel or downLevel is less than -1.</exception>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.GetParentNode(System.Web.SiteMapNode)">
            <summary>
            When overridden in a derived class, retrieves the parent node of a specific <see cref="T:System.Web.SiteMapNode"></see> object.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the parent of node; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> has no parent or security trimming is enabled and the parent node is not accessible to the current user.
            </returns>
            
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> for which to retrieve the parent node. </param>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent(System.Int32,System.Int32)">
            <summary>
            Provides an optimized lookup method for site map providers when retrieving an ancestor node for the currently requested page and fetching the descendant nodes for the ancestor.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents an ancestor <see cref="T:System.Web.SiteMapNode"></see> of the currently requested page; otherwise, null, if the current or ancestor <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
            <param name="relativeDepthFromWalkup">The number of descendant node levels to retrieve from the target ancestor node. </param>
            <param name="walkupLevels">The number of ancestor node levels to traverse when retrieving the requested ancestor node. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">walkupLevels or relativeDepthFromWalkup is less than 0.</exception>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.GetParentNodeRelativeToNodeAndHintDownFromParent(System.Web.SiteMapNode,System.Int32,System.Int32)">
            <summary>
            Provides an optimized lookup method for site map providers when retrieving an ancestor node for the specified <see cref="T:System.Web.SiteMapNode"></see> object and fetching its child nodes.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents an ancestor of node; otherwise, null, if the current or ancestor <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
            <param name="relativeDepthFromWalkup">The number of descendant node levels to retrieve from the target ancestor node.</param>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> that acts as a reference point for walkupLevels and relativeDepthFromWalkup. </param>
            <param name="walkupLevels">The number of ancestor node levels to traverse when retrieving the requested ancestor node.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The value specified for walkupLevels or relativeDepthFromWalkup is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">node is null.</exception>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.GetRootNodeCore">
            <summary>
             This method is marked as protected and should never be called.
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the root node of the set of nodes that the current provider manages. 
            </returns>
            
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.HintAncestorNodes(System.Web.SiteMapNode,System.Int32)">
            <summary>
            Provides a method that site map providers can override to perform an optimized retrieval of one or more levels of parent and ancestor nodes, relative to the specified <see cref="T:System.Web.SiteMapNode"></see> object. 
            </summary>
            
            <param name="upLevel">The number of ancestor <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached.</param>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> that acts as a reference point for upLevel.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">upLevel is less than -1.</exception>
            <exception cref="T:System.ArgumentNullException">node is null.</exception>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.HintNeighborhoodNodes(System.Web.SiteMapNode,System.Int32,System.Int32)">
            <summary>
            Provides a method that site map providers can override to perform an optimized retrieval of nodes found in the proximity of the specified node. 
            </summary>
            
            <param name="upLevel">The number of ancestor <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors (and their descendant nodes to the level of node) might be retrieved and cached.</param>
            <param name="downLevel">The number of descendant <see cref="T:System.Web.SiteMapNode"></see> generations to fetch. 0 indicates no descendant nodes are retrieved and -1 indicates that all descendant nodes might be retrieved and cached.</param>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> that acts as a reference point for upLevel.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">upLevel or downLevel is less than -1.</exception>
            <exception cref="T:System.ArgumentNullException">node is null.</exception>
        </member>
        <member name="M:Spring.Web.Providers.SiteMapProviderAdapter.IsAccessibleToUser(System.Web.HttpContext,System.Web.SiteMapNode)">
            <summary>
            Retrieves a Boolean value indicating whether the specified <see cref="T:System.Web.SiteMapNode"></see> object can be viewed by the user in the specified context.
            </summary>
            
            <returns>
            true if security trimming is enabled and node can be viewed by the user or security trimming is not enabled; otherwise, false.
            </returns>
            
            <param name="context">The <see cref="T:System.Web.HttpContext"></see> that contains user information.</param>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> that is requested by the user.</param>
            <exception cref="T:System.ArgumentNullException">context is null.- or -node is null.</exception>
        </member>
        <member name="P:Spring.Web.Providers.SiteMapProviderAdapter.Name">
            <summary>
            Gets the friendly name used to refer to the provider during configuration.
            </summary>
            
            <returns>
            The friendly name used to refer to the provider during configuration.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.SiteMapProviderAdapter.Description">
            <summary>
            Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).
            </summary>
            
            <returns>
            A brief, friendly description suitable for display in administrative tools or other UIs.
            </returns>
                    
        </member>
        <member name="P:Spring.Web.Providers.SiteMapProviderAdapter.CurrentNode">
            <summary>
            Gets the <see cref="T:System.Web.SiteMapNode"></see> object that represents the currently requested page.
            </summary>
            
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the currently requested page; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> is not found or cannot be returned for the current user.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.SiteMapProviderAdapter.ParentProvider">
            <summary>
            Gets or sets the parent <see cref="T:System.Web.SiteMapProvider"></see> object of the current provider.
            </summary>
            
            <returns>
            The parent provider of the current <see cref="T:System.Web.SiteMapProvider"></see>.
            </returns>
            
        </member>
        <member name="P:Spring.Web.Providers.SiteMapProviderAdapter.RootProvider">
            <summary>
            Gets the root <see cref="T:System.Web.SiteMapProvider"></see> object in the current provider hierarchy.
            </summary>
            
            <returns>
            An <see cref="T:System.Web.SiteMapProvider"></see> that is the top-level site map provider in the provider hierarchy that the current provider belongs to.
            </returns>
            
            <exception cref="T:System.Configuration.Provider.ProviderException">There is a circular reference to the current site map provider. </exception>
        </member>
        <member name="P:Spring.Web.Providers.SiteMapProviderAdapter.RootNode">
            <summary>
            Gets the root <see cref="T:System.Web.SiteMapNode"></see> object of the site map data that the current provider represents.
            </summary>
            
            <returns>
            The root <see cref="T:System.Web.SiteMapNode"></see> of the current site map data provider. The default implementation performs security trimming on the returned node.
            </returns>
            
        </member>
        <member name="T:Spring.Web.Services.WebServiceExporter">
            <summary>
            Exports an object as a web service.
            </summary>
            <remarks>
            <p>
            The exporter will create a web service wrapper for the object that is
            to be exposed and additionally enable its configuration as a web
            service.
            </p>
            <p>
            The exported object can be either a standard .NET web service
            implementation, with methods marked using the standard
            <see cref="T:System.Web.Services.WebMethodAttribute"/>, or it can be a
            plain .NET object.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="F:Spring.Web.Services.WebServiceExporter.s_activeExporters">
            <summary>
            Holds EXPORTER_ID to WebServiceExporter instance mappings.
            </summary>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.GetTarget(System.String)">
            <summary>
             Returns the target object instance exported by the WebServiceExporter identified by <see cref="F:Spring.Web.Services.WebServiceExporter.EXPORTER_ID"/>.
            </summary>
            <param name="exporterId"></param>
            <returns></returns>
        </member>
        <member name="F:Spring.Web.Services.WebServiceExporter.objectName">
            <summary>
            The name of the object in the factory.
            </summary>
        </member>
        <member name="F:Spring.Web.Services.WebServiceExporter.objectFactory">
            <summary>
            The owning factory.
            </summary>
        </member>
        <member name="F:Spring.Web.Services.WebServiceExporter.proxyType">
            <summary>
            The generated web service wrapper type.
            </summary>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Web.Services.WebServiceExporter"/> class.
            </summary>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.Finalize">
            <summary>
            Cleanup before GC
            </summary>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.Dispose">
            <summary>
            Disconnect the remote object from the registered remoting channels.
            </summary>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.Dispose(System.Boolean)">
            <summary>
            Stops exporting the object identified by <see cref="P:Spring.Web.Services.WebServiceExporter.TargetName"/>.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.AfterPropertiesSet">
            <summary>
            Exports specified object as a web service.
            </summary>
            <exception cref="T:System.Exception">
            In the event of misconfiguration (such as failure to set an essential
            property) or if initialization fails.
            </exception>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.GetExportedType">
            <summary>
            Returns the Web Service wrapper type for the object that is to be exposed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.ValidateConfiguration">
            <summary>
            Validates the configuration.
            </summary>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.GenerateProxy">
            <summary>
            Generates the web service wrapper type.
            </summary>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.WsiProfile">
            <summary>
            Gets or Sets the Web Services Interoperability (WSI) specification 
            to which the Web Service claims to conform.
            </summary>
            <remarks>
            Default is <see cref="F:System.Web.Services.WsiProfiles.BasicProfile1_1"/>
            </remarks>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.WebServiceBaseType">
            <summary>
            Gets or sets the base type that web service should inherit.
            </summary>
            <remarks>
            Default is <see cref="T:System.Web.Services.WebService"/>
            </remarks>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.TargetName">
            <summary>
            Gets or sets the name of the target object that should be exposed as a web service.
            </summary>
            <value>
            The name of the target object that should be exposed as a web service.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Description">
            <summary>
            Gets or sets the description of the web service (optional).
            </summary>
            <value>
            The web service description.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Name">
            <summary>
            Gets or sets the name of the web service (optional).
            </summary>
            <remarks>
            <p>
            Defaults to the value of the exporter's object ID.
            </p>
            </remarks>
            <value>
            The web service name.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Namespace">
            <summary>
            Gets or sets the web service namespace.
            </summary>
            <value>
            The web service namespace.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Interfaces">
            <summary>
            Gets or sets the list of interfaces whose methods should be exposed as web services.
            </summary>
            <remarks>
            If not set, all the interfaces implemented or inherited 
            by the target type will be used.
            </remarks>
            <value>The interfaces.</value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.TypeAttributes">
            <summary>
            Gets or sets a list of custom attributes 
            that should be applied to a proxy class.
            </summary>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.MemberAttributes">
            <summary>
            Gets or sets a dictionary of custom attributes 
            that should be applied to web service members.
            </summary>
            <remarks>
            Dictionary key is an expression that members can be matched against. 
            Value is a list of attributes that should be applied 
            to each member that matches expression.
            </remarks>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.ObjectFactory">
            <summary>
            Callback that supplies the owning factory to an object instance.
            </summary>
            <value>
            Owning <see cref="T:Spring.Objects.Factory.IObjectFactory"/>
            (may not be <see langword="null"/>). The object can immediately
            call methods on the factory.
            </value>
            <remarks>
            <p>
            Invoked after population of normal object properties but before an init
            callback like <see cref="T:Spring.Objects.Factory.IInitializingObject"/>'s
            <see cref="M:Spring.Objects.Factory.IInitializingObject.AfterPropertiesSet"/>
            method or a custom init-method.
            </p>
            </remarks>
            <exception cref="T:Spring.Objects.ObjectsException">
            In case of initialization errors.
            </exception>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.ObjectName">
            <summary>
            Set the name of the object in the object factory that created this object.
            </summary>
            <value>
            The name of the object in the factory.
            </value>
            <remarks>
            <p>
            Invoked after population of normal object properties but before an init
            callback like <see cref="M:Spring.Objects.Factory.IInitializingObject.AfterPropertiesSet"/>'s
            <see cref="T:Spring.Objects.Factory.IInitializingObject"/>
            method or a custom init-method.
            </p>
            </remarks>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.WebServiceProxyTypeBuilder.ImplementConstructors(System.Reflection.Emit.TypeBuilder)">
            <summary>
            Implements constructors for the proxy class.
            </summary>
            <remarks>
            This implementation generates an empty noop default constructor 
            </remarks>
            <param name="builder">
            The <see cref="T:System.Type"/> builder to use.
            </param>
        </member>
        <member name="T:Spring.Web.Services.WebServiceHandlerFactory">
            <summary>
            An <see cref="T:System.Web.IHttpHandlerFactory"/> implementation that
            retrieves configured <c>WebService</c> objects from the Spring.NET web
            application context.
            </summary>
            <remarks>
            This handler factory uses web service name from the URL, without the extension,
            to find web service object in the Spring context.
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.Services.WebServiceHandlerFactory.System#Web#IHttpHandlerFactory#GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Retrieves instance of the page from Spring web application context.
            </summary>
            <param name="context">current HttpContext</param>
            <param name="requestType">type of HTTP request (GET, POST, etc.)</param>
            <param name="url">requested page URL</param>
            <param name="path">translated server path for the page</param>
            <returns>instance of the configured page object</returns>
        </member>
        <member name="T:Spring.Web.Support.AbstractHandlerFactory">
            <summary>
            Provides base functionality for Spring.NET context-aware
            <see cref="T:System.Web.IHttpHandlerFactory"/> implementations.
            </summary>
            <remarks>
            <p>
            Provides derived classes with a default implementation of
            <see cref="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)"/> method.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="F:Spring.Web.Support.AbstractHandlerFactory._reusableHandlerCache">
            <summary>
            Holds all handlers having <see cref="P:System.Web.IHttpHandler.IsReusable"/> == true.
            </summary>
        </member>
        <member name="F:Spring.Web.Support.AbstractHandlerFactory.s_simpleHandlerFactory">
            <summary>
            Holds an instance of the instrinsic System.Web.UI.SimpleHandlerFactory
            </summary>
        </member>
        <member name="F:Spring.Web.Support.AbstractHandlerFactory.Log">
            <summary>
            Holds the shared logger for all factories.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.#ctor">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Web.Support.AbstractHandlerFactory"/> class.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Returns an appropriate <see cref="T:System.Web.IHttpHandler"/> implementation.
            </summary>
            <param name="context">
            An instance of the <see cref="T:System.Web.HttpContext"/> class that
            provides references to intrinsic server objects.
            </param>
            <param name="requestType">
            The HTTP method of the request.
            </param>
            <param name="url">The request URL.</param>
            <param name="physicalPath">
            The physical path of the requested resource.
            </param>
            <returns>
            A new <see cref="T:System.Web.IHttpHandler"/> object that processes
            the request.
            </returns>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
            <summary>
            Enables a factory to release an existing
            <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <param name="handler">
            The <see cref="T:System.Web.IHttpHandler"/> object to release.
            </param>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.CreateHandlerInstance(Spring.Context.IConfigurableApplicationContext,System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Create a handler instance for the given URL.
            </summary>
            <param name="appContext">the application context corresponding to the current request</param>
            <param name="context">The <see cref="T:System.Web.HttpContext"/> instance for this request.</param>
            <param name="requestType">The HTTP data transfer method (GET, POST, ...)</param>
            <param name="rawUrl">The requested <see cref="P:System.Web.HttpRequest.RawUrl"/>.</param>
            <param name="physicalPath">The physical path of the requested resource.</param>
            <returns>A handler instance for processing the current request.</returns>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.GetCheckedApplicationContext(System.String)">
            <summary>
            Get the application context instance corresponding to the given absolute url and checks 
            it for <see cref="T:Spring.Context.IConfigurableApplicationContext"/> contract and being not null.
            </summary>
            <param name="url">the absolute url</param>
            <exception cref="T:System.ArgumentException">
            if no context is found
            </exception>
            <exception cref="T:System.InvalidOperationException">
            if context is not an <see cref="T:Spring.Context.IConfigurableApplicationContext"/>
            </exception>
            <returns>teh application context instance corresponding to the given absolute url.</returns>
            <remarks>
            Calls <see cref="M:Spring.Web.Support.AbstractHandlerFactory.GetContext(System.String)"/> to obtain a context instance.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.GetContext(System.String)">
            <summary>
            Returns the unchecked, raw application context for the given virtual path.
            </summary>
            <param name="virtualPath">the virtual path to get the context for.</param>
            <returns>the context or null.</returns>
            <remarks>
            Subclasses may override this method to change the context source. 
            By default, <see cref="M:Spring.Context.Support.WebApplicationContext.GetContext(System.String)"/> is used for obtaining context instances.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.FindWebObjectDefinition(System.String,Spring.Objects.Factory.Config.IConfigurableListableObjectFactory)">
            <summary>
            DO NOT USE - this is subject to change!
            </summary>
            <param name="appRelativeVirtualPath"></param>
            <param name="objectFactory"></param>
            <returns>
            This method requires registrars to follow the convention of registering web object definitions using their
            application relative urls (~/mypath/mypage.aspx). 
            </returns>
            <remarks>
            Resolve an object definition by url.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.ApplyDependencyInjectionInfrastructure(System.Web.IHttpHandler,Spring.Context.IApplicationContext)">
            <summary>
            Apply dependency injection stuff on the handler.
            </summary>
            <param name="handler">the handler to be intercepted</param>
            <param name="applicationContext">the context responsible for configuring this handler</param>
        </member>
        <member name="P:Spring.Web.Support.AbstractHandlerFactory.SimpleHandlerFactory">
            <summary>
            Get the global instance of System.Web.UI.SimpleHandlerFactory
            </summary>
            <remarks>
            This factory is a plaform version agnostic way to instantiate 
            arbitrary handlers without the need for additional reflection.
            </remarks>
        </member>
        <member name="T:Spring.Web.Support.AbstractHandlerFactory.NamedObjectDefinition">
            <summary>
            Holds a named <see cref="T:Spring.Objects.Factory.Config.IObjectDefinition"/>
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.NamedObjectDefinition.#ctor(System.String,Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Creates a new name/objectdefinition pair.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.AbstractHandlerFactory.NamedObjectDefinition.Name">
            <summary>
            Get the name of the attached object definition
            </summary>
        </member>
        <member name="P:Spring.Web.Support.AbstractHandlerFactory.NamedObjectDefinition.ObjectDefinition">
            <summary>
            Get the <see cref="T:Spring.Objects.Factory.Config.IObjectDefinition"/>.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.ContextMonitor">
            <summary>
            <see cref="T:System.Web.IHttpHandler"/> implementation that allows users to monitor state 
            of the Spring.NET web application context.
            </summary>
            <remarks>
            <p>
            
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.Support.ContextMonitor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spring.Web.Support.ContextMonitor"/> class.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.ContextMonitor.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes HTTP request.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, <see langword="Request"/>, <see langword="Response"/>, <see langword="Session"/>, and <see langword="Server"/>)<see langword=""/> used to service HTTP requests.</param>
        </member>
        <member name="P:Spring.Web.Support.ContextMonitor.IsReusable">
            <summary>
            Gets a value indicating whether another request can use
            this <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <value><c>True</c> if this handler is reusable, <c>False</c> otherwise.</value>
        </member>
        <member name="T:Spring.Web.Support.ControlAccessor">
            <summary>
            Helper class for easier access to reflected Control members.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.ControlAccessor.#ctor(System.Web.UI.Control)">
            <summary>
            Instantiates a new Accessor.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Spring.Web.Support.ControlAccessor.GetTarget">
            <summary>
            Returns the underlying ControlCollection instance.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.ControlAccessor.Controls">
            <summary>
            Gets or sets the ControlCollection of the target without accessing the target's <see cref="P:System.Web.UI.Control.Controls"/> property.
            </summary>
            <remarks>
            If the underlying collection is null, it is automatically created.
            </remarks>
        </member>
        <member name="T:Spring.Web.Support.ControlCollectionAccessor">
            <summary>
            Helper class for easier access to reflected ControlCollection members.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.ControlCollectionAccessor.GetTarget">
            <summary>
            Returns the underlying ControlCollection instance.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.ControlCollectionAccessor.GetTargetType">
            <summary>
            Returns the type of the underlying ControlCollection instance.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.ControlCollectionAccessor.#ctor(System.Web.UI.ControlCollection)">
            <summary>
            Creates a new Accessor for a given <see cref="T:System.Web.UI.ControlCollection"/>.
            </summary>
            <param name="controls">The <see cref="T:System.Web.UI.ControlCollection"/> to be accessed</param>
        </member>
        <member name="P:Spring.Web.Support.ControlCollectionAccessor.Owner">
            <summary>
            Gets or sets the owner of the underlying ControlCollection.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.ControlInterceptor">
            <summary>
            Support Class providing a method to ensure a control has been intercepted
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="F:Spring.Web.Support.ControlInterceptor.s_availableInterceptionStrategies">
            <summary>
            Holds all available interception strategies
            </summary>
        </member>
        <member name="F:Spring.Web.Support.ControlInterceptor.s_noopInterceptionStrategy">
            <summary>
            The last resort interception strategy...
            </summary>
        </member>
        <member name="F:Spring.Web.Support.ControlInterceptor.s_cachedInterceptionStrategies">
            <summary>
            Holds a control.GetType()->IInterceptionStrategy table.
            </summary>
        </member>
        <member name="F:Spring.Web.Support.ControlInterceptor.s_knownInterceptionStrategies">
            <summary>
            Holds well-known Type/Strategy mappings.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.ControlInterceptor.EnsureControlIntercepted(Spring.Context.IApplicationContext,System.Web.UI.Control)">
            <summary>
            Ensures, a control has been intercepted to support Web-DI. If not, the control will be intercepted.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.IInterceptionStrategy">
            <summary>
            Any concrete interception strategy must implement this interface
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.IInterceptionStrategy.Intercept(Spring.Context.IApplicationContext,Spring.Web.Support.ControlAccessor,Spring.Web.Support.ControlCollectionAccessor)">
            <summary>
            Any implementation must never throw an exception from this method. 
            Instead <c>false</c> must be returned to indicate interception failure.
            </summary>
            <returns>
            <c>true</c>, if interception succeeded. <c>false</c> otherwise.
            </returns>
        </member>
        <member name="T:Spring.Web.Support.DefaultHandlerFactory">
            <summary>
            SimpleHandlerFactory is used to wrap any arbitrary <see cref="T:System.Web.IHttpHandlerFactory"/> to make it "Spring-aware".
            </summary>
            <remarks>
            By default, an instance of <see cref="T:System.Web.UI.SimpleHandlerFactory"/> is used as underlying factory.    
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.DefaultHandlerFactory.#ctor">
            <summary>
            Creates a new instance, using a <see cref="T:System.Web.UI.SimpleHandlerFactory"/> as underlying factory.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.DefaultHandlerFactory.#ctor(System.Type)">
            <summary>
            Create a new instance, using an instance of <paramref name="innerFactoryType"/> as underlying factory.
            </summary>
            <param name="innerFactoryType">a type that implements <see cref="T:System.Web.IHttpHandlerFactory"/></param>
        </member>
        <member name="M:Spring.Web.Support.DefaultHandlerFactory.#ctor(System.Web.IHttpHandlerFactory)">
            <summary>
            Create a new instance, using <paramref name="innerFactory"/> as underlying factory.
            </summary>
            <param name="innerFactory">the factory to be wrapped.</param>
        </member>
        <member name="M:Spring.Web.Support.DefaultHandlerFactory.CreateHandlerInstance(Spring.Context.IConfigurableApplicationContext,System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Create a handler instance for the given URL.
            </summary>
            <param name="appContext">the application context corresponding to the current request</param>
            <param name="context">The <see cref="T:System.Web.HttpContext"/> instance for this request.</param>
            <param name="requestType">The HTTP data transfer method (GET, POST, ...)</param>
            <param name="rawUrl">The requested <see cref="P:System.Web.HttpRequest.RawUrl"/>.</param>
            <param name="physicalPath">The physical path of the requested resource.</param>
            <returns>A handler instance for processing the current request.</returns>
        </member>
        <member name="M:Spring.Web.Support.DefaultHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
            <summary>
            Enables a factory to release an existing
            <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <param name="handler">
            The <see cref="T:System.Web.IHttpHandler"/> object to release.
            </param>
        </member>
        <member name="T:Spring.Web.Support.DefaultResultFactory">
            <summary>
            This result factory implementation creates <see cref="T:Spring.Web.Support.Result"/> instances from a given string representation.
            </summary>
            <remarks>
            For a larger example illustrating the customization of result processing, <see cref="T:Spring.Web.Support.ResultFactoryRegistry"/>.
            </remarks>
            <seealso cref="T:Spring.Web.Support.ResultFactoryRegistry"/>
            <seealso cref="T:Spring.Web.Support.IResult"/>
            <seealso cref="T:Spring.Web.Support.Result"/>
            <seealso cref="T:Spring.Web.Support.DefaultResultWebNavigator"/>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.Support.IResultFactory">
            <summary>
            A result factory is responsible for create an <see cref="T:Spring.Web.Support.IResult"/> instance from a given string representation.
            </summary>
            <remarks>
            For a larger example illustrating the customization of result processing, <see cref="T:Spring.Web.Support.ResultFactoryRegistry"/>.
            </remarks>
            <seealso cref="T:Spring.Web.Support.ResultFactoryRegistry"/>
            <seealso cref="T:Spring.Web.Support.IResult"/>
            <seealso cref="T:Spring.Web.Support.Result"/>
            <seealso cref="T:Spring.Web.Support.DefaultResultWebNavigator"/>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.IResultFactory.CreateResult(System.String,System.String)">
            <summary>
            Create an <see cref="T:Spring.Web.Support.IResult"/> instance from the given string representation.
            </summary>
            <param name="resultMode">the resultMode that caused triggering this factory.</param>
            <param name="resultText">the remainder string to be interpreted and converted into an <see cref="T:Spring.Web.Support.IResult"/>.</param>
            <returns>An <see cref="T:Spring.Web.Support.IResult"/> instance. Must never be null!</returns>
            <remarks>
            Note to implementors: This method must never return null. Instead exceptions should be thrown.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultFactory.CreateResult(System.String,System.String)">
            <summary>
            Create a new <see cref="T:Spring.Web.Support.Result"/> from the specified <paramref name="resultText"/>.
            </summary>
            <param name="resultMode">the result mode.</param>
            <param name="resultText">the string representation of the result.</param>
            <returns>the <see cref="T:Spring.Web.Support.Result"/> instance created from <paramref name="resultText"/>.</returns>
        </member>
        <member name="T:Spring.Web.Support.DefaultResultWebNavigator">
            <summary>
            The default implementation of the <see cref="T:Spring.Web.Support.IResultWebNavigator"/> interface.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.IResultWebNavigator">
            <summary>
            Defines the interface, all hierarchical navigators capable of 
            dealing with <see cref="T:Spring.Web.Support.IResult"/> instances must implement.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.IHierarchicalWebNavigator">
            <summary>
            An extension of <see cref="T:Spring.Web.Support.IWebNavigator"/> that must be implemented by 
            navigators that can be part of a hierarchy.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.Support.IWebNavigator">
            <summary>
            Any component capable of navigating and participating in the navigation logic must implement this interface.
            </summary>
            <seealso cref="T:Spring.Web.Support.IHierarchicalWebNavigator"/>
            <seealso cref="T:Spring.Web.Support.IResultWebNavigator"/>
            <seealso cref="T:Spring.Web.Support.DefaultResultWebNavigator"/>
            <seealso cref="T:Spring.Web.Support.WebFormsResultWebNavigator"/>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.IWebNavigator.CanNavigateTo(System.String)">
            <summary>
            Determines, whether this navigator or one of its parents can 
            navigate to the destination specified in <paramref name="destination"/>.
            </summary>
            <param name="destination">the name of the navigation destination</param>
            <returns>true, if this navigator can navigate to the destination.</returns>
        </member>
        <member name="M:Spring.Web.Support.IWebNavigator.NavigateTo(System.String,System.Object,System.Object)">
            <summary>
            Instruct the navigator to navigate to the specified navigation destination.
            </summary>
            <param name="destination">the destination to navigate to.</param>
            <param name="sender">the sender that issued the navigation request.</param>
            <param name="context">the context to evaluate this navigation request in.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">if this navigator cannot navigate to the specified <paramref name="destination"/> (<see cref="M:Spring.Web.Support.IWebNavigator.CanNavigateTo(System.String)"/>).</exception>
        </member>
        <member name="M:Spring.Web.Support.IWebNavigator.GetResultUri(System.String,System.Object,System.Object)">
            <summary>
            Creates an uri poiniting to the specified navigation destination.
            </summary>
            <param name="destination">the destination to navigate to.</param>
            <param name="sender">the sender that issued the navigation request.</param>
            <param name="context">the context to evaluate this navigation request in.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">if this navigator cannot navigate to the specified <paramref name="destination"/> (<see cref="M:Spring.Web.Support.IWebNavigator.CanNavigateTo(System.String)"/>).</exception>
        </member>
        <member name="P:Spring.Web.Support.IHierarchicalWebNavigator.ParentNavigator">
            <summary>
            If any, get the parent navigator of the current navigator instance. May be null.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.IResultWebNavigator.Results">
            <summary>
            Contains the mappings of navigation destination names to <see cref="T:Spring.Web.Support.IResult"/> 
            instances or their corresponding textual representations.<br/>
            See <see cref="T:Spring.Web.Support.ResultFactoryRegistry"/> for more information on how textual representations are resolved.
            </summary>
            <seealso cref="T:Spring.Web.Support.IWebNavigator"/>
            <seealso cref="T:Spring.Web.Support.IHierarchicalWebNavigator"/>
            <seealso cref="T:Spring.Web.Support.DefaultResultWebNavigator"/>
            <seealso cref="T:Spring.Web.Support.ResultFactoryRegistry"/>
            <seealso cref="T:Spring.Web.Support.DefaultResultFactory"/>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.#ctor">
            <summary>
            Creates and initializes a new instance.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.#ctor(Spring.Web.Support.IWebNavigator,System.Collections.IDictionary,System.Boolean)">
            <summary>
            Creates and initializes a new instance.
            </summary>
            <param name="parent">the parent of this instance. May be null.</param>
            <param name="initialResults">a dictionary of result name to result mappings. May be null.</param>
            <param name="ignoreCase">sets, how this navigator treats case sensitivity of result names</param>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.CreateResultsDictionary(System.Collections.IDictionary)">
            <summary>
            Create the dictionary instance to be used by this navigator component.
            </summary>
            <param name="initialResults">a dictionary of intitial result mappings</param>
            <returns>the dictionary, that will be used by this navigator.</returns>
            <remarks>
            Implementors may override this for creating custom dictionaries.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.CanNavigateTo(System.String)">
            <summary>
            Determines, whether this navigator or one of its parents can 
            navigate to the destination specified in <paramref name="destination"/>.
            </summary>
            <param name="destination">the name of the navigation destination</param>
            <returns>true, if this navigator can navigate to the destination.</returns>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.NavigateTo(System.String,System.Object,System.Object)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="destination">Name of the result.</param>
            <param name="sender">the instance that issued this request</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result.</param>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.GetResultUri(System.String,System.Object,System.Object)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result evaluated using this Page for expression 
            </summary>
            <param name="resultName">Name of the result.</param>
            <param name="sender">the instance that issued this request</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result</param>
            <returns>A redirect url string.</returns>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.GetResult(System.String)">
            <summary>
            Obtain the named result instance from the <see cref="P:Spring.Web.Support.DefaultResultWebNavigator.Results"/> dictionary. If necessary, the actual representation of the result 
            will be converted to an <see cref="T:Spring.Web.Support.IResult"/> instance by this method.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.HandleUnknownResultType(System.String,System.Object)">
            <summary>
            Handle an unknown result object.
            </summary>
            <param name="name">the name of the result</param>
            <param name="val">the result instance obtained from the <see cref="P:Spring.Web.Support.DefaultResultWebNavigator.Results"/> dictionary</param>
            <remarks>
            By default, this method throws a <see cref="T:Spring.Core.TypeMismatchException"/>.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.DefaultResultWebNavigator.HandleUnknownDestination(System.String,System.Object,System.Object)">
            <summary>
            Handle an unknown destination.
            </summary>
            <param name="destination">the destination that could not be resolved.</param>
            <param name="sender">the sender that issued the request</param>
            <param name="context">the context to be used for evaluating any dynamic parts of the destination</param>
            <returns>the uri as being returned from <see cref="M:Spring.Web.Support.DefaultResultWebNavigator.GetResultUri(System.String,System.Object,System.Object)"/></returns>
            <remarks>
            By default, this method throws a <see cref="T:System.ArgumentOutOfRangeException"/>.
            </remarks>
        </member>
        <member name="P:Spring.Web.Support.DefaultResultWebNavigator.IsCaseSensitive">
            <summary>
            Indicates, whether result names are treated case sensitive by this navigator.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.DefaultResultWebNavigator.ParentNavigator">
            <summary>
            Get/Set the parent of this navigator.
            </summary>
            <exception cref="T:System.InvalidOperationException">if this navigator already has a parent.</exception>
        </member>
        <member name="P:Spring.Web.Support.DefaultResultWebNavigator.Results">
            <summary>
            Gets or sets map of result names to <see cref="T:Spring.Web.Support.IResult"/> instances or their textual representations. 
            See <see cref="T:Spring.Web.Support.ResultFactoryRegistry"/> for information on parsing textual <see cref="T:Spring.Web.Support.IResult"/> representations.
            </summary>
            <seealso cref="T:Spring.Web.Support.IResult"/>
            <seealso cref="T:Spring.Web.Support.ResultFactoryRegistry"/>
            <seealso cref="T:Spring.Web.Support.IResultFactory"/>
            <seealso cref="T:Spring.Web.Support.DefaultResultFactory"/>
        </member>
        <member name="T:Spring.Web.Support.HandlerMap">
            <summary>
            Holds a list of url <see cref="T:System.Text.RegularExpressions.Regex"/> expressions and their corresponding names of responsible <see cref="T:System.Web.IHttpHandlerFactory"/> 
            or <see cref="T:System.Web.IHttpHandler"/> objects managed by the container.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.Add(System.String,System.String)">
            <summary>
            Maps the specified url pattern expression to an object name denoting a <see cref="T:System.Web.IHttpHandlerFactory"/> or <see cref="T:System.Web.IHttpHandler"/> object.
            </summary>
            <param name="urlPattern">the string pattern (see conform to <see cref="T:System.Text.RegularExpressions.Regex"/> syntax)</param>
            <param name="handlerObjectName">an object name denoting the spring-managed handler definition</param>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.Add(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Maps the specified url pattern expression to an object name denoting a <see cref="T:System.Web.IHttpHandlerFactory"/> or <see cref="T:System.Web.IHttpHandler"/> object.
            </summary>
            <param name="urlPattern">the url pattern</param>
            <param name="handlerObjectName">an object name denoting the spring-managed handler definition</param>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.MapPath(System.String)">
            <summary>
            Maps the <paramref name="virtualPath"/> to a handler object name by matching against all registered patterns.
            </summary>
            <param name="virtualPath">the virtual path</param>
            <returns>the object name</returns>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            Add a new mapping
            </summary>
            <param name="key">an url pattern string</param>
            <param name="value">a handler object name string</param>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.Clear">
            <summary>
            Clear the mapping table.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all <see cref="T:Spring.Web.Support.HandlerMapEntry"/> entries to the specified array.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Get an enumerator for iterating over the list of registered mappings.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            Not supported by this implementation.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Not supported by this implementation.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.HandlerMap.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Not supported by this implementation.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.HandlerMap.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            Add or replace a mapping
            </summary>
            <remarks>
            Getter will throw a <see cref="T:System.NotSupportedException"/>!
            </remarks>
            <param name="key">an url pattern string</param>
        </member>
        <member name="P:Spring.Web.Support.HandlerMap.IsReadOnly">
            <summary>
            Always returns false.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.HandlerMap.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"></see> object has a fixed size.
            </summary>
            
            <returns>
            true if the <see cref="T:System.Collections.IDictionary"></see> object has a fixed size; otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Spring.Web.Support.HandlerMap.Count">
            <summary>
            Get the number of registered mappings.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.HandlerMap.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.HandlerMap.IsSynchronized">
            <summary>
            Always returns false.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.HandlerMap.System#Collections#IDictionary#Keys">
            <summary>
            Not supported by this implementation.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.HandlerMap.System#Collections#IDictionary#Values">
            <summary>
            Not supported by this implementation.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.HandlerMapEntry">
            <summary>
            Holds pairs of (url pattern, handler object name).
            </summary>
            <seealso cref="T:Spring.Web.Support.HandlerMap"/>
            <seealso cref="T:Spring.Web.Support.MappingHandlerFactory"/>
            <seealso cref="T:Spring.Web.Support.MappingHandlerFactoryConfigurer"/>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.HandlerMapEntry.#ctor(System.String,System.String)">
            <summary>
            Create a new instance.
            </summary>
            <param name="urlPattern"></param>
            <param name="handlerObjectName"></param>
        </member>
        <member name="M:Spring.Web.Support.HandlerMapEntry.#ctor(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
             Create a new instance
            </summary>
            <param name="urlPattern"></param>
            <param name="handlerObjectName"></param>
        </member>
        <member name="M:Spring.Web.Support.HandlerMapEntry.ToString">
            <summary>
            Return a string representation of this entry.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.HandlerMapEntry.UrlPattern">
            <summary>
             Get the url pattern
            </summary>
        </member>
        <member name="P:Spring.Web.Support.HandlerMapEntry.HandlerObjectName">
            <summary>
            Get the handler object name
            </summary>
        </member>
        <member name="T:Spring.Web.Support.InterceptControlCollectionOwnerStrategy">
            <summary>
            This strategy replaces the original collection's owner with an intercepting proxy
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.Support.InterceptControlCollectionStrategy">
            <summary>
            This strategy enhances a ControlCollection's type by 
            dynamically implementing ISupportsWebDependencyInjection on this type
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="F:Spring.Web.Support.InterceptControlCollectionStrategy.s_collectionMethods">
            <summary>
            The list of methods to be intercepted for a ControlCollection
            </summary>
        </member>
        <member name="F:Spring.Web.Support.InterceptControlCollectionStrategy.s_interceptedCollectionTypeCache">
            <summary>
            Holds a table of already known intercepted ControlCollection types
            </summary>
        </member>
        <member name="M:Spring.Web.Support.InterceptControlCollectionStrategy.Intercept(Spring.Context.IApplicationContext,Spring.Web.Support.ControlAccessor,Spring.Web.Support.ControlCollectionAccessor)">
            <summary>
            Intercepts the given <see cref="T:System.Web.UI.ControlCollection"/> by dynamically deriving 
            the original type and let it implement <see cref="T:Spring.Web.Support.ISupportsWebDependencyInjection"/>.
            </summary>
            <param name="defaultApplicationContext">the ApplicationContext to be set on the collection instance.</param>
            <param name="ctlAccessor">a wrapper around the owner control instance.</param>
            <param name="ctlColAccessor">a wrapper around the collection instance.</param>
            <returns><value>true</value>, if interception was successful.  <value>false</value> otherwise</returns>
        </member>
        <member name="T:Spring.Web.Support.InterceptControlCollectionStrategy.InjectDependenciesCallbackHandler">
            <summary>
            Holds a reference to the static(!) callback-method to be used during generation of intercepted ControlCollection-Types
            </summary>
        </member>
        <member name="T:Spring.Web.Support.IResult">
            <summary>
            An <see cref="T:Spring.Web.Support.IResult"/> encapsulates concrete navigation logic. Usually executing a 
            result will invoke <see cref="M:System.Web.HttpResponse.Redirect(System.String)"/> or <see cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)"/>.
            </summary>
            <remarks>
            For a larger example illustrating the customization of result processing <see cref="T:Spring.Web.Support.ResultFactoryRegistry"/>.
            </remarks>
            <seealso cref="T:Spring.Web.Support.ResultFactoryRegistry"/>
            <seealso cref="T:Spring.Web.Support.IResult"/>
            <seealso cref="T:Spring.Web.Support.Result"/>
            <seealso cref="T:Spring.Web.Support.DefaultResultWebNavigator"/>
            <seealso cref="M:Spring.Web.UI.Page.SetResult(System.String,System.Object)"/>
            <seealso cref="M:Spring.Web.UI.UserControl.SetResult(System.String,System.Object)"/>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.IResult.Navigate(System.Object)">
            <summary>
            Execute the result logic within the given <paramref name="context"/>.
            </summary>
            <param name="context">the context to evaluate this request in.</param>
        </member>
        <member name="M:Spring.Web.Support.IResult.GetRedirectUri(System.Object)">
            <summary>
            Returns an url representation of the result logic within the given <paramref name="context"/>.
            </summary>
            <param name="context">the context to evaluate this request in.</param>
            <returns>the url corresponding to the result instance.</returns>
            <remarks>
            The returned url is not necessarily fully qualified nor absolute. Returned urls may be relative to the
            given context.<br/>
            To produce a client-usable url, consider applying e.g. <see cref="M:System.Web.UI.Control.ResolveUrl(System.String)"/> or 
            <see cref="M:System.Web.UI.Control.ResolveClientUrl(System.String)"/> before writing the result url to the response.
            </remarks>
        </member>
        <member name="T:Spring.Web.Support.ISupportsWebDependencyInjection">
            <summary>
            "Contract"-interface of the Web-DI infrastructure.
            </summary>
            <remarks>
            This interface supports Spring's DI infrastructure and normally doesn't need to be implemented<br/>
            <br/>
            Any Page, Control or ControlCollection implementing this interface guarantees to 
            call <see cref="M:Spring.Web.Support.WebDependencyInjectionUtils.InjectDependenciesRecursive(Spring.Context.IApplicationContext,System.Web.UI.Control)"/> on any control being added 
            before it is actually added to the child-collection.
            </remarks>
            <example>
            <p>The following example shows, how to make a Control support the DI-infrastructure:</p>
            <code language="c#">
            class MyControl : Control, ISupportsWebDependencyInjection
            {
            	private IApplicationContext _defaultApplicationContext;
            
            	public IApplicationContext DefaultApplicationContext
            	{
            		get { return _defaultApplicationContext; }
            		set { _defaultApplicationContext = value; }
            	}
            
            	override protected AddedControl( Control control, int index )
            	{
            		WebUtils.InjectDependenciesRecursive( _defaultApplicationContext, control );
            		base.AddedControl( control, index );
            	}
            }
            </code>
            </example>
            <example>
            <p>The following example shows, how to make a ControlCollection support the DI-infrastructure:</p>
            <p>Note, that you MUST implement the single-argument constructor <c>ControlCollection( Control owner )</c>!</p>
            <code language="c#">
            class MyControlCollection : ControlCollection, ISupportsWebDependencyInjection
            {
            	private IApplicationContext _defaultApplicationContext;
            
            	public MyControlCollection( Control owner ) : base( owner )
            	{}
            
            	public IApplicationContext DefaultApplicationContext
            	{
            		get { return _defaultApplicationContext; }
            		set { _defaultApplicationContext = value; }
            	}
            
            	override public Add( Control child )
            	{
            		WebUtils.InjectDependenciesRecursive( _defaultApplicationContext, child );
            		base.Add( child );
            	}
            
            	override public AddAt( int index, Control child )
            	{
            		WebUtils.InjectDependenciesRecursive( _defaultApplicationContext, child );
            		base.AddAt( index, child );
            	}
            }
            </code>
            </example>
            <author>Erich Eichinger</author>
        </member>
        <member name="P:Spring.Web.Support.ISupportsWebDependencyInjection.DefaultApplicationContext">
            <summary>
            Holds the default <see cref="T:Spring.Context.IApplicationContext"/> instance to be used during injecting a control-tree.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.IWebNavigable">
            <summary>
            Any component participating in the navigation infrastructure must implement this interface.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="P:Spring.Web.Support.IWebNavigable.WebNavigator">
            <summary>
            Return the <see cref="T:Spring.Web.Support.IWebNavigator"/> associated with this component.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.LocalResourceManager">
            <summary>
            This ResourceManager implementation swallows <see cref="T:System.Resources.MissingManifestResourceException"/>s and 
            simply returns <c>null</c> from <see cref="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)"/> if no resource is found.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.LocalResourceManager.#cctor">
            <summary>
            Avoid beforeFieldInit
            </summary>
        </member>
        <member name="M:Spring.Web.Support.LocalResourceManager.ResourceProviderResourceManager.GetObject(System.String)">
            <summary>
            Returns the value of the specified <see cref="T:System.Object"></see> resource.
            </summary>
            <returns>
            The value of the resource localized for the caller's current culture settings. If a match is not possible, null is returned. The resource value can be null.
            </returns>
            <param name="name">The name of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null. </exception>
        </member>
        <member name="M:Spring.Web.Support.LocalResourceManager.ResourceProviderResourceManager.GetObject(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the value of the <see cref="T:System.Object"></see> resource localized for the specified culture.
            </summary>
            <returns>
            The value of the resource, localized for the specified culture. If a "best match" is not possible, null is returned.
            </returns>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> object that represents the culture for which the resource is localized. Note that if the resource is not localized for this culture, the lookup will fall back using the culture's <see cref="P:System.Globalization.CultureInfo.Parent"></see> property, stopping after checking in the neutral culture.If this value is null, the <see cref="T:System.Globalization.CultureInfo"></see> is obtained using the culture's <see cref="P:System.Globalization.CultureInfo.CurrentUICulture"></see> property. </param>
            <param name="name">The name of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null. </exception>
        </member>
        <member name="M:Spring.Web.Support.LocalResourceManager.LocalResXAssemblyResourceManager.GetObject(System.String)">
            <summary>
            Returns the value of the specified <see cref="T:System.Object"></see> resource.
            </summary>
            <returns>
            The value of the resource localized for the caller's current culture settings. If a match is not possible, null is returned. The resource value can be null.
            </returns>
            <param name="name">The name of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null. </exception>
        </member>
        <member name="M:Spring.Web.Support.LocalResourceManager.LocalResXAssemblyResourceManager.GetObject(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the value of the <see cref="T:System.Object"></see> resource localized for the specified culture.
            </summary>
            <returns>
            The value of the resource, localized for the specified culture. If a "best match" is not possible, null is returned.
            </returns>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> object that represents the culture for which the resource is localized. Note that if the resource is not localized for this culture, the lookup will fall back using the culture's <see cref="P:System.Globalization.CultureInfo.Parent"></see> property, stopping after checking in the neutral culture.If this value is null, the <see cref="T:System.Globalization.CultureInfo"></see> is obtained using the culture's <see cref="P:System.Globalization.CultureInfo.CurrentUICulture"></see> property. </param>
            <param name="name">The name of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException">The name parameter is null. </exception>
        </member>
        <member name="T:Spring.Web.Support.MappingHandlerFactory">
            <summary>
            MappingHandleryFactory allows for full Spring-managed &lt;httpHandlers&gt; configuration. 
            It uses regular expressions for url matching.
            </summary>
            <remarks>
            <example>
            The example below shows, how to map all url requests to spring and let
            <see cref="T:Spring.Web.Support.MappingHandlerFactory"/> resolve urls to container-managed <see cref="T:System.Web.IHttpHandlerFactory"/> or <see cref="T:System.Web.IHttpHandler"/> objects.
            <code>
            // web.config
            
            &lt;httpHandlers&gt;
              &lt;!-- map all requests to spring (just for demo - don't do this at home!) --&gt;
              &lt;add verb="*" path="*.*" type="Spring.Web.Support.MappingHandlerFactory, Spring.Web" /&gt;
            &lt;/httpHandlers&gt;
            
            // spring-objects.config
            
            &lt;object type="Spring.Web.Support.MappingHandlerFactoryConfigurer, Spring.Web"&gt;
              &lt;property name="HandlerMap"&gt;
            	  &lt;dictionary&gt;
            	      &lt;entry key="\.ashx$" value="standardHandlerFactory" /&gt;
            	      &lt;!-- map any request ending with *.whatever to standardHandlerFactory --&gt;
            	      &lt;entry key="\.whatever$" value="specialHandlerFactory" /&gt;
            	  &lt;/dictionary&gt;
              &lt;/property&gt;
            &lt;/object&gt;
            
            &lt;object name="standardHandlerFactory" type="Spring.Web.Support.DefaultHandlerFactory, Spring.Web" /&gt;
            
            &lt;object name="specialHandlerFactory" type="MySpecialHandlerFactoryImpl" /&gt;
            </code>
            </example>
            </remarks>
            <seealso cref="T:System.Web.IHttpHandlerFactory"/>
            <seealso cref="T:System.Web.IHttpHandler"/>
            <seealso cref="P:Spring.Web.Support.MappingHandlerFactory.HandlerMap"/>
            <seealso cref="T:Spring.Web.Support.MappingHandlerFactoryConfigurer"/>
            <author>Erich Eichinger</author>
        </member>
        <member name="F:Spring.Web.Support.MappingHandlerFactory._handlerWithFactoryTable">
            <summary>
            Holds the cache of handler/factory pairs handed out by this factory. This is required 
            for proper handling of <see cref="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)"/>.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.MappingHandlerFactory.CreateHandlerInstance(Spring.Context.IConfigurableApplicationContext,System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Create a handler instance for the given URL. Will try to find a match of <paramref name="rawUrl"/> onto patterns in <see cref="P:Spring.Web.Support.MappingHandlerFactory.HandlerMap"/>. 
            If a match is found, delegates the call to the matching <see cref="M:System.Web.IHttpHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)"/> method.
            </summary>
            <param name="appContext">the application context corresponding to the current request</param>
            <param name="context">The <see cref="T:System.Web.HttpContext"/> instance for this request.</param>
            <param name="requestType">The HTTP data transfer method (GET, POST, ...)</param>
            <param name="rawUrl">The requested <see cref="P:System.Web.HttpRequest.RawUrl"/>.</param>
            <param name="physicalPath">The physical path of the requested resource.</param>
            <returns>A handler instance for processing the current request.</returns>
        </member>
        <member name="M:Spring.Web.Support.MappingHandlerFactory.MapHandlerInstance(Spring.Context.IConfigurableApplicationContext,System.Web.HttpContext,System.String,System.String,System.String,Spring.Web.Support.HandlerMap,System.Collections.IDictionary)">
            <summary>
            Obtains a handler by mapping <paramref name="rawUrl"/> to the list of patterns in <paramref name="handlerMappings"/>.
            </summary>
            <param name="appContext">the application context corresponding to the current request</param>
            <param name="context">The <see cref="T:System.Web.HttpContext"/> instance for this request.</param>
            <param name="requestType">The HTTP data transfer method (GET, POST, ...)</param>
            <param name="rawUrl">The requested <see cref="P:System.Web.HttpRequest.RawUrl"/>.</param>
            <param name="physicalPath">The physical path of the requested resource.</param>
            <param name="handlerMappings"></param>
            <param name="handlerWithFactoryTable"></param>
            <returns>A handler instance for processing the current request.</returns>
        </member>
        <member name="M:Spring.Web.Support.MappingHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
            <summary>
            Enables a factory to release an existing
            <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <param name="handler">
            The <see cref="T:System.Web.IHttpHandler"/> object to release.
            </param>
        </member>
        <member name="M:Spring.Web.Support.MappingHandlerFactory.ReleaseHandler(System.Web.IHttpHandler,System.Collections.IDictionary)">
            <summary>
            Removes the handler from the handler/factory dictionary and releases the handler.
            </summary>
            <param name="handler">the handler to be released</param>
            <param name="_handlerWithFactoryTable">a dictionary containing (<see cref="T:System.Web.IHttpHandler"/>, <see cref="T:System.Web.IHttpHandlerFactory"/>) entries.</param>
        </member>
        <member name="P:Spring.Web.Support.MappingHandlerFactory.HandlerMap">
            <summary>
            Holds the global list of mappings from url patterns to handler names.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.MappingHandlerFactoryConfigurer">
            <summary>
            Configures <see cref="T:Spring.Web.Support.MappingHandlerFactory"/>.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="P:Spring.Web.Support.MappingHandlerFactoryConfigurer.HandlerMap">
            <summary>
            Contains mappings of url patterns to handler objects.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.MimeMediaType">
            <summary>
            Represents a MIME media type as defined by http://www.iana.org/assignments/media-types/
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.MimeMediaType.Parse(System.String)">
            <summary>
            Parses a string into a <see cref="T:Spring.Web.Support.MimeMediaType"/> instance.
            </summary>
            <param name="mediaType">a valid string representation of a mediaType</param>
            <returns>a new <see cref="T:Spring.Web.Support.MimeMediaType"/> instance</returns>
        </member>
        <member name="M:Spring.Web.Support.MimeMediaType.#ctor">
            <summary>
            Creates a new media type instance representing a generic "application/octet-stream"
            </summary>
        </member>
        <member name="M:Spring.Web.Support.MimeMediaType.#ctor(System.String)">
            <summary>
            Creates a new media type instance representing a generic content type 
            with an unspecified subtype (e.g. "text/*")
            </summary>
        </member>
        <member name="M:Spring.Web.Support.MimeMediaType.#ctor(System.String,System.String)">
            <summary>
            Creates a new media type instance representing a particular media type 
            </summary>
        </member>
        <member name="M:Spring.Web.Support.MimeMediaType.ToString">
            <summary>
            Returns a string representation of this <see cref="T:Spring.Web.Support.MimeMediaType"/> instance.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.MimeMediaType.Equals(Spring.Web.Support.MimeMediaType)">
            <summary>
            Compares this instance to another
            </summary>
            <param name="other">another <see cref="T:Spring.Web.Support.MimeMediaType"/> instance</param>
        </member>
        <member name="M:Spring.Web.Support.MimeMediaType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:Spring.Web.Support.MimeMediaType"></see>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:Spring.Web.Support.MimeMediaType"></see>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:Spring.Web.Support.MimeMediaType"></see>.</param>
        </member>
        <member name="M:Spring.Web.Support.MimeMediaType.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:Spring.Web.Support.MimeMediaType"></see>.
            </returns>
        </member>
        <member name="P:Spring.Web.Support.MimeMediaType.ContentType">
            <summary>
            Gets the content type of this media type instance
            </summary>
        </member>
        <member name="P:Spring.Web.Support.MimeMediaType.SubType">
            <summary>
            Gets the subtype of this media type instance
            </summary>
        </member>
        <member name="T:Spring.Web.Support.MimeMediaType.Application">
            <summary>
            Predefines common application media types
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Application.Octet">
            <summary>
            Represents "application/octet-stream"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Application.Pdf">
            <summary>
            Represents "application/pdf"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Application.Rtf">
            <summary>
            Represents "application/rtf"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Application.Soap">
            <summary>
            Represents "application/soap+xml"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Application.Zip">
            <summary>
            Represents "application/zip"
            </summary>
        </member>
        <member name="T:Spring.Web.Support.MimeMediaType.Image">
            <summary>
            Predefines common image media types
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Image.Gif">
            <summary>
            Represents "image/gif"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Image.Jpeg">
            <summary>
            Represents "image/jpeg"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Image.Tiff">
            <summary>
            Represents "image/tiff"
            </summary>
        </member>
        <member name="T:Spring.Web.Support.MimeMediaType.Text">
            <summary>
            Predefines common text media types
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Text.Html">
            <summary>
            Represents "text/html"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Text.Plain">
            <summary>
            Represents "text/plain"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Text.RichText">
            <summary>
            Represents "text/richtext"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Text.Xml">
            <summary>
            Represents "text/xml"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Text.Javascript">
            <summary>
            Represents "text/javascript"
            </summary>
        </member>
        <member name="F:Spring.Web.Support.MimeMediaType.Text.Css">
            <summary>
            Represents "text/css"
            </summary>
        </member>
        <member name="T:Spring.Web.Support.PageHandlerFactory">
            <summary>
            Implementation of <see cref="T:System.Web.IHttpHandlerFactory"/> that retrieves
            configured <see cref="T:System.Web.IHttpHandler"/> instances from Spring web application context.
            </summary>
            <remarks>
            <para>
            This handler factory uses the page name from the URL, without the extension,
            to find the handler object in the Spring context. This means that the target object 
            definition doesn't need to resolve to an .aspx page -- it can be any valid 
            object that implements <see cref="T:System.Web.IHttpHandler"/> interface.
            </para>
            <para>
            If the specified page is not found in the Spring application context, this
            handler factory falls back to the standard ASP.NET behavior and tries 
            to find physical page with a given name.
            </para>
            <para>
            In either case, handlers that implement <see cref="T:Spring.Context.IApplicationContextAware"/>
            and <see cref="T:Spring.Objects.ISharedStateAware"/> will be provided with the references
            to appropriate Spring.NET application context (based on the request URL) 
            and a <see cref="T:System.Collections.IDictionary"/> that should be used to store the information
            that needs to be shared by all instances of the handler.
            </para>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.Support.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Retrieves instance of the configured page from Spring web application context, 
            or if page is not defined in Spring config file tries to find it using standard
            ASP.Net mechanism.
            </summary>
            <param name="context">Current HttpContext</param>
            <param name="requestType">Type of HTTP request (GET, POST, etc.)</param>
            <param name="url">Requested page URL</param>
            <param name="physicalPath">Translated server path for the page</param>
            <returns>Instance of the IHttpHandler object that should be used to process request.</returns>
        </member>
        <member name="M:Spring.Web.Support.PageHandlerFactory.CreateHandlerInstance(Spring.Context.IConfigurableApplicationContext,System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Create a handler instance for the given URL.
            </summary>
            <param name="appContext">the application context corresponding to the current request</param>
            <param name="context">The <see cref="T:System.Web.HttpContext"/> instance for this request.</param>
            <param name="requestType">The HTTP data transfer method (GET, POST, ...)</param>
            <param name="rawUrl">The requested <see cref="P:System.Web.HttpRequest.RawUrl"/>.</param>
            <param name="physicalPath">The physical path of the requested resource.</param>
            <returns>A handler instance for the current request.</returns>
        </member>
        <member name="T:Spring.Web.Support.Result">
            <summary>
            Represents the ASPX result page that an operation maps to.
            </summary>
            <remarks>
            <p>
            Parameters can reference variables accessible from the page using the
            standard NAnt style property notation, namely <c>${varName}</c>.
            </p>
            <p>
            The <c>result</c> <see cref="T:System.String"/> that is passed as the sole
            parameter to the parameterized constructor
            (<see cref="M:Spring.Web.Support.Result.#ctor(System.String)"/>) must adhere to the
            following format:
            </p>
            <code>
            [&lt;mode&gt;:]&lt;targetPage&gt;[?param1,param2,...,paramN]
            </code>
            <p>
            Only the <c>targetPage</c> is mandatory.
            </p>
            </remarks>
            <example>
            <p>
            Examples of valid <see cref="T:System.String"/> values that can be passed
            to the the parameterized constructor
            (<see cref="M:Spring.Web.Support.Result.#ctor(System.String)"/>) include:
            </p>
            <p>
            <list type="bullet">
            <item><description>Login.aspx</description></item>
            <item><description>~/Login.aspx</description></item>
            <item><description>redirect:~/Login.aspx</description></item>
            <item><description>transfer:~/Login.aspx</description></item>
            <item><description>transfer:Services/Register.aspx</description></item>
            <item><description>Login.aspx?username=springboy,password=7623AAjoe</description></item>
            <item><description>redirect:Login.aspx?username=springboy,password=7623AAjoe</description></item>
            </list>
            </p>
            </example>
            <author>Aleksandar Seovic</author>
            <author>Matan Shapira</author>
        </member>
        <member name="F:Spring.Web.Support.Result.DefaultResultMode">
            <summary>
            The default <see cref="T:Spring.Web.Support.ResultMode"/>.
            </summary>
            <remarks>
            <p>
            Currently defaults to <see cref="F:Spring.Web.Support.ResultMode.Transfer"/>.
            </p>
            </remarks>
            <seealso cref="T:Spring.Web.Support.ResultMode"/>
        </member>
        <member name="M:Spring.Web.Support.Result.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Web.Support.Result"/> class.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.Result.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Web.Support.Result"/> class.
            </summary>
            <remarks>
            <p>
            See both the class documentation (<see cref="T:Spring.Web.Support.Result"/>)
            and the reference documentation for the Spring.Web library for a
            discussion and examples of what values the supplied <paramref name="result"/>
            can have.
            </p>
            </remarks>
            <param name="result">The result descriptor.</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="result"/> is <see langword="null"/> or
            contains only whitespace character(s).
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">if the result mode is unknown.</exception>
        </member>
        <member name="M:Spring.Web.Support.Result.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Web.Support.Result"/> class.
            </summary>
            <remarks>
            <p>
            See both the class documentation (<see cref="T:Spring.Web.Support.Result"/>)
            and the reference documentation for the Spring.Web library for a
            discussion and examples of what values the supplied <paramref name="resultText"/>
            can have.
            </p>
            </remarks>
            <param name="resultMode">The desired result mode. May be null to use default mode.</param>
            <param name="resultText">The result descriptor (without resultMode prefix!).</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="resultText"/> is <see langword="null"/> or
            contains only whitespace character(s).
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">if the result mode is unknown.</exception>
        </member>
        <member name="M:Spring.Web.Support.Result.Navigate(System.Object)">
            <summary>
            Navigates to the <see cref="P:Spring.Web.Support.Result.TargetPage"/>
            defined by this result.
            </summary>
            <param name="context">
            The context object for parameter resolution. This is typically
            a <see cref="T:System.Web.UI.Page"/>.
            </param>
        </member>
        <member name="M:Spring.Web.Support.Result.DoTransfer(System.Object)">
            <summary>
            Performs a server-side transfer to the
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this result.
            </summary>
            <param name="context">
            The context object for parameter resolution. This is typically
            a <see cref="T:System.Web.UI.Page"/>.
            </param>
            <seealso cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)"/>
        </member>
        <member name="M:Spring.Web.Support.Result.SetTransferParameters(System.Collections.IDictionary,System.Object)">
            <summary>
            Resolves transfer parameters and stores them into <see cref="T:System.Collections.IDictionary"/> instance.
            </summary>
            <param name="contextDictionary"></param>
            <param name="context"></param>
        </member>
        <member name="M:Spring.Web.Support.Result.DoRedirect(System.Object)">
            <summary>
            Performs a redirect to the
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result.
            </summary>
            <param name="context">
            The context object for parameter resolution. This is typically
            a <see cref="T:System.Web.UI.Page"/>.
            </param>
            <seealso cref="M:System.Web.HttpResponse.Redirect(System.String)"/>
        </member>
        <member name="M:Spring.Web.Support.Result.GetRedirectUri(System.Object)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result.
            </summary>
            <param name="context">
            A redirect url string.
            </param>
        </member>
        <member name="M:Spring.Web.Support.Result.BuildUrl(System.String,System.Collections.IDictionary)">
            <summary>
            Construct the actual url to be executed or returned.
            </summary>
            <param name="resolvedPath">the already evaluated <see cref="P:Spring.Web.Support.Result.TargetPage"/></param>
            <param name="resolvedParameters">the already evaluated parameters.</param>
            <returns>the url to be returned by <see cref="M:Spring.Web.Support.Result.GetRedirectUri(System.Object)"/></returns>
        </member>
        <member name="M:Spring.Web.Support.Result.BuildUrlParameter(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Append the url parameter to the url being constructed.
            </summary>
            <param name="url">the <see cref="T:System.Text.StringBuilder"/> containing the url constructed so far.</param>
            <param name="key">the parameter key</param>
            <param name="value">the parameter value</param>
            <returns>the <see cref="T:System.Text.StringBuilder"/> to use for further url construction.</returns>
        </member>
        <member name="M:Spring.Web.Support.Result.ResolveValueIfNecessary(System.Object,System.String)">
            <summary>
            Evaluates <paramref name="value"/> within <paramref name="context"/> and returns the evaluation result.
            </summary>
            <param name="context">the context to be used for evaluation.</param>
            <param name="value">the string that might need evaluation</param>
            <returns>the evaluation result. Unodified <paramref name="value"/> if no evalution occured.</returns>
        </member>
        <member name="M:Spring.Web.Support.Result.IsSpELRuntimeExpression(System.String)">
            <summary>
            Checks, if value is a SpEL expression <c>${expression}</c> or <c>%{expression}</c>.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.Result.ResolveSpELRuntimeExpressionIfNecessary(System.Object,System.String)">
            <summary>
            If <paramref name="value"/> is a SpEL expression (<c>${expression}</c> or <c>%{expression}</c>), evaluates
            the value against <paramref name="context"/>.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.Result.ExtractAndSetResultMode(System.String)">
            <summary>
            Extracts and sets this instance's <see cref="P:Spring.Web.Support.Result.Mode"/>
            property from the supplied <paramref name="result"/> descriptor.
            </summary>
            <remarks>
            <p>
            The supplied <paramref name="result"/> descriptor is typically
            something like <c>/Foo.aspx</c> or
            <c>redirect:http://www.springframework.net/</c>.
            </p>
            </remarks>
            <param name="result">
            The result descriptor.
            </param>
            <returns>
            The supplied <paramref name="result"/> without the result mode
            prefix (if any).
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the supplied <paramref name="result"/> starts with an illegal
            result mode (see <see cref="T:Spring.Web.Support.ResultMode"/>).
            </exception>
        </member>
        <member name="M:Spring.Web.Support.Result.SetResultMode(System.String)">
            <summary>
            Set the actual <see cref="P:Spring.Web.Support.Result.Mode"/> from the parsed <paramref name="resultMode"/> string.
            </summary>
            <param name="resultMode">the parsed result mode</param>
        </member>
        <member name="M:Spring.Web.Support.Result.GetResolvedTargetPage(System.Object)">
            <summary>
            Resolves dynamic expression contained in <see cref="P:Spring.Web.Support.Result.TargetPage"/> if any by calling <see cref="M:Spring.Web.Support.Result.ResolveValueIfNecessary(System.Object,System.String)"/>.
            </summary>
            <param name="context">the context to be used for evaluating the expression</param>
            <returns>the evaluated expression</returns>
        </member>
        <member name="M:Spring.Web.Support.Result.ParseParameters(System.String)">
            <summary>
            Parses query parameters from the supplied <paramref name="queryString"/>.
            </summary>
            <param name="queryString">
            The query string (may be <cref lang="null"/>).
            </param>
        </member>
        <member name="P:Spring.Web.Support.Result.Mode">
            <summary>
            The <see cref="T:Spring.Web.Support.ResultMode"/>. Defines which
            method will be used to navigate to the
            <see cref="P:Spring.Web.Support.Result.TargetPage"/>.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.Result.TargetPage">
            <summary>
            The target page.
            </summary>
            <remarks>
            <p>
            This is the (relative) path to the target page. 
            </p>
            </remarks>
            <example>
            <p>
            Examples of valid values would be:
            </p>
            <p>
            <list type="bullet">
            <item><description>Login.aspx</description></item>
            <item><description>~/Login.aspx</description></item>
            <item><description>~/B2B/SignUp.aspx</description></item>
            <item><description>B2B/Foo/FooServices.aspx</description></item>
            </list>
            </p>
            </example>
        </member>
        <member name="P:Spring.Web.Support.Result.Parameters">
            <summary>
            The parameters thar are to be passed to the
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> upon
            navigation.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.Result.PreserveForm">
            <summary>
            Indicates, if <see cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)"/> should be called with preserveForm='true' | 'false'. Only relevant for ResultMode.TransferXXXX modes.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.Result.EndResponse">
            <summary>
            Indicates, if <see cref="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)"/> should be called with endResponse='true' | 'false'. Only relevant for ResultMode.RedirectXXXX modes.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.ResultFactoryRegistry">
            <summary>
            A result factory is responsible for create an <see cref="T:Spring.Web.Support.IResult"/> instance from a given string representation.
            </summary>
            <remarks>
            <para>
            Factories get registered with the <see cref="T:Spring.Web.Support.ResultFactoryRegistry"/> for a certain <i>resultMode</i> string. 
            <see cref="T:Spring.Web.Support.DefaultResultWebNavigator"/> uses <see cref="T:Spring.Web.Support.ResultFactoryRegistry"/> for converting strings into <see cref="T:Spring.Web.Support.IResult"/> instances
            implementing the corresponding navigation logic.
            </para>
            <para>
            Result string representations are always of the form:<br/>
            <c>"&lt;resultmode&gt;:&lt;textual result representation&gt;"</c><br/>
            Calling <see cref="M:Spring.Web.Support.ResultFactoryRegistry.CreateResult(System.String)"/> on the registry will cause the registry to first extract the leading <c>resultmode</c> to obtain 
            the corresponding <see cref="T:Spring.Web.Support.IResultFactory"/> instance and handle the actual <see cref="T:Spring.Web.Support.IResult"/> instantiation by delegating to 
            <see cref="M:Spring.Web.Support.IResultFactory.CreateResult(System.String,System.String)"/>.
            </para>
            <example>
            The following example illustrates the usual flow:
            <code>
            class MySpecialResultLogic : IResult
            {
              ...
            }
            
            class MySpecialResultLogicFactory : IResultFactory
            {
               IResult Create( string mode, string expression ) { /* ... convert 'expression' into 
            MySpecialResultLogic */ }
            }
            
            // register with global factory
            ResultFactoryRegistry.RegisterResultFactory( "mySpecialMode", new MySpecialResultLogicFactory );
            
            // configure your Results
            &lt;object type="mypage.aspx"&gt;
               &lt;property name="Results"&gt;
                  &lt;dictionary&gt;
                     &lt;entry key="continue" value="mySpecialMode:&lt;some MySpecialResultLogic string representation&gt;" /&gt;
                  &lt;/dictionary&gt;
               &lt;/property&gt;
            
            // on your page call
            myPage.SetResult("continue");
            </code>
            </example>
            </remarks>
            <seealso cref="T:Spring.Web.Support.ResultFactoryRegistry"/>
            <seealso cref="T:Spring.Web.Support.IResult"/>
            <seealso cref="T:Spring.Web.Support.Result"/>
            <seealso cref="T:Spring.Web.Support.DefaultResultWebNavigator"/>
            <seealso cref="M:Spring.Web.UI.Page.SetResult(System.String,System.Object)"/>
            <seealso cref="M:Spring.Web.UI.UserControl.SetResult(System.String,System.Object)"/>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.ResultFactoryRegistry.Reset">
            <summary>
            Resets the factory registry to its defaults. Mainly used for unit testing.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.ResultFactoryRegistry.SetDefaultFactory(Spring.Web.Support.IResultFactory)">
            <summary>
            Set a new default factory
            </summary>
            <param name="resultFactory">the new default factory instance. Must not be null.</param>
            <returns>the previous default factory.</returns>
        </member>
        <member name="M:Spring.Web.Support.ResultFactoryRegistry.RegisterResultMode(System.String,Spring.Web.Support.IResultFactory)">
            <summary>
            Registers a <see cref="T:Spring.Web.Support.IResultFactory"/> for the specified <paramref name="resultMode"/>.
            </summary>
            <param name="resultMode">the resultMode. Must not be null.</param>
            <param name="resultFactory">the factory respponsible for handling <paramref name="resultMode"/> results. Must not be null.</param>
            <returns>the factory previously registered for the specified <paramref name="resultMode"/>, if any.</returns>
            <remarks>
            See <see cref="T:Spring.Web.Support.ResultFactoryRegistry"/> overview for more information.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.ResultFactoryRegistry.CreateResult(System.String)">
            <summary>
            Creates a result from the specified <paramref name="resultText"/> by extracting the result mode from 
            the text and delegating to a corresponding <see cref="T:Spring.Web.Support.IResultFactory"/>, if any.
            </summary>
            <param name="resultText">the 'resultmode'-prefixed textual representation of the result instance to create.</param>
            <returns>
            the <see cref="T:Spring.Web.Support.IResult"/> instance corresponding to the textual <paramref name="resultText"/> represenation,
            created by the <see cref="T:Spring.Web.Support.IResultFactory"/>
            </returns>
            <exception cref="T:System.ArgumentNullException">
            if either <paramref name="resultText"/> is null or <see cref="M:Spring.Web.Support.IResultFactory.CreateResult(System.String,System.String)"/> returned null.</exception>
            <remarks>
            This method guarantees that the return value will always be non-null.<br/>
            <paramref name="resultText"/> must always be of the form <c>"&lt;resultmode&gt;:&lt;textual result representation&gt;"</c>. 
            The <c>resultmode</c> will be extracted and the corresponding <see cref="T:Spring.Web.Support.IResultFactory"/> (previously registered 
            using <see cref="M:Spring.Web.Support.ResultFactoryRegistry.RegisterResultMode(System.String,Spring.Web.Support.IResultFactory)"/>) is called to actually create the <see cref="T:Spring.Web.Support.IResult"/> instance. If no factory matches 
            <c>resultmode</c>, the call is handled to the <see cref="P:Spring.Web.Support.ResultFactoryRegistry.DefaultResultFactory"/>.
            </remarks>
        </member>
        <member name="P:Spring.Web.Support.ResultFactoryRegistry.DefaultResultFactory">
            <summary>
            Returns the current <see cref="T:Spring.Web.Support.IResultFactory"/> set by <see cref="M:Spring.Web.Support.ResultFactoryRegistry.SetDefaultFactory(Spring.Web.Support.IResultFactory)"/>. Will never be null.
            </summary>
            <remarks>
            The default factory is responsible for handling any unknown result modes.
            </remarks>
        </member>
        <member name="T:Spring.Web.Support.ResultMode">
            <summary>
            The various result modes.
            </summary>
            <author>Aleksandar Seovic</author>
            <seealso cref="T:Spring.Web.Support.Result"/>
        </member>
        <member name="F:Spring.Web.Support.ResultMode.Transfer">
            <summary>
            A server-side transfer.
            </summary>
            <remarks>
            <p>
            Issues a server-side transfer using the
            <see cref="M:System.Web.HttpServerUtility.Transfer(System.String)"/> method.
            </p>
            </remarks>
            <seealso cref="M:System.Web.HttpServerUtility.Transfer(System.String)"/>
        </member>
        <member name="F:Spring.Web.Support.ResultMode.Redirect">
            <summary>
            A redirect.
            </summary>
            <remarks>
            <p>
            Issues a redirect (to the user-agent - typically a browser) using
            the <see cref="M:System.Web.HttpResponse.Redirect(System.String)"/> method.
            </p>
            </remarks>
            <seealso cref="M:System.Web.HttpResponse.Redirect(System.String)"/>
        </member>
        <member name="F:Spring.Web.Support.ResultMode.TransferNoPreserve">
            <summary>
            A server-side transfer.
            </summary>
            <remarks>
            <p>
            Issues a server-side transfer using the
            <see cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)"/> method with parameter 'preserveForm=false'.
            </p>
            </remarks>
            <seealso cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)"/>
        </member>
        <member name="F:Spring.Web.Support.ResultMode.RedirectNoAbort">
            <summary>
            A redirect.
            </summary>
            <remarks>
            <p>
            Issues a redirect (to the user-agent - typically a browser) using
            the <see cref="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)"/> method.
            </p>
            </remarks>
            <seealso cref="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)"/>
        </member>
        <member name="T:Spring.Web.Support.Script">
            <summary>
            Base class that describes client side script block or file.
            </summary>
            <remarks>
            <p>
            Classes that extend this class are used by Spring.Web client-side
            scripting support.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.Support.Script.#ctor(System.String)">
            <summary>
            Initialize a new Script object of the specified language
            </summary>
            <param name="language">Script language.</param>
        </member>
        <member name="M:Spring.Web.Support.Script.#ctor(Spring.Web.Support.MimeMediaType)">
            <summary>
            Initialize a new script object of the specified type
            </summary>
            <param name="type">a <see cref="T:Spring.Web.Support.MimeMediaType"/></param>
        </member>
        <member name="P:Spring.Web.Support.Script.Language">
            <summary>
            Gets or sets script language.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.Script.Type">
            <summary>
            Gets or sets script mime type
            </summary>
        </member>
        <member name="T:Spring.Web.Support.ScriptBlock">
            <summary>
            Class that describes client side script block.
            </summary>
            <remarks>
            <p>
            Script blocks are used to insert script code directly into the page,
            without references to an external file.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.Support.ScriptBlock.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="language">Script language.</param>
            <param name="script">The script text.</param>
        </member>
        <member name="M:Spring.Web.Support.ScriptBlock.#ctor(Spring.Web.Support.MimeMediaType,System.String)">
            <summary>
            Initialize a new script block instance.
            </summary>
            <param name="type">the script language's <see cref="T:Spring.Web.Support.MimeMediaType"/></param>
            <param name="script">the script body</param>
        </member>
        <member name="P:Spring.Web.Support.ScriptBlock.Script">
            <summary>
            Gets or sets the script text.
            </summary>
            <value>The script text.</value>
        </member>
        <member name="T:Spring.Web.Support.ScriptFile">
            <summary>
            Class that describes client side script file.
            </summary>
            <remarks>
            <p>
            Script file references script code in the external file.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.Support.ScriptFile.#ctor(System.String,System.String)">
            <summary>
            Initialize a new <see cref="T:Spring.Web.Support.ScriptFile"/> instance.
            </summary>
            <param name="language">Script language.</param>
            <param name="fileName">The name of the script file.</param>
        </member>
        <member name="M:Spring.Web.Support.ScriptFile.#ctor(Spring.Web.Support.MimeMediaType,System.String)">
            <summary>
            Initialize a new <see cref="T:Spring.Web.Support.ScriptFile"/> instance.
            </summary>
            <param name="type">the script language's <see cref="T:Spring.Web.Support.MimeMediaType"/></param>
            <param name="fileName">the (virtual) path to the script</param>
        </member>
        <member name="P:Spring.Web.Support.ScriptFile.FileName">
            <summary>
            Gets or sets the name of the script file.
            </summary>
            <value>The name of the script file.</value>
        </member>
        <member name="T:Spring.Web.Support.ScriptEvent">
            <summary>
            Class that describes client side script file.
            </summary>
            <remarks>
            <p>
            Script file references script code in the external file.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.Support.ScriptEvent.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialize a new <see cref="T:Spring.Web.Support.ScriptEvent"/> instance.
            </summary>
            <param name="language">Script language.</param>
            <param name="element">Element ID of the event source.</param>
            <param name="eventName">Name of the event to handle.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.Support.ScriptEvent.#ctor(Spring.Web.Support.MimeMediaType,System.String,System.String,System.String)">
            <summary>
            Initialize a new <see cref="T:Spring.Web.Support.ScriptEvent"/> instance.
            </summary>
            <param name="type">the script language's <see cref="T:Spring.Web.Support.MimeMediaType"/></param>
            <param name="element">Element ID of the event source.</param>
            <param name="eventName">Name of the event to handle.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="P:Spring.Web.Support.ScriptEvent.Element">
            <summary>
            Gets or sets the element ID.
            </summary>
            <value>The element ID.</value>
        </member>
        <member name="P:Spring.Web.Support.ScriptEvent.EventName">
            <summary>
            Gets or sets the name of the event.
            </summary>
            <value>The name of the event.</value>
        </member>
        <member name="T:Spring.Web.Support.SharedStateResourceCache">
            <summary>
            Resource cache implementation that uses Spring.NET page/handler state to cache resources.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.Support.SharedStateResourceCache.#ctor(Spring.Objects.ISharedStateAware)">
            <summary>
            Creates a new cache instance and attaches it to the given <see cref="F:Spring.Web.Support.SharedStateResourceCache.sharedStateHolder"/>
            </summary>
            <param name="sharedStateHolder">the holder of the shared state dictionary to be used for caching.</param>
        </member>
        <member name="M:Spring.Web.Support.SharedStateResourceCache.GetResources(System.String)">
            <summary>
            Gets the list of resources from cache.
            </summary>
            <param name="cacheKey">Cache key to use for lookup.</param>
            <returns>A list of cached resources for the specified target object and culture.</returns>
        </member>
        <member name="M:Spring.Web.Support.SharedStateResourceCache.PutResources(System.String,System.Collections.Generic.IList{Spring.Globalization.Resource})">
            <summary>
            Puts the list of resources in the cache.
            </summary>
            <param name="cacheKey">Cache key to use for the specified resources.</param>
            <param name="resources">A list of resources to cache.</param>
        </member>
        <member name="T:Spring.Web.Support.SupportsWebDependencyInjectionMethodBuilder">
            <summary>
            This MethodBuilder emits a Callback-call before calling the base method
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionMethodBuilder.#ctor(System.Reflection.Emit.TypeBuilder,Spring.Proxy.IProxyTypeGenerator,System.Reflection.FieldInfo,System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of a SupportsWebDependencyInjectionMethodBuilder
            </summary>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionMethodBuilder.GenerateMethod(System.Reflection.Emit.ILGenerator,System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
            <summary>
            Inserts a call to a callback-method before actually calling the base-method.
            </summary>
            <param name="il">The IL generator to use</param>
            <param name="method">The method to proxy</param>
            <param name="interfaceMethod">The interface definition of this method, if applicable</param>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionMethodBuilder.GenerateCallbackMethodCall(System.Reflection.Emit.ILGenerator,System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
            <summary>
            Emits the callback invocation.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.SupportsWebDependencyInjectionOwnerProxy">
            <summary>
            Wraps a ControlCollection.Owner control to make it DI aware
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionOwnerProxy.#ctor(Spring.Context.IApplicationContext,System.Web.UI.Control)">
            <summary>
            Wraps a control to make it DI aware
            </summary>
            <param name="defaultApplicationContext"></param>
            <param name="targetControl"></param>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionOwnerProxy.AddedControl(System.Web.UI.Control,System.Int32)">
            <summary>
            Performs DI before adding the control to it's parent
            </summary>
            <param name="control"></param>
            <param name="index"></param>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionOwnerProxy.RemovedControl(System.Web.UI.Control)">
            <summary>
            Delegates call to decorated control
            </summary>
            <param name="control"></param>
        </member>
        <member name="T:Spring.Web.Support.NamingContainerSupportsWebDependencyInjectionOwnerProxy">
            <summary>
            Wraps a ControlCollection.Owner control implementing INamingContainer to make it DI aware
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.Support.SupportsWebDependencyInjectionTypeBuilder">
            <summary>
            This TypeBuilder dynamically implements the <see cref="T:Spring.Web.Support.ISupportsWebDependencyInjection"/> contract on a given type.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionTypeBuilder.#ctor(System.Type,System.Reflection.MethodInfo[],System.Reflection.MethodInfo)">
            <summary>
            Creates a new TypeBuilder instance.
            </summary>
            <param name="targetType">The base type the proxy shall be derived from</param>
            <param name="methodsToIntercept">The methods to be injected with a call to <c>staticCallbackMethod</c></param>
            <param name="staticCallbackMethod">The <b>static</b> callback method to be injected into <c>methodsToIntercept</c></param>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionTypeBuilder.BuildProxyType">
            <summary>
            Creates a proxy that inherits the proxied object's class.
            </summary>
            <remarks/>
            <returns>The generated proxy type.</returns>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionTypeBuilder.ImplementIDependencyInjectionAware(System.Reflection.Emit.TypeBuilder,System.Type,System.Reflection.FieldInfo)">
            <summary>
            Actually implements the <see cref="T:Spring.Web.Support.ISupportsWebDependencyInjection"/> interface.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionTypeBuilder.DeclareApplicationContextInstanceField(System.Reflection.Emit.TypeBuilder)">
            <summary>
            Declares field that holds the <see cref="P:Spring.Web.Support.ISupportsWebDependencyInjection.DefaultApplicationContext"/>.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.SupportsWebDependencyInjectionTypeBuilder.IsSpringAwareControlProxy(System.Type)">
            <summary>
            Determines if the specified <paramref name="type"/> 
            is one of those generated by this builder.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <see langword="true"/> if the type is a SpringAwareControl-based proxy;
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="T:Spring.Web.Support.WebDependencyInjectionUtils">
            <summary>
            Utilities for dependency injection in the web tier.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.WebDependencyInjectionUtils.InjectDependenciesRecursive(Spring.Context.IApplicationContext,System.Web.UI.Control)">
            <summary>
            Injects dependencies into all controls in the hierarchy 
            based on template definitions in the Spring config file.
            </summary>
            <param name="applicationContext">ApplicationContext to be used</param>
            <param name="control">Control to inject dependencies into.</param>
        </member>
        <member name="M:Spring.Web.Support.WebDependencyInjectionUtils.GetControlApplicationContext(Spring.Context.IApplicationContext,System.Web.UI.Control)">
            <summary>
            Aquires an ApplicationContext according to a Control's TemplateSourceDirectory
            </summary>
            <returns>if availabe, the control's IApplicationContext instance - defaultContext otherwise</returns>
        </member>
        <member name="T:Spring.Web.Support.WebFormsResultWebNavigator">
            <summary>
            An implementation of <see cref="T:Spring.Web.Support.IHierarchicalWebNavigator"/> specific for <see cref="T:System.Web.UI.Control"/>s. 
            The navigator hierarchy equals the control hierarchy when using a <see cref="T:Spring.Web.Support.WebFormsResultWebNavigator"/>.
            </summary>
            <remarks>
            <para>
            This implementation supports 2 different navigator hierarchies:
            <ul>
            <li>The default hierarchy defined by <see cref="P:Spring.Web.Support.IHierarchicalWebNavigator.ParentNavigator"/></li>
            <li>The hierarchy defined by a web form's <see cref="P:System.Web.UI.Control.Parent"/> hierarchy.</li>
            </ul>
            </para>
            <para>
            This implementation always checks the standard hierarchy first and - if a destination cannot be resolved, falls back 
            to the control hierarchy for resolving a specified navigation destination.
            </para>
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.WebFormsResultWebNavigator.FindNavigableParent(System.Web.UI.Control,System.Boolean,System.Boolean)">
            <summary>
            Finds the next <see cref="T:Spring.Web.Support.IWebNavigator"/> up  the control hierarchy, 
            starting at the specified <paramref name="control"/>.
            </summary>
            <remarks>
            This method checks both, for controls implementing <see cref="T:Spring.Web.Support.IWebNavigator"/> or <see cref="T:Spring.Web.Support.IWebNavigable"/>. In addition 
            when MasterPages are used, it interprets the control hierarchy as control-&gt;page-&gt;masterpage. (<see cref="M:Spring.Util.WebUtils.GetLogicalParent(System.Web.UI.Control)"/>).
            </remarks>
            <param name="control">the control to start the search with.</param>
            <param name="includeSelf">include checking the control itself or start search with its parent.</param>
            <param name="restrictToValidNavigatorsOnly">requires <see cref="T:Spring.Web.Support.IWebNavigable"/>s to hold a valid <see cref="P:Spring.Web.Support.IWebNavigable.WebNavigator"/> instance.</param>
            <returns>If found, the next <see cref="T:Spring.Web.Support.IWebNavigator"/> or <see cref="T:Spring.Web.Support.IWebNavigable"/>.
            <c>null</c> otherwise</returns>
        </member>
        <member name="M:Spring.Web.Support.WebFormsResultWebNavigator.#ctor(System.Web.UI.Control,Spring.Web.Support.IWebNavigator,System.Collections.IDictionary,System.Boolean)">
            <summary>
            Creates a new instance of a <see cref="T:Spring.Web.Support.IHierarchicalWebNavigator"/> for the specified control.
            </summary>
            <param name="owner">the control to be associated with this navigator.</param>
            <param name="parent">the direct parent of this navigator</param>
            <param name="initialResults">a dictionary containing results</param>
            <param name="ignoreCase">specifies how to handle case for destination names.</param>
        </member>
        <member name="M:Spring.Web.Support.WebFormsResultWebNavigator.CanNavigateTo(System.String)">
            <summary>
            Determines, whether this navigator or one of its parents can 
            navigate to the destination specified in <paramref name="destination"/>.
            </summary>
            <param name="destination">the name of the navigation destination</param>
            <returns>true, if this navigator can navigate to the destination.</returns>
        </member>
        <member name="M:Spring.Web.Support.WebFormsResultWebNavigator.CheckCanNavigate(System.String,System.Boolean)">
            <summary>
            Check, whether this navigator can navigate to the specified <paramref name="destination"/>.
            </summary>
            <param name="destination">the destination name to check.</param>
            <param name="includeControlHierarchy">
            whether the check shall include the <see cref="P:Spring.Web.Support.WebFormsResultWebNavigator.Owner"/> control hierarchy or
            the standard <see cref="P:Spring.Web.Support.IHierarchicalWebNavigator.ParentNavigator"/> hierarchy only.
            </param>
        </member>
        <member name="M:Spring.Web.Support.WebFormsResultWebNavigator.GetResultUri(System.String,System.Object,System.Object)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result evaluated using this Page for expression 
            </summary>
            <param name="destination">Name of the result.</param>
            <param name="sender">the instance that issued this request</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result</param>
            <returns>A redirect url string.</returns>
        </member>
        <member name="M:Spring.Web.Support.WebFormsResultWebNavigator.NavigateTo(System.String,System.Object,System.Object)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="destination">Name of the result.</param>
            <param name="sender">the instance that issued this request</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result.</param>
        </member>
        <member name="P:Spring.Web.Support.WebFormsResultWebNavigator.Owner">
            <summary>
            The <see cref="T:System.Web.UI.Control"/> that this <see cref="T:Spring.Web.Support.WebFormsResultWebNavigator"/> is associated with.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.WebFormsResultWebNavigator.ParentControlNavigator">
            <summary>
            Return the next available <see cref="T:Spring.Web.Support.IWebNavigator"/> within 
            this <see cref="P:Spring.Web.Support.WebFormsResultWebNavigator.Owner"/> control's parent hierarchy.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.WebFormsResultWebNavigator.NavigableControlInfo">
            <summary>
            Holds the result match from <see cref="M:Spring.Web.Support.WebFormsResultWebNavigator.FindNavigableParent(System.Web.UI.Control,System.Boolean,System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Spring.Web.Support.WebFormsResultWebNavigator.NavigableControlInfo.Control">
            <summary>
            The matching control 
            </summary>
        </member>
        <member name="F:Spring.Web.Support.WebFormsResultWebNavigator.NavigableControlInfo.WebNavigator">
            <summary>
            The <see cref="T:Spring.Web.Support.IWebNavigator"/> instance associated with the control. May be null.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.WebFormsResultWebNavigator.NavigableControlInfo.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes the new match instance.
            </summary>
            <param name="control">the matching control. Must not be null!</param>
        </member>
        <member name="T:Spring.Web.Support.WebNavigableWebNavigatorAdapter">
            <summary>
            Adapts a concrete <see cref="T:Spring.Web.Support.IWebNavigator"/> instance as a <see cref="T:Spring.Web.Support.IWebNavigable"/>.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.Support.WebNavigableWebNavigatorAdapter.#ctor(Spring.Web.Support.IWebNavigator)">
            <summary>
            Create a new adapter instance, wrapping the specified <paramref name="resultNavigator"/> 
            into a <see cref="T:Spring.Web.Support.IWebNavigable"/> interface.
            </summary>
            <param name="resultNavigator">the <see cref="T:Spring.Web.Support.IWebNavigator"/> instance to be adapted. May be null.</param>
        </member>
        <member name="P:Spring.Web.Support.WebNavigableWebNavigatorAdapter.WebNavigator">
            <summary>
            Returns the wrapped <see cref="T:Spring.Web.Support.IWebNavigator"/> that was passed into <see cref="M:Spring.Web.Support.WebNavigableWebNavigatorAdapter.#ctor(Spring.Web.Support.IWebNavigator)"/>.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.AbstractBaseValidator">
            <summary>
            Provides functions required for implementing validators 
            but are unfortunately not accessible from <see cref="T:System.Web.UI.WebControls.BaseValidator"/>
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractBaseValidator.RegisterClientScriptBlock(System.Type,System.String,System.String)">
            <summary>
            Registers a javascript-block to be rendered.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractBaseValidator.IsClientScriptBlockRegistered(System.Type,System.String)">
            <summary>
            Checks, if a certain javascript-block is already registered.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractBaseValidator.AddExpandoAttribute(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds an attribute to be rendered for clientside validation.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.AbstractBaseValidator.EnableLegacyRendering">
            <summary>
            Is "XHTML 1.0 Transitional" rendering allowed?
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.AbstractValidationControl">
            <summary>
            Provides common functionality to all validation renderer controls.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractValidationControl.CreateValidationErrorsRenderer">
            <summary>
            Create the default <see cref="T:Spring.Web.UI.Validation.IValidationErrorsRenderer"/> 
            for this ValidationControl if none is configured.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractValidationControl.ResolveMessageSource">
            <summary>
            Gets the MessageSource to be used for resolve error messages
            </summary>
            <remarks>
            By default, returns <see cref="M:Spring.Web.UI.Controls.AbstractValidationControl.FindValidationContainer"/>'s MessageSource.
            </remarks>
            <returns>the <see cref="T:Spring.Context.IMessageSource"/> to resolve message texts. May be <c>null</c></returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractValidationControl.ResolveValidationErrors">
            <summary>
            Gets the list of validation errors to render
            </summary>
            <returns>the <see cref="T:Spring.Validation.IValidationErrors"/> to render. May be <c>null</c></returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractValidationControl.FindValidationContainer">
            <summary>
            Gets the <see cref="T:Spring.Web.UI.IValidationContainer"/>, who's <see cref="P:Spring.Web.UI.IValidationContainer.ValidationErrors"/> 
            shall be rendered by this control.
            </summary>
            <remarks>
            First, it tries to resolve the specified <see cref="P:Spring.Web.UI.Controls.AbstractValidationControl.ValidationContainerName"/>, if any. If no explicit name
            is set, will probe the control hierarchy for controls implementing <see cref="T:Spring.Web.UI.IValidationContainer"/>.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractValidationControl.ResolveErrorMessages">
            <summary>
            Resolves the list of validation errors either explicitely specified using
            <see cref="P:Spring.Web.UI.Controls.AbstractValidationControl.ValidationErrors"/> or obtained from the containing <see cref="T:Spring.Web.UI.IValidationContainer"/> 
            resolved by <see cref="M:Spring.Web.UI.Controls.AbstractValidationControl.FindValidationContainer"/> to a list
            of <see cref="T:System.String"/> elements containing the error messages to be rendered.
            </summary>
            <remarks>
            <para>
            The list of validation errors may either be explicitely specified using <see cref="P:Spring.Web.UI.Controls.AbstractValidationControl.ValidationErrors"/>
            or will automatically be obtained from the containing <see cref="T:Spring.Web.UI.IValidationContainer"/> resolved by
            <see cref="M:Spring.Web.UI.Controls.AbstractValidationControl.FindValidationContainer"/>.
            </para>
            <para>
            Error Messages are resolved using either an explicitely specified <see cref="P:Spring.Web.UI.Controls.AbstractValidationControl.MessageSource"/> or the 
            <see cref="T:Spring.Context.IMessageSource"/> obtained from the validation container.
            </para>
            </remarks>
            <returns>a list containing <see cref="T:System.String"/> elements. May return <c>null</c></returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.AbstractValidationControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders error messages using the specified <see cref="P:Spring.Web.UI.Controls.AbstractValidationControl.Renderer"/>.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Spring.Web.UI.Controls.AbstractValidationControl.MessageSource">
            <summary>
            Set a particular message source to be used for
            resolving error messages to display texts.
            </summary>
            <remarks>
            If not set, the control will probe the control hierarchy
            for containing controls implementing <see cref="T:Spring.Web.UI.IValidationContainer"/>
            and use the container's <see cref="P:Spring.Web.UI.IValidationContainer.MessageSource"/>.
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Controls.AbstractValidationControl.ValidationErrors">
            <summary>
            Allows to set a particular instance of the validation errors
            collection to render.
            </summary>
            <remarks>
            If not set, the control will probe the control hierarchy for 
            containing controls implementing <see cref="T:Spring.Web.UI.IValidationContainer"/>
            and use the container's <see cref="P:Spring.Web.UI.IValidationContainer.ValidationErrors"/>
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Controls.AbstractValidationControl.ValidationContainerName">
            <summary>
            If set, <see cref="M:Spring.Web.UI.Controls.AbstractValidationControl.FindValidationContainer"/> will resolve to the named control specified
            by this property. The behavior of name resolution is identical to 
            <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate"/>, except that if the name
            starts with "::", the resolution will start at the page level instead of relative to this
            control
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.AbstractValidationControl.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.AbstractValidationControl.Renderer">
            <summary>
            Gets or sets the validation errors renderer to use. 
            </summary>
            <remarks>
            If not explicitly specified, defaults to <see cref="T:Spring.Web.UI.Validation.SpanValidationErrorsRenderer"/>.
            </remarks>
            <value>The validation errors renderer to use.</value>
        </member>
        <member name="T:Spring.Web.UI.Controls.Calendar">
            <summary>
            Displays a pop-up DHTML calendar.
            </summary>
            <remarks>
            <p>
            Credit: this control uses a slightly modified version of the 
            <a href="http://www.dynarch.com/projects/calendar/">Dynarch.com DHTML Calendar</a>,
            written by Mihai Bazon.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.OnPreRender(System.EventArgs)">
            <summary>
            Registers necessary scripts and stylesheet.
            </summary>
            <param name="e">
            An <see cref="T:System.EventArgs"/> object that contains the event data.
            </param>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a hidden input field that stores the value for the radio button group.
            </summary>
            <param name="writer">
            <see cref="T:System.Web.UI.HtmlTextWriter"/> to use for rendering.
            </param>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.RaisePostDataChangedEvent">
            <summary>
            Raises the <c>SelectionChanged</c> event.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Loads postback data into the control.
            </summary>
            <param name="postDataKey">
            The key that should be used to retrieve data.
            </param>
            <param name="postCollection">The postback data collection.</param>
            <returns><see lang="true"/> if data has changed.</returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.OnDateChanged(System.EventArgs)">
            <summary>
            The method that is called on postback if the date has changed.
            </summary>
            <param name="e">
            The event argument (empty and unused).
            </param>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.Page">
            <summary>
            Gets a reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </summary>
            <value>
            A reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </value>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.SelectedDate">
            <summary>
            The selected date.
            </summary>
            <value>The selected date.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.Format">
            <summary>
            The date format that is to be used.
            </summary>
            <value>A valid date format string.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.AllowEditing">
            <summary>
            Is direct editing of the date allowed?
            </summary>
            <value>
            <see lang="true"/> if direct editing of the date is allowed?</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.Skin">
            <summary>
            The (CSS) style.
            </summary>
            <value>The style for the calendar.</value>
        </member>
        <member name="E:Spring.Web.UI.Controls.Calendar.DateChanged">
            <summary>
            Occurs when the value of the radio button group changes between postbacks to the server.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.CheckBoxList">
            <summary>
            Adds the <see cref="P:Spring.Web.UI.Controls.CheckBoxList.SelectedValues"/> property to the framework's <see cref="T:System.Web.UI.WebControls.CheckBoxList"/> control.
            </summary>
            <remarks>
            When using Spring.Web's DataBinding, you should use this control for easier binding declaration.
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="P:Spring.Web.UI.Controls.CheckBoxList.SelectedValues">
            <summary>
            Gets or Sets the list of selected values and checks the <see cref="T:System.Web.UI.WebControls.CheckBox"/>es accordingly
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.RequiredCheckBoxValidator">
            <summary>
            This validator allows for validating a CheckBox's "Checked" state.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.RequiredCheckBoxValidator.ControlPropertiesValid">
            <summary>
            Validates this validator's properties are set correctly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.RequiredCheckBoxValidator.EvaluateIsValid">
            <summary>
            Returns the state of the checkbox's Checked property
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.RequiredCheckBoxValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds attributes required for clientside validation
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Spring.Web.UI.Controls.RequiredCheckBoxValidator.OnPreRender(System.EventArgs)">
            <summary>
            Ensures the evaluation javascript functionblock is registered
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Spring.Web.UI.Controls.Content">
            <summary>
            Represents Content control that can be used to populate or override placeholders
            within the master page.
            </summary>
            <remarks>
            Any content defined within this control will override default content
            in the matching <see cref="T:Spring.Web.UI.Controls.ContentPlaceHolder"/> control
            within the master page
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="T:Spring.Web.UI.Controls.ContentPlaceHolder">
            <summary>
            Represents ContentPlaceHolder control that can be used to define placeholders
            within the master page.
            </summary>
            <remarks>
            Any content defined within this control will be treated as a default content 
            for the placeholder and will be rendered unless the child page overrides it
            by defining matching <see cref="T:Spring.Web.UI.Controls.Content"/> control.
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="T:Spring.Web.UI.Controls.ContentReplacer">
            <summary>
            Represents Content control that can be used to populate or override placeholders
            anywhere within the page.
            </summary>
            <remarks>
            <para>
            Any content defined within this control will override default content
            in the matching control specified by <see cref="P:Spring.Web.UI.Controls.ContentReplacer.ContentPlaceHolderID"/> anywhere
            within the page.
            </para>
            <para>
            In contrast to <see cref="T:Spring.Web.UI.Controls.Content"/> control, ContentReplacer can replace the content of 
            any control within the current page - it is not limited to replacing ContentPlaceholders on master pages.
            </para>
            <para>
            This technique is useful if you want to group e.g. rendering navigation elements on 1 ascx control, but your 
            design requires navigation elements to be distributed across different places within the HTML code.
            </para>
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.ContentReplacer.OnPreRender(System.EventArgs)">
            <summary>
            Overriden to correctly redirect rendermethod calls.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.ContentReplacer.RenderChildControls(System.Web.UI.HtmlTextWriter,System.Web.UI.Control)">
            <summary>
            Renders child controls
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.ContentReplacer.RenderNothing(System.Web.UI.HtmlTextWriter,System.Web.UI.Control)">
            <summary>
            Render nothing.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.ContentReplacer.ContentPlaceHolderID">
            <summary>
            Specifies the unique id of the control, who's content is to be replaced.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.DataBindingAdapter">
            <summary>
            May be used to wrap controls for databinding that don't accept unknown attributes.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingAdapter.AddParsedSubObject(System.Object)">
            <summary>
            Overridden to ensure only 1 control is wrapped by this adapter
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingAdapter.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden to render wrapped control only.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.DataBindingAdapter.WrappedControl">
            <summary>
            Returns the control wrapped by this adapter or null.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.DataBindingPanel">
            <summary>
            Any WebControl placed on a DataBindingPanel may be bound 
            to a model by adding an attribute "BindingTarget"
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.UI.Controls.Panel">
            <summary>
            This panel provides the same features as <see cref="T:System.Web.UI.WebControls.Panel"/>, but provides additional means with regards to Spring.
            </summary>
            <remarks>
            In some cases, automatic dependency injection can cause performance problems. In this case,you can use a Panel for finer-grained control
            over which controls are to be injected or not.
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.Panel.OnPreRender(System.EventArgs)">
            <summary>
            Overridden to set <see cref="P:System.Web.UI.Control.Visible"/> according to <see cref="P:Spring.Web.UI.Controls.Panel.VisibleIf"/> if necessary.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.Panel.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the <see cref="T:Spring.Web.UI.Controls.Panel"></see> control to the specified writer.
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"></see> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Spring.Web.UI.Controls.Panel.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML closing tag of the <see cref="T:Spring.Web.UI.Controls.Panel"></see> control to the specified writer.
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"></see> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Spring.Web.UI.Controls.Panel.OnPreInitRecursive(System.EventArgs)">
            <summary>
            This method is invoked right before InitRecursive() is called for this Panel and
            ensures, that dependencies get injected on child controls before their Init event is raised.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.Panel.AddedControl(System.Web.UI.Control,System.Int32)">
            <summary>
            Injects dependencies into control before adding it.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.Panel.CreateControlCollection">
            <summary>
            Overridden to automatically aquire a reference to 
            root application context to use for DI.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.Panel.VisibleIf">
            <summary>
            An optional SpEL expression to control this Panel's <see cref="P:System.Web.UI.Control.Visible"/> state.
            </summary>
            <remarks>
            This panel instance is the context for evaluating the given expression. If no expression is specified, visibility behavior
            reverts to standard behavior.
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Controls.Panel.SuppressDependencyInjection">
            <summary>
            This flag controls, whether DI on child controls will be done or not
            </summary>
            <remarks>By default, DI will be done</remarks>
        </member>
        <member name="P:Spring.Web.UI.Controls.Panel.RenderContainerTag">
            <summary>
            This flag controls, whether this Panel's tag will be rendered.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.Panel.Context">
            <summary>
            Expose the context of this panel for medium trust safe access in e.g. <see cref="P:Spring.Web.UI.Controls.Panel.VisibleIf"/>.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.Panel.Spring#Web#Support#ISupportsWebDependencyInjection#DefaultApplicationContext">
            <summary>
            Sets / Gets the ApplicationContext instance used to configure this control
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.OnInit(System.EventArgs)">
            <summary>
            Registers this control for the <see cref="E:Spring.Web.UI.UserControl.DataBindingsInitialized"/> event of it's container.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.OnPreRender(System.EventArgs)">
            <summary>
            Overridden to remove custom binding attributes before rendering.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overriden to suppress rendering this control's tag
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.BindingOwner_DataBindingsInitialized(System.Object,System.EventArgs)">
            <summary>
            Called by the containing <see cref="T:Spring.Web.UI.UserControl"/> if bindings must be initialized.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.TraverseControls(Spring.DataBinding.IWebDataBound,System.Web.UI.ControlCollection,Spring.Web.UI.Controls.DataBindingPanel.TraversalAction)">
            <summary>
            Adds all controls on this panel to the containing <see cref="P:Spring.Web.UI.UserControl.BindingManager"/>'s binding collection.
            </summary>
            <param name="bindingContainer">the usercontrol containing this panel</param>
            <param name="controls">the <see cref="T:System.Web.UI.ControlCollection"/> of controls to be bound</param>
            <param name="action">action to be performed on matching controls</param>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.BindControl(Spring.DataBinding.IWebDataBound,System.Web.UI.WebControls.WebControl)">
            <summary>
            Retrieves custom binding attributes from a webcontrol and adds a new binding
            instance to the container's <see cref="P:Spring.Web.UI.UserControl.BindingManager"/> if necessary.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.RemoveBindingAttributes(Spring.DataBinding.IWebDataBound,System.Web.UI.WebControls.WebControl)">
            <summary>
            Removes custom binding attributes from a webcontrol to avoid them being rendered.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.AutoProbeBindingType(System.Web.UI.Control)">
            <summary>
            Probe for bindingType of know controls
            </summary>
            <param name="wc">the control, who's bindingType is to be determined</param>
            <returns>null, if standard binding is to be used or the fully qualified typename of the binding implementation</returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.DataBindingPanel.AutoProbeSourceProperty(System.Web.UI.Control)">
            <summary>
            Probes for a few know controls and their properties.
            </summary>
            <returns>
            The 'BindingSource' expression to be used for binding this control.
            </returns>
        </member>
        <member name="T:Spring.Web.UI.Controls.Form">
            <summary>
            This control allows for suppressing output of the 'action' attribute.
            </summary>
            <remarks>
            the 'action' attribute rendered by the default <see cref="T:System.Web.UI.HtmlControls.HtmlForm"/> control causes troubles 
            in case of URL-rewriting. See e.g. <a href="http://www.thescripts.com/forum/thread408777.html">'thescripts.com' forum</a>
            and also <a href="http://opensource.atlassian.com/projects/spring/browse/SPRNET-560">JIRA SPRNET-560</a> for more info.
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.Form.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders attributes but performs 'action' suppressing logic.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Spring.Web.UI.Controls.Form.SuppressAction">
            <summary>
            Sets or Gets a value indicating if the 'action' attribute shall be rendered. Defaults to 'false'
            </summary>
            <remarks>
            The following possibilites are available:
            <list>
            <item>If <see cref="P:Spring.Web.UI.Controls.Form.SuppressAction"/> is 'true', rendering of the 'action' attribute is suppressed.</item>
            <item>If <see cref="P:Spring.Web.UI.Controls.Form.SuppressAction"/> is 'false' and <see cref="P:Spring.Web.UI.Controls.Form.Action"/> is not set,
                  'action' attribute will.be rendered to <see cref="P:System.Web.HttpRequest.RawUrl"/>
            </item>
            <item>If <see cref="P:Spring.Web.UI.Controls.Form.SuppressAction"/> is 'false' and <see cref="P:Spring.Web.UI.Controls.Form.Action"/> is set,
                  'action' attribute will.be rendered to <see cref="P:Spring.Web.UI.Controls.Form.Action"/>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Controls.Form.Action">
            <summary>
            Sets or Gets an explicit url to be rendered
            </summary>
            <remarks>
            The url specified here is only rendered, if <see cref="P:Spring.Web.UI.Controls.Form.SuppressAction"/> is true.
            </remarks>
        </member>
        <member name="T:Spring.Web.UI.Controls.Form.ActionSupressingHtmlTextWriter">
            <summary>
            This wrapper suppresses output of 'action' attributes.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.Head">
            <summary>
            This control should be used instead of standard HTML <c>head</c> tag
            in order to render dynamicaly registered head scripts and stylesheets.
            </summary>
            <remarks>
            If you need to use ASP.NETs built-in &lt;head&gt; tag, you should nest Spring's <see cref="T:Spring.Web.UI.Controls.Head"/> within ASP.NET's:
            <example>
            &lt;html&gt;
              &lt;head&gt;
                &lt;title&gt;Some Title&lt;/title&gt;
                &lt;spring:head&gt;
                    &lt;-- will render styleblocks etc. here --&gt;
                &lt;/spring:head&gt;
              &lt;/head&gt;
            &lt;/html&gt;
            </example>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.Head.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to
            be rendered on
            the client.
            </summary>
            <param name="writer">The <see langword="HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:Spring.Web.UI.Controls.Head.DefaultStyleType">
            <summary>
            Gets or sets the default mimetype for the &lt;style&gt; element's 'type' attribute
            </summary>
            <remarks>
            Defaults to "text/css"
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Controls.Head.Page">
            <summary>
            Gets a reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </summary>
            <value></value>
        </member>
        <member name="T:Spring.Web.UI.Controls.LocalizedImage">
            <summary>
            This control should be used instead of standard HTML <c>head</c> tag
            in order to render dynamicaly registered head scripts and stylesheets.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.LocalizedImage.OnPreRender(System.EventArgs)">
            <summary>
            Tries to determine full URL for the localized image before it's rendered.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Spring.Web.UI.Controls.LocalizedImage.ImageName">
            <summary>
            Name of the image file.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.LocalizedImage.Page">
            <summary>
            Gets a reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </summary>
            <value></value>
        </member>
        <member name="T:Spring.Web.UI.Controls.RadioButtonGroup">
            <summary>
            Groups radio button controls and returns the value of the selected control
            </summary>
            <remarks>
            This control alows radio buttons to be data-bound to a data model of the page.
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.AddedControl(System.Web.UI.Control,System.Int32)">
            <summary>
            Overloaded to track addition of contained <see cref="T:System.Web.UI.WebControls.RadioButton"/> controls.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.RemovedControl(System.Web.UI.Control)">
            <summary>
            Overloaded to track removal of a RadioButton
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.OnPreRender(System.EventArgs)">
            <summary>
            Registers the RadioButtonGroup for PostBack.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders only children of this control.
            </summary>
            <param name="writer">HtmlTextWriter to use for rendering.</param>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Loads postback data into the control.
            </summary>
            <param name="postDataKey">Key that should be used to retrieve data.</param>
            <param name="postCollection">Postback data collection.</param>
            <returns>True if data has changed, false otherwise.</returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.RaisePostDataChangedEvent">
            <summary>
            Raises SelectionChanged event.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.OnSelectionChanged(System.EventArgs)">
            <summary>
            Method that is called on postback if selected radio button has changed.
            </summary>
            <param name="e">Empty event argument.</param>
        </member>
        <member name="P:Spring.Web.UI.Controls.RadioButtonGroup.Value">
            <summary>
            Gets or sets the ID of the selected radio button.
            </summary>
            <value>ID of the selected radio button.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.RadioButtonGroup.AutoPostBack">
            <summary>
            Gets or sets whether form should be posted back on every selection change
            within the radio group.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Controls.RadioButtonGroup.SelectionChanged">
            <summary>
            Occurs when the value of the radio button group changes between postbacks to the server.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.TabCommandEventArgs">
            <summary>
            Provides information about a command raised from a <see cref="T:Spring.Web.UI.Controls.TabContainer"/>
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabCommandEventArgs.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance.
            </summary>
            <param name="commandName">The name of the command raised by a <see cref="T:Spring.Web.UI.Controls.TabContainer"/>.</param>
            <param name="tabIndex">The index of the tab that raised this event.</param>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabCommandEventArgs.TabIndex">
            <summary>
            Returns the index of the tab that raised this command.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.TabCommandEventHandler">
            <summary>
            Represents the method that will handle the TabCommand event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Spring.Web.UI.Controls.TabCommandEventArgs"/> that contains the event data.</param>
            <author>Erich Eichinger</author>
        </member>
        <member name="T:Spring.Web.UI.Controls.TabContainer">
            <summary>
            This control is responsible for rendering tabs.
            </summary>
            <remarks>
            By default, this TabContainer implementation uses <see cref="T:System.Web.UI.WebControls.LinkButton"/> controls to 
            render tabs. Override <see cref="M:Spring.Web.UI.Controls.TabContainer.CreateTab(Spring.Web.UI.Controls.TabularMultiView,Spring.Web.UI.Controls.TabularView,System.Int32)"/> to change this behaviour.
            </remarks>
            <author>Erich Eichinger</author>
        </member>
        <member name="F:Spring.Web.UI.Controls.TabContainer.SelectTabCommandName">
            <summary>
            Represents the command name of the tab to be selected.
            </summary>
        </member>
        <member name="F:Spring.Web.UI.Controls.TabContainer._eventClick">
            <summary>
            Key into the eventhandler table.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabContainer.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>
            Catches <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> with name '<see cref="F:Spring.Web.UI.Controls.TabContainer.SelectTabCommandName"/>' and 
            raises the <see cref="E:Spring.Web.UI.Controls.TabContainer.Click"/> event.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="args">contains event information.</param>
            <returns></returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabContainer.OnTabClickedCommand(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Raises the <see cref="E:Spring.Web.UI.Controls.TabContainer.Click"/> event.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabContainer.CreateTab(Spring.Web.UI.Controls.TabularMultiView,Spring.Web.UI.Controls.TabularView,System.Int32)">
            <summary>
            Creates a new tab for the specified <c>view</c> within the given <c>container</c>.
            </summary>
            <param name="container">The <see cref="T:Spring.Web.UI.Controls.TabularMultiView"/> containing the <c>view</c></param>
            <param name="view">The <see cref="T:Spring.Web.UI.Controls.TabularView"/> for which a new tab is to be created.</param>
            <param name="index">The index of the tab to be created.</param>
            <remarks>
            By default, <see cref="T:System.Web.UI.WebControls.LinkButton"/> controls are used for rendering tabs. Override this method to
            change this behaviour.
            </remarks>
        </member>
        <member name="E:Spring.Web.UI.Controls.TabContainer.Click">
            <summary>
            Occurs, when a tab control is clicked.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.TabularMultiView">
            <summary>
            The <see cref="T:Spring.Web.UI.Controls.TabularMultiView"/> control allows you to build ASP.NET Web pages that present 
            the user with content arranged in tabular form.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularMultiView.#ctor">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularMultiView.#ctor(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            Initializes a new instance with the given container tag to be used for rendering.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularMultiView.CreateTabContainer">
            <summary>
            Create the container for tab items.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularMultiView.CreateContent(Spring.Web.UI.Controls.TabContainer,System.Web.UI.WebControls.MultiView)">
            <summary>
            Creates TabContainer and MultiView 
            </summary>
        </member>
        <member name="F:Spring.Web.UI.Controls.TabularMultiView._parsedViews">
            <summary>
            keeps parsed views until multiView is created
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularMultiView.OnInit(System.EventArgs)">
            <summary>
            Initialize this control.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularMultiView.CreateChildControls">
            <summary>
            Creates child controls.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularMultiView.AddParsedSubObject(System.Object)">
            <summary>
            Adds the element to the collection of child controls.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularMultiView.RebuildTabs">
            <summary>
            Called if ActiveViewIndex is changed
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularMultiView.TabularMenuCSS">
            <summary>
            Set the style class of the panel containing the Tabs.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularMultiView.TabularMenuItemCSS">
            <summary>
            Set the style class of each Tab item.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularMultiView.TabularMenuSelectedItemCSS">
            <summary>
            Set the style class of the currently selected Tab item.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularMultiView.TabularBodyCSS">
            <summary>
            Set the style class of the panel containing all <see cref="T:Spring.Web.UI.Controls.TabularView"/> controls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularMultiView.ActiveTabIndex">
            <summary>
            Gets or sets the index of the active View control within a <see cref="T:Spring.Web.UI.Controls.TabularMultiView"/> control.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Controls.TabularMultiView.ActiveTabChanged">
            <summary>
            Occurs, if the active tab has changed.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.TabularView">
            <summary>
            Represents a control that acts as a container for a group of controls within a <see cref="T:Spring.Web.UI.Controls.TabularMultiView"/> control. 
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularView.Active">
            <summary>
            Indicates if this view is currently active.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularView.TabName">
            <summary>
            Get or Set the name of the tab item associated with this view.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularView.TabToolTip">
            <summary>
            Get or Set the tooltip text of the tab item associated with this view.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.TabularViewCollection">
            <summary>
            Holds the collection of <see cref="T:Spring.Web.UI.Controls.TabularView"/> controls in a <see cref="T:Spring.Web.UI.Controls.TabularMultiView"/>.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularViewCollection.#ctor(System.Web.UI.Control)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularViewCollection.Add(System.Web.UI.Control)">
            <summary>
            Add the specified <see cref="T:Spring.Web.UI.Controls.TabularView"/> control to the collection.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.TabularViewCollection.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            Add the specified <see cref="T:Spring.Web.UI.Controls.TabularView"/> control to the collection.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.TabularViewCollection.Item(System.Int32)">
            <summary>
            Obtain the specified <see cref="T:Spring.Web.UI.Controls.TabularView"/> control from the collection.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.ValidationError">
            <summary>
            This control should be used to display field-level validation errors.
            </summary>
            <author>Aleksandar Seovic</author>
            <author>Jonathan Allenby</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.ValidationError.CreateValidationErrorsRenderer">
            <summary>
            Create the default <see cref="T:Spring.Web.UI.Validation.SpanValidationErrorsRenderer"/> 
            for this ValidationControl if none is configured.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.ValidationSummary">
            <summary>
            This control should be used instead of standard ValidationSummary control
            to display validation errors identified by the Spring.NET validation framework.
            </summary>
            <author>Aleksandar Seovic</author>
            <author>Jonathan Allenby</author>
        </member>
        <member name="M:Spring.Web.UI.Controls.ValidationSummary.CreateValidationErrorsRenderer">
            <summary>
            Create the default <see cref="T:Spring.Web.UI.Validation.DivValidationErrorsRenderer"/> 
            for this ValidationControl if none is configured.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Validation.AbstractValidationErrorsRenderer">
            <summary>
            This class provides common members for all validation errors renderers.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="T:Spring.Web.UI.Validation.IValidationErrorsRenderer">
            <summary>
            This interface should be implemented by all validation errors renderers.
            </summary>
            <remarks>
            <para>
            Validation errors renderers are used to decouple rendering behavior from the 
            validation errors controls such as <see cref="T:Spring.Web.UI.Controls.ValidationError"/> and
            <see cref="T:Spring.Web.UI.Controls.ValidationSummary"/>.
            </para>
            <para>
            This allows users to change how validation errors are rendered by simply pluggin in
            appropriate renderer implementation into the validation errors controls using 
            Spring.NET dependency injection.
            </para>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.Validation.IValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.Generic.IList{System.String})">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="M:Spring.Web.UI.Validation.AbstractValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.Generic.IList{System.String})">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="P:Spring.Web.UI.Validation.AbstractValidationErrorsRenderer.CssClass">
            <summary>
            Gets or sets the name of the CSS class that should be used.
            </summary>
            <value>
            The name of the CSS class that should be used
            </value>
        </member>
        <member name="T:Spring.Web.UI.Validation.DivValidationErrorsRenderer">
            <summary>
            Implementation of <see cref="T:Spring.Web.UI.Validation.IValidationErrorsRenderer"/> that renders
            validation errors within a <c>div</c> element, using breaks between the
            errors.
            </summary>
            <remarks>
            This renderer's behavior is consistent with standard ASP.NET behavior of
            the validation summary, and is used as default renderer for Spring.NET
            control.
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.Validation.DivValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.Generic.IList{System.String})">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="T:Spring.Web.UI.Validation.IconValidationErrorsRenderer">
            <summary>
            Implementation of <see cref="T:Spring.Web.UI.Validation.IValidationErrorsRenderer"/> that 
            displays an error image to let user know there is an error, and
            tooltip to display actual error messages.
            </summary>
            <remarks>
            <para>
            This renderer's behavior is similar to Windows Forms error provider.
            </para>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.Validation.IconValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.Generic.IList{System.String})">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="P:Spring.Web.UI.Validation.IconValidationErrorsRenderer.IconSrc">
            <summary>
            Gets or sets the name of the image file to use as an error icon.
            </summary>
            <remarks>
            <para>
            Image name should be relative to the value of the <see cref="P:Spring.Web.UI.Page.ImagesRoot"/>
            property, and should not use leading path separator.
            </para>
            </remarks>
            <value>The name of the image file to use as an error icon.</value>
        </member>
        <member name="T:Spring.Web.UI.Validation.SpanValidationErrorsRenderer">
            <summary>
            Implementation of <see cref="T:Spring.Web.UI.Validation.IValidationErrorsRenderer"/> that renders
            validation errors within a <c>span</c> element, using breaks between the
            errors.
            </summary>
            <remarks>
            This renderer's behavior is consistent with standard ASP.NET behavior of
            the control validators, and is used as the default renderer for Spring.NET
            <see cref="T:Spring.Web.UI.Controls.ValidationError"/> control.
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.Validation.SpanValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.Generic.IList{System.String})">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="T:Spring.Web.UI.AbstractWizard">
            <summary>
            Convinience implementation of the wizard-like page controller.
            </summary>
            <remarks>
            <p>
            Wizard steps are encapsulated within custom user controls. Wizard
            controller takes care of navigation through steps and loading of the 
            appropriate user control.
            </p>
            <p>
            Developer implementing wizard needs to inherit from this class and implement
            abstract, read-only StepPanel property that will be used as a container
            for the wizard steps. Navigation event handlers should call Previous and Next methods
            from this class to change current step.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="T:Spring.Web.UI.Page">
            <summary>
            Represents an .aspx file, also known as a Web Forms page, requested from a
            server that hosts an ASP.NET Web application.
            </summary>
            <remarks>
            <p>
            The <b>Page</b> class is associated with files that have an .aspx extension.
            These files are compiled at run time as Page objects and cached in server memory.
            </p>
            <p>
            This class extends <see cref="T:System.Web.UI.Page"/> and adds support for master
            pages similar to upcoming ASP.Net 2.0 master pages feature.
            </p>
            <p>
            It also adds support for automatic localization using local page resource file, and
            simplifies access to global resources (resources from the message source for the
            application context).
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="T:Spring.Web.UI.IValidationContainer">
            <summary>
            Abstracts access to properties required for 
            handling validation and error rendering
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="P:Spring.Web.UI.IValidationContainer.MessageSource">
            <summary>
            Gets the MessageSource to be used for 
            resolving error ids into messages
            </summary>
        </member>
        <member name="P:Spring.Web.UI.IValidationContainer.ValidationErrors">
            <summary>
            Gets the list of validation errors kept by this container.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.#ctor">
            <summary>
            Creates and initializes the new page instance.
            </summary>
            <remarks>
            Calls <see cref="M:Spring.Web.UI.Page.InitializeNavigationSupport"/>.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Page.OnPreInit(System.EventArgs)">
            <summary>
            Initializes Spring.NET page internals and raises the PreInit event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeCulture">
            <summary>
            Initializes the culture.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.OnInit(System.EventArgs)">
            <summary>
            Initializes data model and controls.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.OnPreLoadViewState(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Spring.Web.UI.Page.PreLoadViewState"/> event after page initialization.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.RaisePreLoadViewStateEvent">
            <summary>
            Raises the PreLoadViewState event for
            this page and all contained controls.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.PreLoadViewStateRecursive(System.Web.UI.ControlCollection)">
            <summary>
            Recursively raises PreLoadViewState event.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.LoadPageStateFromPersistenceMedium">
            <summary>
            Overridden to add support for <see cref="E:Spring.Web.UI.Page.PreLoadViewState"/>
            </summary>
            <remarks>
            If necessary override <see cref="M:Spring.Web.UI.Page.LoadPageStateFromPersistenceMediumBase"/> instead of this method.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Page.BindFormDataIfNecessary">
            <summary>
            If ViewState is disabled, calls <see cref="M:Spring.Web.UI.Page.BindFormData"/> recursively for all controls.
            </summary>
            <remarks>
            If ViewState is disabled, DropDownLists etc. might not fire "Changed" events.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Page.BindFormDataRecursive">
            <summary>
            Calls <see cref="M:Spring.Web.UI.Page.BindFormData"/> recursively for all controls.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.BindFormDataRecursive(System.Web.UI.ControlCollection)">
            <summary>
            Recursively calls <see cref="M:Spring.Web.UI.Page.BindFormData"/> for all controls.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.LoadPageStateFromPersistenceMediumBase">
            <summary>
            If necessary override this method instead of <see cref="M:Spring.Web.UI.Page.LoadPageStateFromPersistenceMedium"/>
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.OnLoad(System.EventArgs)">
            <summary>
            Initializes dialog result and unbinds data from the controls
            into a data model.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.OnPreRender(System.EventArgs)">
            <summary>
            Binds data from the data model into controls and raises
            PreRender event afterwards.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.OnInitializeControls(System.EventArgs)">
            <summary>
            Raises InitializeControls event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.LoadControl(System.String)">
            <summary>
            Obtains a <see cref="T:System.Web.UI.UserControl"/> object from a user control file
            and injects dependencies according to Spring config file.
            </summary>
            <param name="virtualPath">The virtual path to a user control file.</param>
            <returns>
            Returns the specified <see langword="UserControl"/> object, with dependencies injected.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.LoadControl(System.Type,System.Object[])">
            <summary>
            Obtains a <see cref="T:System.Web.UI.UserControl"/> object by type
            and injects dependencies according to Spring config file.
            </summary>
            <param name="t">The type of a user control.</param>
            <param name="parameters">parameters to pass to the control</param>
            <returns>
            Returns the specified <see langword="UserControl"/> object, with dependencies injected.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.LoadModelFromPersistenceMedium">
            <summary>
            Retrieves data model from a persistence store.
            </summary>
            <remarks>
            The default implementation uses <see cref="P:System.Web.UI.Page.Session"/> to store and retrieve
            the model for the current <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath"/>
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Page.SaveModelToPersistenceMedium(System.Object)">
            <summary>
            Saves data model to a persistence store.
            </summary>
            <remarks>
            The default implementation uses <see cref="P:System.Web.UI.Page.Session"/> to store and retrieve
            the model for the current <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath"/>
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeModel">
            <summary>
            Initializes data model when the page is first loaded.
            </summary>
            <remarks>
            This method should be overriden by the developer
            in order to initialize data model for the page.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Page.LoadModel(System.Object)">
            <summary>
            Loads the saved data model on postback.
            </summary>
            <remarks>
            This method should be overriden by the developer
            in order to load data model for the page.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Page.SaveModel">
            <summary>
            Returns a model object that should be saved.
            </summary>
            <remarks>
            This method should be overriden by the developer
            in order to save data model for the page.
            </remarks>
            <returns>
            A model object that should be saved.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.SetController(System.Object)">
            <summary>
            <para>Stores the controller to be returned by <see cref="P:Spring.Web.UI.Page.Controller"/> property.</para>
            </summary>
            <remarks>
            The default implementation uses a field to store the reference. Derived classes may override this behaviour
            but must ensure to also change the behaviour of <see cref="M:Spring.Web.UI.Page.GetController"/> accordingly.
            </remarks>
            <param name="controller">Controller for the page.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.GetController">
            <summary>
            <para>Returns the controller stored by <see cref="M:Spring.Web.UI.Page.SetController(System.Object)"/>.</para>
            </summary>
            <remarks>
            The default implementation uses a field to retrieve the reference. Derived classes may override this behaviour
            but must ensure to also change the behaviour of <see cref="M:Spring.Web.UI.Page.SetController(System.Object)"/> accordingly.
            </remarks>
            <returns>
            The controller for this page.
            <list type="bullet">
            <item>If no controller is set, a reference to the page itself is returned.</item>
            </list>
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterStyle(System.String,System.String)">
            <summary>
            Registers single CSS style with the page.
            </summary>
            <param name="name">Style name.</param>
            <param name="style">Style definition.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.IsStyleRegistered(System.String)">
            <summary>
            Returns <c>True</c> if specified style is registered, <c>False</c> otherwise.
            </summary>
            <param name="name">Style name.</param>
            <returns><c>True</c> if specified style is registered, <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterStyleFile(System.String,System.String)">
            <summary>
            Registers CSS file with the page.
            </summary>
            <param name="key">Style file key.</param>
            <param name="fileName">Style file name.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.IsStyleFileRegistered(System.String)">
            <summary>
            Returns <c>True</c> if specified style file is registered, <c>False</c> otherwise.
            </summary>
            <param name="key">Style file key.</param>
            <returns><c>True</c> if specified style file is registered, <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptBlock(System.String,System.String)">
            <summary>
            Registers script block that should be rendered within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptBlock(System.String,Spring.Web.Support.MimeMediaType,System.String)">
            <summary>
            Registers script block that should be rendered within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="type">Script language MIME type.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptFile(System.String,System.String)">
            <summary>
            Registers script file that should be referenced within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="fileName">Script file name.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptFile(System.String,Spring.Web.Support.MimeMediaType,System.String)">
            <summary>
            Registers script file that should be referenced within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="type">Script language MIME type.</param>
            <param name="fileName">Script file name.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptEvent(System.String,System.String,System.String,System.String)">
            <summary>
            Registers script block that should be rendered within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="element">Element ID of the event source.</param>
            <param name="eventName">Name of the event to handle.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptEvent(System.String,Spring.Web.Support.MimeMediaType,System.String,System.String,System.String)">
            <summary>
            Registers script block that should be rendered within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="mimeType">The scripting language's MIME type.</param>
            <param name="element">Element ID of the event source.</param>
            <param name="eventName">Name of the event to handle.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.IsHeadScriptRegistered(System.String)">
            <summary>
            Returns <c>True</c> if specified head script is registered, <c>False</c> otherwise.
            </summary>
            <param name="key">Script key.</param>
            <returns><c>True</c> if specified head script is registered, <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeNavigationSupport">
            <summary>
            Ensure, that <see cref="P:Spring.Web.UI.Page.WebNavigator"/> is set to a valid instance.
            </summary>
            <remarks>
            If <see cref="P:Spring.Web.UI.Page.WebNavigator"/> is not already set, creates and sets a new <see cref="T:Spring.Web.Support.WebFormsResultWebNavigator"/> instance.<br/>
            Override this method if you don't want to inject a navigator, but need a different default.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.Page.SetResult(System.String)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="resultName">Result name.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.SetResult(System.String,System.Object)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="resultName">Name of the result.</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.GetResultUrl(System.String)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result evaluated using this Page for expression 
            </summary>
            <param name="resultName">Name of the result.</param>
            <returns>A redirect url string.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.GetResultUrl(System.String,System.Object)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result evaluated using this Page for expression 
            </summary>
            <param name="resultName">Name of the result.</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result</param>
            <returns>A redirect url string.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.Validate">
            <summary>
            Instructs any validation controls included on the page to validate their assigned information.
            </summary>
            
        </member>
        <member name="M:Spring.Web.UI.Page.Validate(System.String)">
            <summary>
            Instructs the validation controls in the specified validation group to validate their assigned information.
            </summary>
            
            <param name="validationGroup">The validation group name of the controls to validate.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.Validate(System.Object,Spring.Validation.IValidator[])">
            <summary>
            Evaluates specified validators and returns <c>True</c> if all of them are valid.
            </summary>
            <remarks>
            <p>
            Each validator can itself represent a collection of other validators if it is
            an instance of <see cref="T:Spring.Validation.ValidatorGroup"/> or one of its derived types.
            </p>
            <p>
            Please see the Validation Framework section in the documentation for more info.
            </p>
            </remarks>
            <param name="validationContext">Object to validate.</param>
            <param name="validators">Validators to evaluate.</param>
            <returns>
            <c>True</c> if all of the specified validators are valid, <c>False</c> otherwise.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.CreateValidatorParameters">
            <summary>
            Creates the validator parameters.
            </summary>
            <remarks>
            <para>
            This method can be overriden if you want to pass additional parameters
            to the validation framework, but you should make sure that you call
            this base implementation in order to add page, session, application,
            request, response and context to the variables collection.
            </para>
            </remarks>
            <returns>
            Dictionary containing parameters that should be passed to
            the data validation framework.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeDataBindings">
            <summary>
            Initializes the data bindings.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.GetBindingManagerKey">
            <summary>
            Returns the key to be used for looking up a cached
            BindingManager instance in <see cref="P:Spring.Web.UI.Page.SharedState"/>.
            </summary>
            <returns>a unique key identifying the <see cref="T:Spring.DataBinding.IBindingContainer"/> instance in the <see cref="P:Spring.Web.UI.Page.SharedState"/> dictionary.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.CreateBindingManager">
             <summary>
             Creates a new <see cref="T:Spring.DataBinding.IBindingContainer"/> instance.
             </summary>
             <remarks>
             This factory method is called if no <see cref="T:Spring.DataBinding.IBindingContainer"/> could be found in <see cref="P:Spring.Web.UI.Page.SharedState"/>
             using the key returned by <see cref="M:Spring.Web.UI.Page.GetBindingManagerKey"/>.<br/>
             <br/>
            
             </remarks>
             <returns>a <see cref="T:Spring.DataBinding.IBindingContainer"/> instance to be used for DataBinding</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeBindingManager">
            <summary>
            Initializes binding manager and data bindings if necessary.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.OnDataBindingsInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Spring.Web.UI.Page.DataBindingsInitialized"/> event.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.BindFormData">
            <summary>
            Bind data from model to form.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.UnbindFormData">
            <summary>
            Unbind data from form to model.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.OnDataBound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.OnDataUnbound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeMessageSource">
            <summary>
            Initializes local message source
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.GetLocalResourceManager">
            <summary>
            Creates and returns local ResourceManager for this page.
            </summary>
            <remarks>
            <para>
            In ASP.NET 1.1, this method loads local resources from the web application assembly.
            </para>
            <para>
            However, in ASP.NET 2.0, local resources are compiled into a dynamic assembly,
            so we need to find that assembly and load the resources from it.
            </para>
            </remarks>
            <returns>Local ResourceManager instance.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.GetMessage(System.String)">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.GetMessage(System.String,System.Object[])">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <param name="args">Message arguments that will be used to format return value.</param>
            <returns>Formatted message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.GetResourceObject(System.String)">
            <summary>
            Returns resource object for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Resource object.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.OnUserCultureChanged(System.EventArgs)">
            <summary>
            Raises UserLocaleChanged event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.CreateSharedStateKey(System.String)">
            <summary>
            Creates a key for shared state, taking into account whether
            this page belongs to a process or not.
            </summary>
            <param name="key">Key suffix</param>
            <returns>Generated unique shared state key.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.AddedControl(System.Web.UI.Control,System.Int32)">
            <summary>
            Injects dependencies into control before adding it.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Page.PreLoadViewState">
            <summary>
            PreLoadViewState event.
            </summary>
            <remarks>
            <para>
            This event is raised if <see cref="P:System.Web.UI.Page.IsPostBack"/> is true
            immediately before state is restored from ViewState.
            </para>
            <para>
            NOTE: Different from <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)"/>, this event
            will also be raised if the control has no ViewState or ViewState is disabled.
            </para>
            </remarks>
        </member>
        <member name="E:Spring.Web.UI.Page.InitializeControls">
            <summary>
            This event is raised before Init event and should be used to initialize
            controls as necessary.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.ModelPersistenceMedium">
            <summary>
            Set the <see cref="T:Spring.Web.UI.IModelPersistenceMedium"/> strategy for storing model 
            instances between requests.
            </summary>
            <remarks>
            By default the <see cref="T:Spring.Web.UI.SessionModelPersistenceMedium"/> strategy is used.
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Page.Controller">
            <summary>
            Gets or sets controller for the page.
            </summary>
            <remarks>
            <para>
            Application pages should shadow this property and change its type
            in order to make calls to controller within the page as simple as possible.
            </para>
            <para>
            If external controller is not specified, page will serve as its own controller,
            which will allow data binding to work properly.
            </para>
            </remarks>
            <value>Controller for the page. Defaults to the page itself.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.SharedState">
            <summary>
            Returns a thread-safe dictionary that contains state that is shared by
            all instances of this page.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.PreviousPage">
            <summary>
            Overrides the default PreviousPage property to return an instance of <see cref="T:Spring.Web.UI.Page"/>,
            and to work properly during server-side transfers and executes.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Context">
            <summary>
             Publish <see cref="T:System.Web.HttpContext"/> associated with this page for convenient usage in Binding Expressions
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Master">
            <summary>
            Gets the master page that determines the overall look of the page.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.HasMaster">
            <summary>
            Returns true if page uses master page, false otherwise.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Styles">
            <summary>
            Gets a dictionary of registered styles.
            </summary>
            <value>Registered styles.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.StyleFiles">
            <summary>
            Gets a dictionary of registered style files.
            </summary>
            <value>Registered style files.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.HeadScripts">
            <summary>
            Gets a dictionary of registered head scripts.
            </summary>
            <value>Registered head scripts.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.CssRoot">
            <summary>
            Gets or sets the CSS root.
            </summary>
            <value>The CSS root.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.ScriptsRoot">
            <summary>
            Gets or sets the scripts root.
            </summary>
            <value>The scripts root.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.ImagesRoot">
            <summary>
            Gets or sets the images root.
            </summary>
            <value>The images root.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.WebNavigator">
            <summary>
            Gets/Sets the navigator to be used for handling <see cref="M:Spring.Web.UI.Page.SetResult(System.String,System.Object)"/> calls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Results">
            <summary>
            Gets or sets map of result names to target URLs
            </summary>
            <remarks>
            Using <see cref="P:Spring.Web.UI.Page.Results"/> requires <see cref="P:Spring.Web.UI.Page.WebNavigator"/> to implement <see cref="T:Spring.Web.Support.IResultWebNavigator"/>.
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Page.Args">
            <summary>
            A convenience, case-insensitive table that may be used to e.g. pass data into SpEL expressions"/&gt;.
            </summary>
            <remarks>
            By default, e.g. <see cref="M:Spring.Web.UI.Page.SetResult(System.String)"/> passes the control instance into an expression. Using
            <see cref="P:Spring.Web.UI.Page.Args"/> is an easy way to pass additional parameters into the expression
            <example>
            This example shows how to pass an arbitrary value 'age' into a result expression.
            <code>
            // config:
            
            &lt;property Name="Results"&gt;
              &lt;dictionary&gt;
              		&lt;entry key="ok_clicked" value="redirect:~/ShowResult.aspx?age=%{Args['age']}" /&gt;
              &lt;/dictionary&gt;
            &lt;/property&gt;
            
            // code:
            
            void OnOkClicked(object sender, EventArgs e)
            {
              Args["result"] = txtAge.Text;
              SetResult("ok_clicked");
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Page.ValidationErrors">
            <summary>
            Gets or sets the validation errors container.
            </summary>
            <value>The validation errors container.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.Spring#DataBinding#IDataBound#BindingManager">
            <summary>
            Expose BindingManager via IDataBound interface
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.BindingManager">
            <summary>
            Gets the binding manager.
            </summary>
            <value>The binding manager.</value>
        </member>
        <member name="E:Spring.Web.UI.Page.DataBindingsInitialized">
            <summary>
            This event is raised after <see cref="P:Spring.Web.UI.Page.BindingManager"/> as been initialized.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Page.DataBound">
            <summary>
            This event is raised after all controls have been populated with values
            from the data model.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Page.DataUnbound">
            <summary>
            This event is raised after data model has been populated with values from
            web controls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.ApplicationContext">
            <summary>
            Gets or sets the <see cref="T:Spring.Context.IApplicationContext"/> that this
            object runs in.
            </summary>
            <value></value>
            <remarks>
            <p>
            Normally this call will be used to initialize the object.
            </p>
            <p>
            Invoked after population of normal object properties but before an
            init callback such as
            <see cref="T:Spring.Objects.Factory.IInitializingObject"/>'s
            <see cref="M:Spring.Objects.Factory.IInitializingObject.AfterPropertiesSet"/>
            or a custom init-method. Invoked after the setting of any
            <see cref="T:Spring.Context.IResourceLoaderAware"/>'s
            <see cref="P:Spring.Context.IResourceLoaderAware.ResourceLoader"/>
            property.
            </p>
            </remarks>
            <exception cref="T:Spring.Context.ApplicationContextException">
            In the case of application context initialization errors.
            </exception>
            <exception cref="T:Spring.Objects.ObjectsException">
            If thrown by any application context methods.
            </exception>
            <exception cref="T:Spring.Objects.Factory.ObjectInitializationException"/>
        </member>
        <member name="P:Spring.Web.UI.Page.Localizer">
            <summary>
            Gets or sets the localizer.
            </summary>
            <value>The localizer.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.CultureResolver">
            <summary>
            Gets or sets the culture resolver.
            </summary>
            <value>The culture resolver.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.MessageSource">
            <summary>
            Gets or sets the local message source.
            </summary>
            <value>The local message source.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.UserCulture">
            <summary>
            Gets or sets user's culture
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Page.UserCultureChanged">
            <summary>
            This event is raised when the value of UserLocale property changes.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Spring#Web#Support#ISupportsWebDependencyInjection#DefaultApplicationContext">
            <summary>
            Holds default ApplicationContext instance to be used during DI.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.Previous">
            <summary>
            Moves to the previous step in the list, if one exists.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.Next">
            <summary>
            Moves to the next step in the list, if one exists.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.OnInit(System.EventArgs)">
            <summary>
            Initializes wizard steps.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.OnPreRender(System.EventArgs)">
            <summary>
            Loads new step into a step panel if step has changed.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.InitializeSteps(System.Collections.IList)">
            <summary>
            Initializes all the steps.
            </summary>
            <param name="stepNames">List of step control names.</param>
            <returns>List of step control instances.</returns>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.LoadStep(System.String)">
            <summary>
            Loads step control.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.Steps">
            <summary>
            Gets or sets a list of user controls representing wizard steps.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.CurrentStep">
            <summary>
            Gets or sets current step using step index.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.IsFirst">
            <summary>
            Returns true if there are no steps before the current step.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.IsLast">
            <summary>
            Returns true if there are no steps after the current step.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.StepPanel">
            <summary>
            Panel that should serve as a container for wizard steps.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.DialogAttribute">
            <summary>
            Specifies that page should be treated as a dialog, meaning that after processing
            is over user should return to the referring page.
            </summary>
            <remarks>
            <p>
            Pages marked with this attribute will have "close" result predefined.
            </p>
            <p>
            Developers should call SetResult("close") from the event handler
            in order to return control back to the calling page.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="T:Spring.Web.UI.IModelPersistenceMedium">
            <summary>
            Abstracts storage strategy for storing model instances between requests. 
            All storage providers participating in UI model management must implement this interface.
            </summary>
            <seealso cref="T:Spring.Web.UI.SessionModelPersistenceMedium"/>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.IModelPersistenceMedium.LoadFromMedium(System.Web.UI.Control)">
            <summary>
            Load the model for the specified control context.
            </summary>
            <param name="context">the control context.</param>
            <returns>the model for the specified control context.</returns>
        </member>
        <member name="M:Spring.Web.UI.IModelPersistenceMedium.SaveToMedium(System.Web.UI.Control,System.Object)">
            <summary>
            Save the specified model object.
            </summary>
            <param name="context">the control context.</param>
            <param name="modelToSave">the model to save.</param>
        </member>
        <member name="T:Spring.Web.UI.MasterPage">
            <summary>
            Spring.NET Master Page implementation for ASP.NET 2.0
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.#ctor">
            <summary>
            Initialize a new MasterPage instance.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.OnInit(System.EventArgs)">
            <summary>
            Initializes user control.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.OnPreRender(System.EventArgs)">
            <summary>
            Binds data from the data model into controls and raises
            PreRender event afterwards.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.OnInitializeControls(System.EventArgs)">
            <summary>
            Raises InitializeControls event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.LoadControl(System.String)">
            <summary>
            Obtains a <see cref="T:System.Web.UI.UserControl"/> object from a user control file
            and injects dependencies according to Spring config file.
            </summary>
            <param name="virtualPath">The virtual path to a user control file.</param>
            <returns>
            Returns the specified <see langword="UserControl"/> object, with dependencies injected.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.LoadControl(System.Type,System.Object[])">
            <summary>
            Obtains a <see cref="T:System.Web.UI.UserControl"/> object by type
            and injects dependencies according to Spring config file.
            </summary>
            <param name="t">The type of a user control.</param>
            <param name="parameters">parameters to pass to the control</param>
            <returns>
            Returns the specified <see langword="UserControl"/> object, with dependencies injected.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.OnDataBound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.OnDataUnbound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.InitializeMessageSource">
            <summary>
            Initializes local message source
            </summary>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.GetLocalResourceManager">
            <summary>
            Creates and returns local ResourceManager for this page.
            </summary>
            <remarks>
            <para>
            In ASP.NET 1.1, this method loads local resources from the web application assembly.
            </para>
            <para>
            However, in ASP.NET 2.0, local resources are compiled into the dynamic assembly, 
            so we need to find that assembly instead and load the resources from it.
            </para>
            </remarks>
            <returns>Local ResourceManager instance.</returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.GetMessage(System.String)">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.GetMessage(System.String,System.Object[])">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <param name="args">Message arguments that will be used to format return value.</param>
            <returns>Formatted message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.GetResourceObject(System.String)">
            <summary>
            Returns resource object for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Resource object.</returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.InitializeNavigationSupport">
            <summary>
            Ensure, that <see cref="P:Spring.Web.UI.MasterPage.WebNavigator"/> is set to a valid instance.
            </summary>
            <remarks>
            If <see cref="P:Spring.Web.UI.MasterPage.WebNavigator"/> is not already set, creates and sets a new <see cref="T:Spring.Web.Support.WebFormsResultWebNavigator"/> instance.<br/>
            Override this method if you don't want to inject a navigator, but need a different default.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.SetResult(System.String)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="resultName">Result name.</param>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.SetResult(System.String,System.Object)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="resultName">Name of the result.</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result.</param>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.GetResultUrl(System.String)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result evaluated using this Page for expression 
            </summary>
            <param name="resultName">Name of the result.</param>
            <returns>A redirect url string.</returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.GetResultUrl(System.String,System.Object)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result evaluated using this Page for expression 
            </summary>
            <param name="resultName">Name of the result.</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result</param>
            <returns>A redirect url string.</returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.Validate(System.Object,Spring.Validation.IValidator[])">
            <summary>
            Evaluates specified validators and returns <c>True</c> if all of them are valid.
            </summary>
            <remarks>
            <p>
            Each validator can itself represent a collection of other validators if it is
            an instance of <see cref="T:Spring.Validation.ValidatorGroup"/> or one of its derived types.
            </p>
            <p>
            Please see the Validation Framework section in the documentation for more info.
            </p>
            </remarks>
            <param name="validationContext">Object to validate.</param>
            <param name="validators">Validators to evaluate.</param>
            <returns>
            <c>True</c> if all of the specified validators are valid, <c>False</c> otherwise.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.CreateValidatorParameters">
            <summary>
            Creates the validator parameters.
            </summary>
            <remarks>
            <para>
            This method can be overriden if you want to pass additional parameters
            to the validation framework, but you should make sure that you call
            this base implementation in order to add page, session, application,
            request, response and context to the variables collection.
            </para>
            </remarks>
            <returns>
            Dictionary containing parameters that should be passed to
            the data validation framework.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.AddedControl(System.Web.UI.Control,System.Int32)">
            <summary>
            Injects dependencies before adding the control.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.MasterPage.InitializeControls">
            <summary>
            This event is raised before Load event and should be used to initialize
            controls as necessary.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.MasterPage.DataBound">
            <summary>
            This event is raised after all controls have been populated with values
            from the data model.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.MasterPage.DataUnbound">
            <summary>
            This event is raised after data model has been populated with values from
            web controls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.ApplicationContext">
            <summary>
            Gets or sets the <see cref="T:Spring.Context.IApplicationContext"/> that this
            object runs in.
            </summary>
            <value></value>
            <remarks>
            <p>
            Normally this call will be used to initialize the object.
            </p>
            <p>
            Invoked after population of normal object properties but before an
            init callback such as
            <see cref="T:Spring.Objects.Factory.IInitializingObject"/>'s
            <see cref="M:Spring.Objects.Factory.IInitializingObject.AfterPropertiesSet"/>
            or a custom init-method. Invoked after the setting of any
            <see cref="T:Spring.Context.IResourceLoaderAware"/>'s
            <see cref="P:Spring.Context.IResourceLoaderAware.ResourceLoader"/>
            property.
            </p>
            </remarks>
            <exception cref="T:Spring.Context.ApplicationContextException">
            In the case of application context initialization errors.
            </exception>
            <exception cref="T:Spring.Objects.ObjectsException">
            If thrown by any application context methods.
            </exception>
            <exception cref="T:Spring.Objects.Factory.ObjectInitializationException"/>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.Localizer">
            <summary>
            Gets or sets the localizer.
            </summary>
            <value>The localizer.</value>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.MessageSource">
            <summary>
            Gets or sets the local message source.
            </summary>
            <value>The local message source.</value>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.UserCulture">
            <summary>
            Gets or sets user's culture
            </summary>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.WebNavigator">
            <summary>
            Gets/Sets the navigator to be used for handling <see cref="M:Spring.Web.UI.MasterPage.SetResult(System.String,System.Object)"/> calls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.Results">
            <summary>
            Gets or sets map of result names to target URLs
            </summary>
            <remarks>
            Using <see cref="P:Spring.Web.UI.MasterPage.Results"/> requires <see cref="P:Spring.Web.UI.MasterPage.WebNavigator"/> to implement <see cref="T:Spring.Web.Support.IResultWebNavigator"/>.
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.Args">
            <summary>
            A convenience, case-insensitive table that may be used to e.g. pass data into SpEL expressions"/&gt;.
            </summary>
            <remarks>
            By default, e.g. <see cref="M:Spring.Web.UI.MasterPage.SetResult(System.String)"/> passes the control instance into an expression. Using
            <see cref="P:Spring.Web.UI.MasterPage.Args"/> is an easy way to pass additional parameters into the expression
            <example>
            // config:
            
            &lt;property Name="Results"&gt;
              &lt;dictionary&gt;
              		&lt;entry key="ok_clicked" value="redirect:~/ShowResult.aspx?result=%{Args['result']}" /&gt;
              &lt;/dictionary&gt;
            &lt;/property&gt;
            
            // code:
            
            void OnOkClicked(object sender, EventArgs e)
            {
              Args["result"] = txtUserInput.Text;
              SetResult("ok_clicked");
            }
            </example>
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.ValidationErrors">
            <summary>
            Gets the validation errors container.
            </summary>
            <value>The validation errors container.</value>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.Page">
            <summary>
            Overrides Page property to return <see cref="T:Spring.Web.UI.Page"/> 
            instead of <see cref="T:System.Web.UI.Page"/>.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.MasterPage.Spring#Web#Support#ISupportsWebDependencyInjection#DefaultApplicationContext">
            <summary>
            Holds the default ApplicationContext to be used during DI.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.SessionModelPersistenceMedium">
            <summary>
            <see cref="T:Spring.Web.UI.SessionModelPersistenceMedium"/> implements <see cref="T:System.Web.SessionState.HttpSessionState"/>-based storage for 
            UI model management.
            </summary>
            <author>Erich Eichinger</author>
        </member>
        <member name="M:Spring.Web.UI.SessionModelPersistenceMedium.LoadFromMedium(System.Web.UI.Control)">
            <summary>
            Load the model for the specified control context.
            </summary>
            <remarks>
            The key used for loading the model from the session dictionary is obtained by calling <see cref="M:Spring.Web.UI.SessionModelPersistenceMedium.GetKey(System.Web.UI.Control)"/>
            </remarks>
            <param name="context">the control context.</param>
            <returns>the model for the specified control context.</returns>
            <seealso cref="M:Spring.Web.UI.SessionModelPersistenceMedium.GetKey(System.Web.UI.Control)"/>
        </member>
        <member name="M:Spring.Web.UI.SessionModelPersistenceMedium.SaveToMedium(System.Web.UI.Control,System.Object)">
            <summary>
            Save the specified model object to session.
            </summary>
            <remarks>
            The key used for storing the model into the session dictionary is obtained by calling <see cref="M:Spring.Web.UI.SessionModelPersistenceMedium.GetKey(System.Web.UI.Control)"/>
            </remarks>
            <param name="context">the control context.</param>
            <param name="modelToSave">the model to save.</param>
            <seealso cref="M:Spring.Web.UI.SessionModelPersistenceMedium.GetKey(System.Web.UI.Control)"/>
        </member>
        <member name="M:Spring.Web.UI.SessionModelPersistenceMedium.GetKey(System.Web.UI.Control)">
            <summary>
            Create the key to be used for accessing the <see cref="T:System.Web.SessionState.HttpSessionState"/> dictionary.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Spring.Web.UI.SessionModelPersistenceMedium.GetItem(System.Web.UI.Control,System.String)">
            <summary>
            Abstracts session access for unit testing.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.SessionModelPersistenceMedium.SetItem(System.Web.UI.Control,System.String,System.Object)">
            <summary>
            Abstracts session access for unit testing.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.UserControl">
            <summary>
            Extends standard .Net user control by adding data binding and localization functionality.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Web.UI.UserControl.#ctor">
            <summary>
            Initialize a new UserControl instance.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnInit(System.EventArgs)">
            <summary>
            Initializes user control.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnPreLoadViewState(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Spring.Web.UI.UserControl.PreLoadViewState"/> event after page initialization.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            This method is called during a postback if this control has been visible when being rendered to the client.
            </summary>
            <remarks>
            If the controls has been visible when being rendering to the client, <see cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)"/>
            has been called during <see cref="M:Spring.Web.UI.UserControl.OnPreRender(System.EventArgs)"/>
            </remarks>
            <returns>true if the server control's state changes as a result of the post back; otherwise false.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            This method is called during a postback if this control has been visible when being rendered to the client.
            </summary>
            <returns>true if the server control's state changes as a result of the post back; otherwise false.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control object to notify the
            ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control object to notify the
            ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnLoad(System.EventArgs)">
            <summary>
            First unbinds data from the controls into a data model and
            then raises Load event in order to execute all associated handlers.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnPreRender(System.EventArgs)">
            <summary>
            Binds data from the data model into controls and raises
            PreRender event afterwards.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnInitializeControls(System.EventArgs)">
            <summary>
            Raises InitializeControls event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.LoadControl(System.String)">
            <summary>
            Obtains a <see cref="T:System.Web.UI.UserControl"/> object from a user control file
            and injects dependencies according to Spring config file.
            </summary>
            <param name="virtualPath">The virtual path to a user control file.</param>
            <returns>
            Returns the specified <see langword="UserControl"/> object, with dependencies injected.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.LoadControl(System.Type,System.Object[])">
            <summary>
            Obtains a <see cref="T:System.Web.UI.UserControl"/> object by type
            and injects dependencies according to Spring config file.
            </summary>
            <param name="t">The type of a user control.</param>
            <param name="parameters">parameters to pass to the control</param>
            <returns>
            Returns the specified <see langword="UserControl"/> object, with dependencies injected.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.LoadModelFromPersistenceMedium">
            <summary>
            Retrieves data model from a persistence store.
            </summary>
            <remarks>
            The default implementation uses <see cref="P:System.Web.UI.Page.Session"/> to store and retrieve
            the model for the current <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath"/>
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.UserControl.SaveModelToPersistenceMedium(System.Object)">
            <summary>
            Saves data model to a persistence store.
            </summary>
            <remarks>
            The default implementation uses <see cref="P:System.Web.UI.Page.Session"/> to store and retrieve
            the model for the current <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath"/>
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.UserControl.InitializeModel">
            <summary>
            Initializes data model when the page is first loaded.
            </summary>
            <remarks>
            This method should be overriden by the developer
            in order to initialize data model for the page.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.UserControl.LoadModel(System.Object)">
            <summary>
            Loads the saved data model on postback.
            </summary>
            <remarks>
            This method should be overriden by the developer
            in order to load data model for the page.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.UserControl.SaveModel">
            <summary>
            Returns a model object that should be saved.
            </summary>
            <remarks>
            This method should be overriden by the developer
            in order to save data model for the page.
            </remarks>
            <returns>
            A model object that should be saved.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.SetController(System.Object)">
            <summary>
            <para>Stores the controller to be returned by <see cref="P:Spring.Web.UI.UserControl.Controller"/> property.</para>
            </summary>
            <remarks>
            The default implementation uses a field to store the reference. Derived classes may override this behaviour
            but must ensure to also change the behaviour of <see cref="M:Spring.Web.UI.UserControl.GetController"/> accordingly.
            </remarks>
            <param name="controller">Controller for the control.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetController">
            <summary>
            <para>Returns the controller stored by <see cref="M:Spring.Web.UI.UserControl.SetController(System.Object)"/>.</para>
            </summary>
            <remarks>
            <para>
            The default implementation uses a field to retrieve the reference.
            </para>
            <para>
            If external controller is not specified, control will serve as its own controller,
            which will allow data binding to work properly.
            </para>
            <para>
            You may override this method e.g. to return <see cref="P:Spring.Web.UI.Page.Controller"/> in order to
            have your control bind to the same controller as your page. When overriding this behaviour, derived classes
            must ensure to also change the behaviour of <see cref="M:Spring.Web.UI.UserControl.SetController(System.Object)"/> accordingly.
            </para>
            </remarks>
            <returns>
            <para>The controller for this control.</para>
            <para>If no controller is set, a reference to the control itself is returned.</para>
            </returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.InitializeNavigationSupport">
            <summary>
            Ensure, that <see cref="P:Spring.Web.UI.UserControl.WebNavigator"/> is set to a valid instance.
            </summary>
            <remarks>
            If <see cref="P:Spring.Web.UI.UserControl.WebNavigator"/> is not already set, creates and sets a new <see cref="T:Spring.Web.Support.WebFormsResultWebNavigator"/> instance.<br/>
            Override this method if you don't want to inject a navigator, but need a different default.
            </remarks>
        </member>
        <member name="M:Spring.Web.UI.UserControl.SetResult(System.String)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="resultName">Result name.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.SetResult(System.String,System.Object)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="resultName">Name of the result.</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetResultUrl(System.String)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result evaluated using this Page for expression 
            </summary>
            <param name="resultName">Name of the result.</param>
            <returns>A redirect url string.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetResultUrl(System.String,System.Object)">
            <summary>
            Returns a redirect url string that points to the 
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result evaluated using this Page for expression 
            </summary>
            <param name="resultName">Name of the result.</param>
            <param name="context">The context to use for evaluating the SpEL expression in the Result</param>
            <returns>A redirect url string.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.Validate(System.Object,Spring.Validation.IValidator[])">
            <summary>
            Evaluates specified validators and returns <c>True</c> if all of them are valid.
            </summary>
            <remarks>
            <p>
            Each validator can itself represent a collection of other validators if it is
            an instance of <see cref="T:Spring.Validation.ValidatorGroup"/> or one of its derived types.
            </p>
            <p>
            Please see the Validation Framework section in the documentation for more info.
            </p>
            </remarks>
            <param name="validationContext">Object to validate.</param>
            <param name="validators">Validators to evaluate.</param>
            <returns>
            <c>True</c> if all of the specified validators are valid, <c>False</c> otherwise.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.CreateValidatorParameters">
            <summary>
            Creates the validator parameters.
            </summary>
            <remarks>
            <para>
            This method can be overriden if you want to pass additional parameters
            to the validation framework, but you should make sure that you call
            this base implementation in order to add page, session, application,
            request, response and context to the variables collection.
            </para>
            </remarks>
            <returns>
            Dictionary containing parameters that should be passed to
            the data validation framework.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.InitializeDataBindings">
            <summary>
            Initializes the data bindings.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetBindingManagerKey">
            <summary>
            Returns the key to be used for looking up a cached
            BindingManager instance in <see cref="P:Spring.Web.UI.UserControl.SharedState"/>.
            </summary>
            <returns>a unique key identifying the <see cref="T:Spring.DataBinding.IBindingContainer"/> instance in the <see cref="P:Spring.Web.UI.UserControl.SharedState"/> dictionary.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.CreateBindingManager">
             <summary>
             Creates a new <see cref="T:Spring.DataBinding.IBindingContainer"/> instance.
             </summary>
             <remarks>
             This factory method is called if no <see cref="T:Spring.DataBinding.IBindingContainer"/> could be found in <see cref="P:Spring.Web.UI.UserControl.SharedState"/>
             using the key returned by <see cref="M:Spring.Web.UI.UserControl.GetBindingManagerKey"/>.<br/>
             <br/>
            
             </remarks>
             <returns>a <see cref="T:Spring.DataBinding.IBindingContainer"/> instance to be used for DataBinding</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.InitializeBindingManager">
            <summary>
            Initializes binding manager and data bindings if necessary.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnDataBindingsInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Spring.Web.UI.UserControl.DataBindingsInitialized"/> event.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.BindFormData">
            <summary>
            Bind data from model to form.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.UnbindFormData">
            <summary>
            Unbind data from form to model.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnDataBound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnDataUnbound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.InitializeMessageSource">
            <summary>
            Initializes local message source
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetLocalResourceManager">
            <summary>
            Creates and returns local ResourceManager for this page.
            </summary>
            <remarks>
            <para>
            In ASP.NET 1.1, this method loads local resources from the web application assembly.
            </para>
            <para>
            However, in ASP.NET 2.0, local resources are compiled into the dynamic assembly,
            so we need to find that assembly instead and load the resources from it.
            </para>
            </remarks>
            <returns>Local ResourceManager instance.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetMessage(System.String)">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetMessage(System.String,System.Object[])">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <param name="args">Message arguments that will be used to format return value.</param>
            <returns>Formatted message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetResourceObject(System.String)">
            <summary>
            Returns resource object for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Resource object.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.CreateSharedStateKey(System.String)">
            <summary>
            Creates a key for shared state, taking into account whether
            this page belongs to a process or not.
            </summary>
            <param name="key">Key suffix</param>
            <returns>Generated unique shared state key.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.AddedControl(System.Web.UI.Control,System.Int32)">
            <summary>
            Injects dependencies into control before adding it.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.UserControl.PreLoadViewState">
            <summary>
            PreLoadViewState event.
            </summary>
            <remarks>
            <para>
            This event is raised if <see cref="P:System.Web.UI.Page.IsPostBack"/> is true
            immediately before state is restored from ViewState.
            </para>
            <para>
            NOTE: Different from <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)"/>, this event will always be raised!
            </para>
            </remarks>
        </member>
        <member name="E:Spring.Web.UI.UserControl.InitializeControls">
            <summary>
            This event is raised before Load event and should be used to initialize
            controls as necessary.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.ModelPersistenceMedium">
            <summary>
            Set the <see cref="T:Spring.Web.UI.IModelPersistenceMedium"/> strategy for storing model 
            instances between requests.
            </summary>
            <remarks>
            By default the <see cref="T:Spring.Web.UI.SessionModelPersistenceMedium"/> strategy is used.
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Controller">
            <summary>
            Gets or sets controller for the control.
            </summary>
            <remarks>
            <para>
            Internally calls are delegated to <see cref="M:Spring.Web.UI.UserControl.GetController"/> and <see cref="M:Spring.Web.UI.UserControl.SetController(System.Object)"/>.
            </para>
            </remarks>
            <value>Controller for the control.</value>
        </member>
        <member name="P:Spring.Web.UI.UserControl.SharedState">
            <summary>
            Returns a thread-safe dictionary that contains state that is shared by
            all instances of this control.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.WebNavigator">
            <summary>
            Gets/Sets the navigator to be used for handling <see cref="M:Spring.Web.UI.UserControl.SetResult(System.String,System.Object)"/> calls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Results">
            <summary>
            Gets or sets map of result names to target URLs
            </summary>
            <remarks>
            Using <see cref="P:Spring.Web.UI.UserControl.Results"/> requires <see cref="P:Spring.Web.UI.UserControl.WebNavigator"/> to implement <see cref="T:Spring.Web.Support.IResultWebNavigator"/>.
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Args">
            <summary>
            A convenience, case-insensitive table that may be used to e.g. pass data into SpEL expressions"/&gt;.
            </summary>
            <remarks>
            By default, e.g. <see cref="M:Spring.Web.UI.UserControl.SetResult(System.String)"/> passes the control instance into an expression. Using
            <see cref="P:Spring.Web.UI.UserControl.Args"/> is an easy way to pass additional parameters into the expression
            <example>
            // config:
            
            &lt;property Name="Results"&gt;
              &lt;dictionary&gt;
              		&lt;entry key="ok_clicked" value="redirect:~/ShowResult.aspx?result=%{Args['result']}" /&gt;
              &lt;/dictionary&gt;
            &lt;/property&gt;
            
            // code:
            
            void OnOkClicked(object sender, EventArgs e)
            {
              Args["result"] = txtUserInput.Text;
              SetResult("ok_clicked");
            }
            </example>
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.UserControl.ValidationErrors">
            <summary>
            Gets or sets the validation errors container.
            </summary>
            <value>The validation errors container.</value>
        </member>
        <member name="P:Spring.Web.UI.UserControl.BindingManager">
            <summary>
            Gets the binding manager for this control.
            </summary>
            <value>The binding manager.</value>
        </member>
        <member name="E:Spring.Web.UI.UserControl.DataBindingsInitialized">
            <summary>
            This event is raised after <see cref="P:Spring.Web.UI.UserControl.BindingManager"/> as been initialized.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.UserControl.DataBound">
            <summary>
            This event is raised after all controls have been populated with values
            from the data model.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.UserControl.DataUnbound">
            <summary>
            This event is raised after data model has been populated with values from
            web controls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.ApplicationContext">
            <summary>
            Gets or sets the <see cref="T:Spring.Context.IApplicationContext"/> that this
            object runs in.
            </summary>
            <value></value>
            <remarks>
            <p>
            Normally this call will be used to initialize the object.
            </p>
            <p>
            Invoked after population of normal object properties but before an
            init callback such as
            <see cref="T:Spring.Objects.Factory.IInitializingObject"/>'s
            <see cref="M:Spring.Objects.Factory.IInitializingObject.AfterPropertiesSet"/>
            or a custom init-method. Invoked after the setting of any
            <see cref="T:Spring.Context.IResourceLoaderAware"/>'s
            <see cref="P:Spring.Context.IResourceLoaderAware.ResourceLoader"/>
            property.
            </p>
            </remarks>
            <exception cref="T:Spring.Context.ApplicationContextException">
            In the case of application context initialization errors.
            </exception>
            <exception cref="T:Spring.Objects.ObjectsException">
            If thrown by any application context methods.
            </exception>
            <exception cref="T:Spring.Objects.Factory.ObjectInitializationException"/>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Localizer">
            <summary>
            Gets or sets the localizer.
            </summary>
            <value>The localizer.</value>
        </member>
        <member name="P:Spring.Web.UI.UserControl.MessageSource">
            <summary>
            Gets or sets the local message source.
            </summary>
            <value>The local message source.</value>
        </member>
        <member name="P:Spring.Web.UI.UserControl.UserCulture">
            <summary>
            Gets or sets user's culture
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Page">
            <summary>
            Overrides Page property to return <see cref="T:Spring.Web.UI.Page"/>
            instead of <see cref="T:System.Web.UI.Page"/>.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Context">
            <summary>
             Publish <see cref="T:System.Web.HttpContext"/> associated with this page for convenient usage in Binding Expressions
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Spring#Web#Support#ISupportsWebDependencyInjection#DefaultApplicationContext">
            <summary>
            Holds the default ApplicationContext to be used during DI.
            </summary>
        </member>
    </members>
</doc>
