 @{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>GetUserInfo</title>
    <link href="~/Scripts/EasyUI/themes/icon.css" rel="stylesheet" />
    <link href="~/Scripts/EasyUI/themes/black/easyui.css" rel="stylesheet" />
    <link href="~/Scripts/EasyUI/themes/color.css" rel="stylesheet" />
    @Scripts.Render("~/Scripts/myJquery")
    @*@Scripts.Render("~/Scripts/easyUIJS")*@
    @*<script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>*@
    <script src="~/Scripts/EasyUI/jquery.easyui.min.js"></script>
    <script src="~/Scripts/EasyUI/locale/easyui-lang-zh_CN.js"></script>
    <script src="~/Scripts/MyScripts/jquery.msgProcess.js"></script>
    <link href="~/Scripts/MyCSS/MyIcon.css" rel="stylesheet" />
    <script src="~/Scripts/MyScripts/Common/my_FormatDate.js"></script>
    <script src="~/Scripts/MyScripts/Common/Overload_ToLocaleDateString.js"></script>
    <script src="~/Scripts/MyScripts/Common/ValidateExtend.js"></script>
    <script src="~/Scripts/MyScripts/Common/Submit.js"></script>
    <script src="~/Scripts/MyScripts/EasyUI/my_ShowMessager.js"></script>
    @Html.Partial("_Partial_BtnAction")
    @Html.Partial("_Partial_SonWindow")

    <script type="text/javascript">
        var queryModel = {UName:"",Remark:""};
        var myColumns = [[
                    { field: 'ID', title: 'ID', width: '5%', hidden: true },
                    { field: 'UName', title: '@Resources.Language.UserName', width: '20%' },
                    //{ field: 'UPwd', title: '密码', width: 250 },
                    {
                        field: 'SubTime', title: '@Resources.Language.CreateTime', width: '15%', formatter: function (value) {
                            return Date.getStrOfDate(value);
                        }
                    },
                    {
                        field: 'ModifiedOnTime', title: '@Resources.Language.ModifiedTime', width: '15%', formatter: function (value) {
                            return Date.getStrOfDate(value);
                        }
                    },
                    { field: 'Remark', title: '@Resources.Language.Remarks', width: '30%' },
                    { field: 'Sort', title: '@Resources.Language.Order', width: '10%' },
        ]]

        var toolbar = [{
            iconCls: 'icon-add',
            text: "@Resources.Language.New",
            handler: addRow
        }, '-', {
            iconCls: 'icon-remove',
            text: "@Resources.Language.Delete",
            handler: removeRow
        }, '-', {
            iconCls: 'icon-edit',
            text: "@Resources.Language.Edit",
            handler: editRow
        }, '-', {
            iconCls: 'icon-search',
            text: "@Resources.Language.UsersRightsSettings",
            handler: AssignAction
        }, "-", {
            iconCls: 'icon-search',
            text: "@Resources.Language.UsersRoleSetting",
            handler: AssignRole
        },"-", {
            iconCls: 'icon-key-16',
             text: "@Resources.Language.ResetPassword",
             handler: ResetPassword
         }]

        //是否禁用
        var IsPassColumns = [
            {
                "IsPass": false,
                "Text": "@Resources.Language.Disable",
            }, {
                "IsPass": true,
                "Text": "@Resources.Language.Enable",
            }
        ];


        //角色
        var RoleColumns = [[
            { field: 'ck', checkbox: true },
            { field: 'RoleName', title: '@Resources.Language.RoleName', width: 100 },
            { field: 'SubTime', title: '@Resources.Language.CreateTime', width: 150 },
            { field: 'ModifiedTime',title:'@Resources.Language.ModifiedTime', width:150},
            { field: 'Remark', title: '@Resources.Language.Remarks', width: 100},
            { field: 'Sort',title:'@Resources.Language.Order',width:50},
        ]]

        //权限(包括是否禁用)
        var ActionColumns = [[
            { field: 'ck', checkbox: true },
            { field: 'ActionName', title: '@Resources.Language.RightName', width: 100 },
            { field: 'SubTime', title: '@Resources.Language.CreateTime', width: 100 },
            { field: 'ModifiedTime', title: '@Resources.Language.ModifiedTime', width: 100 },
            { field: 'byRole',title:'@Resources.Language.WhetherGivenByRoles',width:50},
        {
            field: 'IsPass', title: '@Resources.Language.EnableDisable', width: 50,
                formatter: function (value, row) {
                    return row.Text;
                },
                editor: {
                    type: 'combobox',
                    options: {
                        valueField: 'IsPass',
                        textField: 'Text',
                        panelHeight: 'auto',
                        data: IsPassColumns,
                        required: true,
                        editable: false
                    }
                }
            },
        ]]

        function loadDatagrid_Role(UserId, myRoleColumns) {
            $("#role").datagrid({
                url: '@ViewBag.ShowAssignRoleInfo?id= ' + UserId,
                panelWidth: 400,
                multiple: true,
                method: 'get',
                panelHeight: 'auto',
                loadMsg: '@Resources.Language.Loading',
                columns: myRoleColumns,
                fitColumns: true,
                onLoadSuccess: function (data) {
                    if (data) {
                        //返回的data中checkbox列中包含true or false 就是用来设定 Checkbox 是否勾选，而设定的动作必须要在 DataGrid 加载数据完成后再去执行，这边会使用到 jQuery 的 each 去逐一检查每个数据列的的数据内容，假如 checked 为 true，那就使用datagrid.('checkRow')这个 Method 将该数据列的 Checkbox 设为勾选的状态，
                        $.each(data.rows, function (index, item) {
                            if (item.checked) {

                                $('#role').datagrid('checkRow', index);

                            }
                        })
                    }
                }
            })
        }


        function loadDatagrid_Action(UserId, myActionColumns) {
            var editRow = undefined;
            $("#action").datagrid({
                url: '@ViewBag.ShowAssignActionInfo?id= ' + UserId,
                panelWidth: 400,
                multiple: true,
                method: 'get',
                panelHeight: 'auto',
                loadMsg: '@Resources.Language.Loading',
                columns: myActionColumns,
                fitColumns: true,
                onBeforeEdit: function (index, row) {
                    row.editing = true;
                    $("#action").datagrid('refreshRow', index);
                },
                onAfterEdit: function (index, row) {
                    row.editing = false;
                },
                onEndEdit: function (index, row) {
                    var ed = $('#action').datagrid('getEditor', { index: index, field: 'IsPass' });
                    row.IsPass = $(ed.target).combobox('getText');
                },
                onSelect: function (index,row) {
                    $('#action').datagrid('beginEdit', index);
                },
                onUnselect: function (index, row) {
                    if (row.byRole == true) {
                        $('#action').datagrid('checkRow', index);
                        $.messager.alert('@Resources.Language.Prompt', "@Resources.Language.ThisrightisgivenbyrolesandcannotbeuncheckedYoucantrytoclickDisableoreditingtheroleinassignrolesbutton");
                        row.checked = true;
                    } else {

                        row.checked = false;
                        row.Text = "@Resources.Language.PleaseSelect";
                        $('#action').datagrid('cancelEdit', index);
                    }
                },
                onUncheck: function (index,row) {
                    if (row.byRole == true) {
                        row.checked = true;
                        $('#action').datagrid('refreshRow', index);
                    }
                },


                onLoadSuccess: function (data) {
                    if (data) {
                        //返回的data中checkbox列中包含true or false 就是用来设定 Checkbox 是否勾选，而设定的动作必须要在 DataGrid 加载数据完成后再去执行，这边会使用到 jQuery 的 each 去逐一检查每个数据列的的数据内容，假如 checked 为 true，那就使用datagrid.('checkRow')这个 Method 将该数据列的 Checkbox 设为勾选的状态，
                        $.each(data.rows, function (index, item) {
                            if (item.checked) { $('#action').datagrid('checkRow', index); }
                        })
                    }

                    //设置某些框不可选
                }
            })
        }



        var UserId = "";





        function getRoleSelection() {
            //获取所选的角色
            var rows = $("#role").datagrid("getChecked");
            var strIds = "";
            for (var i = 0; i < rows.length; i++) {
                strIds = strIds + rows[i].RID + ",";
            }
            //去掉最后一个逗号
            strIds = strIds.substr(0, strIds.length - 1);

            if ($.messager.confirm("@Resources.Language.Prompt", "@Resources.Language.Readytocommit", function (r) {
                    if (r) {
                   $.post("@ViewBag.DoAssignRoleInfo?UserId=" + UserId + "&&ids=" + strIds, function (data) {
                //请求成功后的回调函数
                //执行afterEdit
                afterEdit("@Resources.Language.ModifySuccess");
                 $("#showRoleWindow").window('close');
                         });
                        }
            }));
        }

        function getActionSelection() {
            //获取所选的角色
            var rows = $("#action").datagrid("getChecked");
            //保存Editor的编辑结果
            $('#action').datagrid('acceptChanges');
            var strIds = "";
            var isPassSubmit = "";
            for (var i = 0; i < rows.length; i++) {
                if (!rows[i].byRole)
                {
                    isPassSubmit = isPassSubmit + rows[i].IsPass + ",";
                    strIds = strIds + rows[i].AID + ",";
                }
            }
            //去掉最后一个逗号
            isPassSubmit = isPassSubmit.substr(0, isPassSubmit.length - 1);
            strIds = strIds.substr(0, strIds.length - 1);

            var result = confirm_center({
                'UserId': UserId,
                'ActionID': strIds,
                'A_isPasses': isPassSubmit,
            });

            $("#showActionWindow").window("close");
        }
        //使用此种方式消息框还未显示页面就已经刷新了
        function messagerShowOnCenter(title, msg) {
            $.messager.show({
                title: title,
                msg: msg,
                showType: 'show',
                style: {
                    right: '',
                    bottom: ''
                }

            });
        }

        //提交
        function confirm_center(obj) {
            $.messager.confirm('@Resources.Language.Pleaseconfirm', '@Resources.Language.Doyouwanttodothis'+'?', function (r) {
                if (r) {
                    //alert("执行提交操作");
                    $.ajax({
                        type: "POST",
                        url: "@ViewBag.DoAssignActionInfo",
                        //dataType: "json",//注意若使用ajax提交时若调用回调函数时，若指定数据类型为json需严格遵守格式规定
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(obj),
                        success: function (data) {
                            //alert("修改成功");

                            if (data == "ok") {
                                //使用此种方式会出现还未等到消息框弹出页面就刷新的问题
                                //messagerShowOnCenter("提示", "修改成功");
                                $.messager.alert("@Resources.Language.Prompt", "@Resources.Language.Success", "info", function () { window.close(); refresh(); });
                                //refresh();
                            }
                            else {
                                $.messager.alert("@Resources.Language.Prompt", "@Resources.Language.Failed", "warning", function () { window.close(); refresh(); });
                                //refresh();
                            }
                        },
                        error: function () {

                            $.messager.alert("@Resources.Language.Error", "@Resources.Language.ServerError", "error", function () { window.close(); refresh(); });
                            //refresh();
                        }
                    });
                }
                return;
            });
        }
        //后续优化：将AssignRole和AssignAction的前台代码合并一下

        //提交
        function submitForm() {
            //$("#editWindow").submit()
        }

        var options = {
            url: 'xxxx.action',
            type: 'post',
            data: null,
            success: function (data) {
                if (data.statusCode == "OK") {


                } else {

                }
            }
        };

        function submitForm() {
            $.ajax({
                type: "post",
                url: "/Admin/User/Create",      // 这里是提交到什么地方的url
                data: $("#ff").serialize(), // 这里把表单里面的数据提交（！！！注意需要将表单序列化！！！）
                dataType: "json",
                success: function (res) {
                    // 调用回调函数
                    show("res");
                }
            });
        }
        //
        function show(data) {
            $.messager.show({
                title: 'data',
                msg: 'Message will be closed after 4 seconds.',
                showType: 'show'
            });
        }
        //根据条件查询
        function searchBy(obj){
                        //获取到输入的查询群组的text框中的值
            var match_userName = $("#queryByUserName").val();
            var match_remark = $("#queryByRemark").val();
             var queryData={
                 UName: match_userName,
                 Remark: match_remark
            };

             loadDataGrid('@ViewBag.GetUserInfo', myColumns, queryData);
           }


        function provideAction() {

        }
        function CancelSend() {
            $("#editWindow").window('close');
        }
        //编辑或创建某个权限后执行的操作

        function afterEdit(msg,type) {
            //editWindow
            //1 关闭加载的iframe页面
           // $.messager.alart('', 'aaaa');
			//此处可改为根据枚举动态生成type的值
            if (type == 0) {

                $("#editWindow").window('close');
                //2 刷新当前页面
                $("#datagrid").datagrid('reload');
            } else if (type == 2) {
               // alart("进来了");
                // $("#editWindow").window('refresh');
                editRow();
            }
            $.messager.alert('@Resources.Language.Prompt', msg);
        }

        function CancelRoleAssign() {
            $("#showRoleWindow").window("close");
        }
        function CancelActionAssign() {
            $("#showActionWindow").window("close");
        }
        //加载用户列表
        function loadDataGrid(url, myColumns,queryModel) {

            //2 位datagrid加载数据
            $("#datagrid").datagrid({
                width: 'auto',
                height: 'auto',
                fitColumns: true,
                striped: true,
                singleSelect: true,
                url: url,
                loadMsg: '@Resources.Language.Loading',
                pagination: true,//启用分页，默认每页10行
                rownumbers: true,//显示页码，默认 提供 10 - 50 的页容量选择下拉框
                pageSize: 10,   //设置 页容量为 5
                nowrap: false,
                pageList: [5, 10, 20],//设置 页容量下拉框
                columns: myColumns,
                toolbar: '#tb',
                queryParams: queryModel
            });
        }

        $(function () {
            //1 编辑窗口关闭
            $("#editWindow").window('close');
            $("#addWindow").window('close');
            $("#showRoleWindow").window('close');
            $("#showActionWindow").window('close');
            $("#showResetPwdWindow").window('close');
            loadDataGrid('@ViewBag.GetUserInfo', myColumns, queryModel);
        })
    </script>
</head>
<body>
    <div>
        <table class="easyui-datagrid" id="datagrid"></table>

        @Html.Partial("_Partial_Toolbar_User");

        <div class="easyui-window" title="title" scrolling="no" id="editWindow" style="width:400px;height:440px;overflow: hidden" data-options="shadow:true,modal:true">
            <iframe id="setUserRoleFrame" frameborder="0" width="100%" height="100%" scrolling="no" scroll="no" @*不显示滚动条*@></iframe>
        </div>
   </div>
   
</body>
</html>
