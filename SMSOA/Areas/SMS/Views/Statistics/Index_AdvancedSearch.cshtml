
@{
    ViewBag.Title = "Index_AdvancedSearch";
    Layout = "~/Areas/SMS/Views/Shared/_Layout_AdvSearch.cshtml";
}

@section SectionJS{
    <script type="text/javascript">
        $(function () {
            $("#editWindow").window('close');
            loadDataGrid('@ViewBag.GetPageStatisticList', myColumns);
            loadComboGrid_User();
            loadComboGrid_Mission();
            loadComboGrid_MessageType();
            loadDataGrid_person('', myColumns_person);
            var now_date = new Date();
            now_date = now_date.toLocaleDateString();
            onLinkClickBind();          

        })

        //暂时不用了
        function dateAdd(date, num) {
            var source_date = new Date(date);
            source_date = source_date.valueOf();
            source_date = source_date + num * 24 * 60 * 60 * 1000;
            var target_date = new Date(source_date);
            return target_date.toLocaleDateString();

        }

        function dateFormat(date) {


            var beginDate;
            var now = new Date(date);
            var month = now.getMonth;
            now.setMonth()
            return now;
        }

        //由onLinkClickBind方法替代
        function getTargetDate(obj) {
            //var temp = obj;
            var parent = $(this).parent(".menu-content");
            //var ww = $("#calendar_today").datebox('getValue');
            //测试 使用如下方式可以去到日历中的时间
            $("#ok").parent(".menu-content").children(".calendar").calendar('options')['year']

            var year = $("#calendar_today").calendar('options')['year'];
            //var month=$
            alert(ww1);
            //var date = parent.children(".easyui-calendar").calendar().datebox('getValue');
            //temp.parent();
        }

        Date.getDayOfMonth = function (y, Mm) {
            ///	<summary>
            ///	计算当前月一共多少天
            ///
            ///	</summary>
            ///	<returns type="Number" />
            ///	<param name="y" type="Number">
            ///		年,若为空则为当前时间
            ///	</param>
            ///	<param name="Mm" type="Number">
            ///		月,0开始,若为空则为当前时间
            ///	</param>
            if (typeof y == 'undefined') { y = (new Date()).getFullYear(); }
            if (typeof Mm == 'undefined') { Mm = (new Date()).getMonth(); }
            var Feb = (y % 4 == 0) ? 29 : 28;
            var aM = new Array(31, Feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
            return aM[Mm];
        };


        Date.getDateOfPreMonth = function (dt) {
            ///	<summary>
            ///	返回上一月的日期
            ///
            ///	</summary>
            ///	<returns type="Date" />
            ///	<param name="dt" type="Date">
            ///		参照日期，若为空则为当前时间
            ///	</param>

            var now = new Date(dt);
            if (typeof dt == 'undefined') { dt = (new Date()); }
            var y = (now.getMonth() == 0) ? (now.getFullYear() - 1) : now.getFullYear();
            var m = (now.getMonth() == 0) ? 11 : now.getMonth() - 1;
            var preM = Date.getDayOfMonth(y, m);
            Date.get
            var d = (preM < now.getDate()) ? preM : now.getDate();
            return new Date(y, m, d).toLocaleDateString();
        };

        function searchPerson(obj) {
            //获取联系人姓名
            var personName = $("#personName").val();

            //获取要匹配的电话号码
            var phoneNum = $("#personPhoneNum").val();

            var cid = $("#cid").val();
            var queryData = {
                PersonName: personName,
                PhoneNum: phoneNum,
                cid: cid
            }

            loadDataGrid_person('@ViewBag.LoadSearchRecordData', myColumns_person, queryData);
        }

        //点击搜索按钮执行的方法
        function searchBy(obj) {
            //获取短信任务种类
            var grid_user = $("#smsUserInfo_combogrid").combogrid("grid");
            var grid_mission = $("#smsMission_combogrid").combogrid("grid");
            var grid_type = $("#MessageType_combogrid").combogrid("grid");
            var type_checkeds = grid_type.datagrid("getChecked");
            var mission_checkeds = grid_mission.datagrid("getChecked");
            var user_checkeds = grid_user.datagrid("getChecked");

            //处理Type:如果短信彩信均被选中，视为未选择（展示所有短信）
            var type_ids = new Array();
            if (type_checkeds[0] != null) {
                for (var i = 0; i < type_checkeds.length; i++) {
                    if (0 == type_checkeds[i]["TypeID"]) {
                        type_ids[i] = false;
                    } else {
                        type_ids[i] = true;
                    }
                }
            }

            var mission_id;
            var mission_ids = new Array();
            var user_id = user_checkeds[0]["id"];
            if (mission_checkeds[0] == null) {
                mission_id = -1;
            }
            else {
                var count = mission_checkeds.length;
                for (var i = 0; i < count; i++) {
                    mission_ids[i] = mission_checkeds[i]["SMID"];
                }
                mission_id = mission_checkeds[0]["SMID"];
            }

            
            //获取时间
            var dt_target = $("#date_target").val();
            var dt_start = $("#date_start").val();
            var dt_finish = $("#date_finish").val();
            //alert("要搜索的联系人为：" + personName + "||要匹配的电话为：" + phoneNum + "||获取的短信任务为" + mission_id + "||目标时间为：" + dt_target + "|" + "起始时间为：" + dt_start + "|" + "终止时间为：" + dt_finish);

            //提交至某url
            var queryData = {
                //PersonName: personName,
                //PhoneNum: phoneNum,
                Mission_id: mission_id,
                MissionUser_id: user_id,
                Mission_ids:mission_ids,
                Dt_target: dt_target,
                Dt_start: dt_start,
                Dt_finish: dt_finish,
                Type : type_ids
            }

            loadDataGrid('@ViewBag.LoadSearchData', myColumns, queryData);
            @*DoPost('@ViewBag.LoadSearchData', queryData);*@
        }

        function DoPost(url, model) {
            ///	<summary>
            ///	通过ajax方式执行post提交操作
            ///	</summary>
            ///	<param name="url" type="Date">
            ///		提交至的url
            ///	</param>
            ///	<param name="model" type="object">
            ///		提交的实体对象
            ///	</param>
            //提交
            $.ajax({
                url: url,
                data: JSON.stringify(model),
                contentType: 'application/json;charset=utf-8',//注意此处必须注明为json格式，否则后台控制器无法通过Model的方式接收
                async: false,
                type: 'POST',
                //success: save_success,
                //error: save_error
            })
        }


        function afterPost(data) {

            //$.messager.alert('提醒', '提交成功!');
            //——经测试提交表单成功后可以执行OnSucess的回调函数
            //提交表单成功后关闭本页面
            //无法关闭此窗口
            //window.close();
            if (data == "ok") {
                window.parent.afterEdit("修改成功");
            }
            else {
                window.parent.afterEdit("修改失败");
            }
            //此处也可以调用window.parent.xxx——当前页面的父级页面中的xxx方法
        }

        function save_success(data) {
            //alert("修改成功");

            if (data == "ok") {
                //使用此种方式会出现还未等到消息框弹出页面就刷新的问题
                //messagerShowOnCenter("提示", "修改成功");
                //$.messager.alert("提示", "操作成功", "info", function () { window.close(); refresh(); });
                afterPost(data);
                //refresh();
            }
            else {
                //$.messager.alert("提示", "操作失败", "warning", function () { window.close(); refresh(); });
                afterPost(data);
                //refresh();
            }
        }

        function save_error(data) {
            //$.messager.alert("错误", "服务器错误", "error", function () { window.close(); refresh(); });
            afterPost(data);
            //refresh();
        }


        function onLinkClickBind() {
            ///	<summary>
            ///	为linkbutton绑定点击事件——获取每个日历中选中的日期
            ///	</summary>

            $(".easyui-linkbutton").each(function () {
                //1 为每一个linkbutton的点击事件赋予一个方法
                $(this).click(function () {
                    //alert("被点击了");
                    //1.1 找到父级元素
                    //注意此处的parent为div id=mm4 的这个div
                    var parent = $(this).parent(".menu-content");
                    //1.2 获取calenars（注意：此处若calenars为0时，说明是点击的有两个日历的按钮）
                    var calenars = parent.children(".calendar");
                    //判断该calendar是否为一个
                    if (calenars.length == 0) {
                        //alert("未获取到子节点");
                        //var parent_parent = $(this).parent().parent();
                        //1.3 注意此处需要使用find而不是children（find：当前元素集合中每个元素的后代）
                        calenars = $(this).parent().parent().parent().find(".calendar")
                        if (calenars.length > 1) {
                            //遍历获取每个日历中的日期
                            calenars.each(function (temp) {
                                //1.4 对于日历calendar可以使用.calendar('options')['current']获取当前时间，也可以通过.calendar('options')['year']获取年（month可以获取月，但没有day）
                                var date = $(this).calendar('options')['current'].toLocaleDateString();
                                //alert("被点击的日期为" + date);
                                //获取当前被点击的对象的name值
                                var names = $(this).attr("name");
                                //根据当前的name进行判断
                                var item = { name: names };
                                SetDateVal(item, date);
                                $("#date_menu").menu('hide');
                                //$("#date_menu").menu('destroy');
                            })
                        }
                    }
                    else {
                        //alert("只获取一个子节点");
                        //var year = calenars.calendar('options')['year'];
                        //var month = calenars.calendar('options')['month'];
                        var date = calenars.calendar('options')['current'].toLocaleDateString();
                        //alert("被点击的日期为"+year+"/"+month+"/"+day);
                        //alert("被点击的日期为" + date);
                        //获取当前被点击的对象的name值
                        //注意此处的this为linkbutton
                        var calendar = $(this).parent().children(".calendar");
                        var names = calendar.attr("name");
                        //根据当前的name进行判断

                        var item = { name: names };
                        SetDateVal(item, date);
                        $("#date_menu").menu('hide');
                    }

                })
            })


        }



        Date.getDateByAddDays = function (dt, num) {
            ///	<summary>
            ///	对传入的时间进行加法运算
            ///	</summary>
            ///	<returns type="Date" />
            ///	<param name="dt" type="Date">
            ///		参照日期，若为空则为当前时间
            ///	<param name="num" type="Int">
            ///		要加或减的天数
            ///	</param>
            var source_date = new Date(date);
            source_date = source_date.valueOf();
            source_date = source_date + num * 24 * 60 * 60 * 1000;
            var target_date = new Date(source_date);
            return target_date.toLocaleDateString();
        }


        function SetDateVal(temp, date1, date2) {
            ///	<summary>
            ///	将起始、终止以及指定时间赋值到隐藏域中
            ///	</summary>
            ///	<returns type="Date" />
            ///	<param name="temp" type="Object">
            ///保存要保存的类型的对象（.name可查看时间）
            /// </param>
            ///	<param name="dt" type="Date">
            ///		参照日期，若为空则为当前时间
            ///	</param>
            switch (temp.name) {
                case 'today':
                    $("#date_target").val(date1);
                    $("#date_start").val(999);
                    $("#date_finish").val(999);
                    break;

                case 'beforesomeday':
                    $("#date_target").val(999);
                    $("#date_start").val(998);
                    $("#date_finish").val(date1);
                    break;

                case 'aftersomeday':
                    $("#date_target").val(999);
                    $("#date_start").val(date1);
                    $("#date_finish").val(998);
                    break;

                case 'date_start':
                    $("#date_target").val(999);
                    $("#date_start").val(date1);
                    break;
                case 'date_finish':
                    $("#date_target").val(999);
                    $("#date_finish").val(date1);
                    break;
                case 'lastWeek':
                    $("#date_target").val(999);

                    $("#date_start").val(Date.getDateByAddDays(date1, -7));
                    $("#date_finish").val(date1);
                    break;

                case 'lastMonth':
                    $("#date_target").val(999);
                    $("#date_start").val(Date.getDateOfPreMonth(date1));
                    $("#date_finish").val(date1);
            }
            //alert("选中的时间为：" + $("#date_target").val() + " |" + "选中的起始时间为：" + $("#date_start").val() + " |" + "选中的终止时间为：" + $("#date_finish").val());
        }

        //将时间转为指定格式
        function DataFormatter(value) {
            var date = new Date(value);
            var str = (date.getMonth() + 1) + "月" + date.getDate() + "日";
            return str;
        }


        //查询用户：下拉框属性
        var userColumns = [[
         //{ field: 'ck', checkbox: true },
         { field: 'id', title: 'ID', width: 100, checkbox: true },
         { field: 'text', title: '群组名称', width: 150 }
         //{ field: 'Operate', title: '是否禁用', width: 150 }
        ]]

        //查询任务：下拉框属性
        var missionColumns = [[
                 //{ field: 'ck', checkbox: true },
                 { field: 'SMID', title: 'ID', width: 100, checkbox: true },
                 { field: 'SMSMissionName', title: '群组名称', width: 150 }
                 //{ field: 'Operate', title: '是否禁用', width: 150 }
        ]]

        //查询信息类型：下拉列表
        var messageTypeColumns = [[
            { field:'TypeID', title:'ID',width: 10,checkbox:true},
            { field:'TypeName',title:'类型名称',width:60}
        ]]

        //由分部视图替代重用的代码部分
       @Html.Partial("_Partial_Common_pColumns")
        
       @Html.Partial("_Partial_Common_RecordColumns")
        //var myColumns_person = [[
        //        { field: 'ContentID', title: 'ID', width: 100, hidden: true },
        //        { field: 'PersonName', title: '联系人', width: 80 },
        //        { field: 'PhoneNum', title: '电话', width: 120 },
        //        {
        //            field: 'StatusCode', title: '接收状态', width: 80,
        //            //formatter: DataFormatter
        //        }
        //]]

        function hideMyMenu() {
            $("#mm1").menu('hide');
        }

        //查询用户：加载下拉框
        function loadComboGrid_User() {

            
            //加载全部短信任务种类
            $("#smsUserInfo_combogrid").combogrid({
                url: '@ViewBag.GetUserInfo',
                method: 'get',
                idField: 'id',
                textField: 'text',
                //width: 150,
                panelWidth: 180,
                panelHeight: 'auto',
                multiple: false,
                columns: userColumns,
                onClickRow: function (rowIndex, rowData) {
                    //loadDataGridByGroupDepartment_Personss();
                },
                onLoadSuccess: function () {
                //默认选中当前用户
                    $("#smsUserInfo_combogrid").combogrid('grid').datagrid('selectRecord', 1);
                }
            })
            
        }
        //查询任务：加载下拉框
        function loadComboGrid_Mission() {

            //加载全部短信任务种类
            $("#smsMission_combogrid").combogrid({
                url: '@ViewBag.GetAllMission',
                method: 'get',
                idField: 'SMID',
                textField: 'SMSMissionName',
                //width: 150,
                panelWidth: 180,
                panelHeight: 'auto',
                multiple: true,
                columns: missionColumns,
                onClickRow: function (rowIndex, rowData) {
                    //loadDataGridByGroupDepartment_Personss();
                }
            })

            //$("#smsMission_combogrid").datagrid({
            //    singleSelect: false,
            //    checkOnSelect: true,
            //    selectOnCheck: true
            //})
        }

        //查询信息类型：加载下拉列表
        function loadComboGrid_MessageType() {
            $("#MessageType_combogrid").combogrid({
                url: '@ViewBag.GetMessageType',
                method: 'get',
                idField: 'TypeID',
                textField: 'TypeName',
                panelWidth: 90,
                panelHeight: 'auto',
                multiple: true,
                columns:messageTypeColumns
            })
        }

        function loadDataGrid_person(url, myColumns, model) {
            //2 位treegrid加载数据
            $("#datagrid_person").datagrid({
                width: '400px',
                height: 'auto',
                fitColumns: false,
                striped: true,
                showFooter: true,
                singleSelect: true,
                nowrap: false,//自动换行
                fit: true,
                url: url,
                queryParams: model,
                loadMsg: '加载中……',
                columns: myColumns,
                //toolbar: toolbar
                pagination: true,//启用分页，默认每页10行
                rownumbers: true,//显示页码，默认 提供 10 - 50 的页容量选择下拉框
                pageSize: 10,   //设置 页容量为 5
                pageList: [5, 10, 20],//设置 页容量下拉框
            });
        }

        function loadDataGrid(url, myColumns, model) {
            //2 位treegrid加载数据
            $("#datagrid").datagrid({
                width: '400px',
                height: 'auto',
                fitColumns: false,
                striped: true,
                showFooter: true,
                singleSelect: true,
                nowrap: false,//自动换行
                fit: true,
                url: url,
                queryParams: model,
                loadMsg: '加载中……',
                columns: myColumns,
                //toolbar: toolbar
                pagination: true,//启用分页，默认每页10行
                rownumbers: true,//显示页码，默认 提供 10 - 50 的页容量选择下拉框
                pageSize: 10,   //设置 页容量为 5
                pageList: [5, 10, 20],//设置 页容量下拉框,
                onClickRow: function (index, field, value) {
                    //1 获取选中的行对象
                    var row = $("#datagrid").datagrid('getSelected');
                    //2 取出行对象中的ContentID 列的对应的值
                    var cid = row["ContentID"];
                    //3 加载该短信内容对应的发送至的短信记录
                    var queryData = {
                        cid: cid
                    };
                    $("#cid").val(cid);
                    loadDataGrid_person('@ViewBag.GetRecordByCID', myColumns_person, queryData);
                }

            });
        }
    </script>
    }

@section Body{
<div id="body_layout" class="easyui-panel" style="height:100%;width:100%;border:0px" data-options="fit:true">
    @Html.Partial("_Partial_AdvSearch_Content")
    <div style="margin:5px 0"></div>
    @Html.Partial("_Partial_AdvSearch_Record")
</div>
}

