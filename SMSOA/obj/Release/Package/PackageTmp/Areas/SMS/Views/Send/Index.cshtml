
@{
    ViewBag.Title = "View";
    Layout = "~/Areas/SMS/Views/Shared/_Layout_Send.cshtml";
}

@section Scripts{
<script src="~/Scripts/MyScripts/EasyUI/my_ShowMessager.js"></script>
    <script type="text/javascript">
        var missionColumns = [[
                 { field: 'SMID', title: 'ID', width: 100, checkbox: true },
                 //{ field: 'SMID', title: 'ID', width: 100,hidden:true },
                 { field: 'SMSMissionName', title: '任务名称', width: 150 }
        ]]

        var groupColumns = [[
                 //{ field: 'ck', checkbox: true },
                 { field: 'GID', title: 'ID', width: 100, checkbox: true },
                 { field: 'GroupName', title: '群组名称', width: 150 }
                 //{ field: 'Operate', title: '是否禁用', width: 150 }
        ]]

        var PersonColumns = [[
                 { field: 'PID', title: 'ID', width: 50, checkbox: true },
                 { field: 'PName', title: '用户名称', width: 100 },
                 { field: 'PhoneNum', title: '电话号码', width: 250 }
        ]]

        function formatItem_combobox(row) {
            var s = '<input type="checkbox" class="combobox-checkbox">' + '<span style="font-weight:bold">' + row.text + '</span></input>';
            return s;
        }

        function split4id(obj, index) {
            var ids = "";
            for (var i = 0; i < obj.length; i++) {
                ids = ids + obj[i][index] + ",";
            }
            ids = ids.substr(0, ids.length - 1);
            return ids;
        }


        //function OnChecks() {
        //    var ids= $("#group_combogrid").combobox("getChecked");
        //}



        function AjaxSubmit(pids, content,url,missionId) {
            //1 创建对象
            var model = new Object();
            model.PersonIds = pids;
            model.Content = content;
            model.SMSMissionID = missionId;
            //2 使用ajax方式提交（此处先不用post）
            $.ajax({
                url: url,
                data: JSON.stringify(model),
                contentType: 'application/json;charset=utf-8',//注意此处必须注明为json格式，否则后台控制器无法通过Model的方式接收
                async: false,
                type: 'POST',
                success: function (data) {
                    if("ok" == data){
                        messagerShowOnCenter("提交成功");
                    }else if("empty contact list" == data){
                        alert("联系人名单为空，发送失败")
                    }else if("out of range" == data){
						messagerShowOnCorner("短信字数超过300字，提交失败");
                       
                    }else if("empty content" == data){
						messagerShowOnCorner("短信内容为空，发送失败");
                      
                    }
                }

            })
        }

        //编辑或创建某个权限后执行的操作
        function afterEdit(msg) {
            //editWindow
            //1 关闭加载的iframe页面
            $.messager.alert('提示', msg);

            $("#editWindow").window('close');
            //2 刷新当前页面
            //$("#contactstreegrid").treegrid('reload');
            //loadPersonGridByGID("@ViewBag.GetPersonUrl", PersonColumns, PersonToolbar);
            //6月17日添加
            //注意需要重新加载短信任务下拉框（不必加载群组及部门下拉框——因为这两个下拉框是在点击短信任务后才会加载）
            loadCombogrid_byUser();
        }

        function DoSend() {
            //alert("要发送短信了");
            //1 获取右侧联系人datagrid列表中选中的联系人id
            var state= messagerConfirm("请确认","是否要执行发送短信操作?");
            if(state==false){
                return;
            }
            var checkeds = $("#persondatagrid").datagrid("getChecked");
            //1.1 获取选中的联系人id用,分隔，并提交
            var ids_person = split4id(checkeds, "PID");
            var url='@ViewBag.DoSend';
            //2 获取短信内容
            var content = $("#message").textbox('getValue');
            var grid_mission= $("#smsMission_combogrid").combogrid("grid");
            var mission_checkeds = grid_mission.datagrid("getChecked");
            var mission_id = mission_checkeds[0]["SMID"];
            //alert("要发送的联系人为："+ids_person+"——短信内容为："+content);
            //3 发送（进行校验）
            AjaxSubmit(ids_person, content, url, mission_id);
        }

        function ClearContent() {
            alert("清除短信内容");
        }



        function CancelSend() {
            alert("取消发送短信");
        }

        function CloseWindow() {
            $("#editWindow").window('close');
           
        }

        //----------------------------加载几个下拉框-----------------------------
        //根据登录的用户加载其选中的常用 短信任务
        //加载短信任务combogrid
        function loadCombogrid_byUser() {
            var myurl = '@ViewBag.GetMissionByUID';
            var userId=-999;
            //拼接
            if (@ViewBag.LoginUserID != -999)
            {
                userId='@ViewBag.LoginUserID'
                myurl = myurl + "?userId=" +userId ;
            }
            //根据当前登录用户加载该用户所拥有的短信任务
            $("#smsMission_combogrid").combogrid({
                url: myurl,
                method: 'get',
                idField: 'SMID',
                textField: 'SMSMissionName',
                //width:120,
                panelWidth: 180,
                panelHeight: 'auto',
                editable: false,
                multiple: false,@*设置为单选*@
                //formatter: formatItem_combobox,
                columns: missionColumns,               
                onSelect:function(rowIndex, rowData){
                    //点击任务后显示该任务所拥有的群组以及部门
                    //alert("被点击了");
                    loadComboGrid_Group(rowData.SMID,userId);
                    loadComboTree_Department(rowData.SMID);
                    //点击所选任务后显示该任务现在已有的联系人（在右侧联系人列表中显示）
                    var url = '@ViewBag.GetPersonByMission?mid=' + rowData.SMID;
                    loadDataGrid_Person(url);
                    //根据所选的短信任务类型加载模板
                    loadtextbox_Template(rowData.SMID,userId);
                }
            })
        }

        //根据选中的短信任务加载该任务所拥有的群组下拉框
        function loadComboGrid_Group(missionId,userId) {

            //加载全部短信任务种类
            $("#group_combogrid").combogrid({
                url: '@ViewBag.GetGroupByMID_combogrid?mid='+missionId+'&uid='+userId,
                //method: 'get',
                idField: 'GID',
                textField: 'GroupName',
                editable: false,
                //width:120,
                panelWidth: 180,
                panelHeight: 300,
                multiple: true,
                columns: groupColumns,
                onSelect:function(rowIndex, rowData){
                    //alert("选中了一行");
                    loadDataGridByGroupDepartment_Personss();
                },
                onUnselect:function(rowIndex, rowData){
                    //alert("去掉已经选中的一行");
                    loadDataGridByGroupDepartment_Personss();
                },
               // formatter: formatItem_combobox,
                //获取数据成功后启动事件
                onLoadSuccess: function () {
                    var data= $("#group_combogrid").combogrid("grid").datagrid("getData");
                    var rowData = data.rows;
                    $.each(rowData, function (rowIndex, rowData) {
                        if (rowData.checked) {
                            $("#group_combogrid").combogrid("grid").datagrid("selectRow", rowIndex);
                        }
                    });
                }
            })
        }

        //加载全部部门下拉框
        function loadComboTree_Department(missionId) {
            //2.2 加载上级部门下拉框
            $("#DepartmentName_combotree").combotree({
                panelWidth: 250,
                panelHeight: 250,
                url: '@ViewBag.GetDepartment_combotree?mid=' + missionId,
                //required: true,
                method: 'get',
                //width: 210,
                cascadeCheck: $(this).is(':checked'),//选中子节点不会选中父节点
                //formatter: formatItem_combobox
                onCheck: function (node) {
                    //alert("选中" + node);
                    //var nodes = $('#DepartmentName_combotree').combotree("tree").tree('getChecked');
                    //alert("选中了" + nodes.length+"个节点");
                    loadDataGridByGroupDepartment_Personss();
                }
            });
            //选中子节点不会选中父节点
            //$('#DepartmentName_combotree').combotree({ cascadeCheck: $(this).is(':checked') })

        }

        function loadDataGridByGroupDepartment_Personss() {
            //1 获取当前选中的group以及department下拉框所选中的ids
            //1.1 获取当前选中的群组下拉框
            var grid = $("#group_combogrid").combogrid("grid");
            var group_checkeds = grid.datagrid("getChecked");
            var group_ids = split4id(group_checkeds, "GID");
            //获取选中行的id
            //alert(split4id(checkeds, "GID"));
            //var ids_group = "";
            //for (var i = 0; i < checkeds.length; i++) {
            //    ids_group = ids_group + checkeds[i].GID + ",";
            //}
            //1.2 获取当前选中的部门下拉tree
            var department_nodes = $('#DepartmentName_combotree').combotree("tree").tree('getChecked');
            var department_ids = split4id(department_nodes, "id");
            //var ids_department = "";
            //for (var i = 0; i < nodes.length; i++) {
            //    ids_department = ids_department + nodes[i].id + ",";
            //}
            //alert(split4id(nodes, "id"));
            //2 请求url加载至Person_DataGrid
            var url = '@ViewBag.GetPersonByGroupDepartment?gids=' + group_ids + '&dids=' + department_ids;

            loadDataGrid_Person(url);
        }





        function loadDataGrid_Person(url) {
            $("#persondatagrid").datagrid({
                fitColumns: true,
                striped: true,
                multiple: true,     //单选
                fit: true,
                url: url,
                showHeader: true,
                // pagination:true,//在数据表格控件底部显示分页工具栏
                rownumbers: true, //是否加行号
                loadMsg: '加载中……',
                columns: PersonColumns,
                onLoadSuccess: function () {
                    var data = $("#persondatagrid").datagrid("getData");
                    var rowData = data.rows;
                    $.each(rowData, function (rowIndex, rowData) {
                        $("#persondatagrid").datagrid("selectRow", rowIndex);
                    });
                }
            });

            var p=$("#persondatagrid").datagrid('getPager');
            p.pagination({
                displayMsg: '共{total}条数据'
            });
        }



        //根据短信任务以及用户id加载该任务所拥有的短信
        function loadtextbox_Template(smid,userid){
            $.ajax({
                url:"@ViewBag.GetTemplateByUidAndMission"+"?userId="+userid+"&smId="+smid ,

                contentType: 'application/json;charset=utf-8',//注意此处必须注明为json格式，否则后台控制器无法通过Model的方式接收
                async: false,
                type: 'POST',
                success: function (data) {

                    //alert(data);
                    $("#message").textbox('setValue',data);
                }

            })
        }

        //暂时不使用
        //加载常用的短信任务


        function showEditWindow() {
            //从指定页面中预读取数据
            $("#SetFrame").attr("src", '@ViewBag.ShowSetOftenMissionAndGroup');
            //打开编辑窗体
            $("#editWindow").window('open');

        }

        $(function () {
            //1 隐藏设置的窗体
            $("#editWindow").window('close');
            loadCombogrid_byUser();
            //OnSelected_Group();
            $("#DepartmentName_combotree").combotree({
                onCheck: function () {
                    alert("此部门被选中了");
                }
            });

        })
</script>
    }

@section Body{
@Html.Partial("_Partial_Send_Body")
@Html.Partial("_Partial_Send_EditWin")
    }

