<?xml version="1.0" encoding="utf-8"?>
<local:Activity1 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="clr-namespace:QueryWFLib;assembly=QueryWFLib" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:pme="clr-namespace:PMS.Model.Enum;assembly=PMS.Model" xmlns:pms="clr-namespace:PMS.Model.SMSModel;assembly=PMS.Model" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <local:Activity1.isMMS>
    <InArgument x:TypeArguments="pme:MMS_Enum">
      <mca:CSharpValue x:TypeArguments="pme:MMS_Enum">PMS.Model.Enum.MMS_Enum.sms</mca:CSharpValue>
    </InArgument>
  </local:Activity1.isMMS>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>PMS.Model.Enum</x:String>
      <x:String>PMS.Model.SMSModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Common</AssemblyReference>
      <AssemblyReference>ISMS</AssemblyReference>
      <AssemblyReference>PMS.BLL</AssemblyReference>
      <AssemblyReference>PMS.IBLL</AssemblyReference>
      <AssemblyReference>PMS.IModel</AssemblyReference>
      <AssemblyReference>PMS.Model</AssemblyReference>
      <AssemblyReference>SMSFactory</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>QueryWFLib</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:Activity1.Implementation>
    <Flowchart>
      <Flowchart.Variables>
        <Variable x:TypeArguments="x:String" Name="_id_redis_msgidList" />
        <Variable x:TypeArguments="x:Int32" Name="_state" />
        <Variable x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)" Name="_list_queryModel" />
        <Variable x:TypeArguments="pme:QueryState_Enum" Name="_state_enum" />
        <Variable x:TypeArguments="pms:SMSModel_QueryReceive" Name="item" />
        <Variable x:TypeArguments="pms:SMSModel_QueryReceive" Name="ReceviceModel" />
        <Variable x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)" Name="_list_Exist_queryModel" />
        <Variable x:TypeArguments="pme:MatchCondition_Enum" Name="_matchCondition_enum" />
        <Variable x:TypeArguments="pme:MMS_Enum" Name="_isMMS">
          <Variable.Default>
            <mca:CSharpValue x:TypeArguments="pme:MMS_Enum">isMMS</mca:CSharpValue>
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="scg:List(pms:MMSModel_QueryReceive)" Name="_list_queryModel_MMS" />
        <Variable x:TypeArguments="pme:QueryState_Enum" Name="_state_enum_mms" />
        <Variable x:TypeArguments="scg:List(pms:MMSModel_QueryReceive)" Name="_list_Exist_queryModel_MMS" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID3">
          <local:LogIn_Code Text="{x:Null}" LogIn="启动查询" />
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID0">
              <local:QueryState_Code Text="{x:Null}">
                <local:QueryState_Code.List_QueryReceive>
                  <OutArgument x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">
                    <mca:CSharpReference x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">_list_queryModel</mca:CSharpReference>
                  </OutArgument>
                </local:QueryState_Code.List_QueryReceive>
                <local:QueryState_Code.isMMS>
                  <InArgument x:TypeArguments="pme:MMS_Enum">
                    <mca:CSharpValue x:TypeArguments="pme:MMS_Enum">_isMMS</mca:CSharpValue>
                  </InArgument>
                </local:QueryState_Code.isMMS>
              </local:QueryState_Code>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID4">
                  <local:LogIn_Code Text="{x:Null}">
                    <local:LogIn_Code.LogIn>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">"查询结果含："+_list_queryModel.Count();</mca:CSharpValue>
                      </InArgument>
                    </local:LogIn_Code.LogIn>
                  </local:LogIn_Code>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID1">
                      <local:GetStateByQueryList_Code Text="{x:Null}" DisplayName="GetStateByQueryList_Code">
                        <local:GetStateByQueryList_Code.List_QueryReceive>
                          <InArgument x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">
                            <mca:CSharpValue x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">_list_queryModel</mca:CSharpValue>
                          </InArgument>
                        </local:GetStateByQueryList_Code.List_QueryReceive>
                        <local:GetStateByQueryList_Code.State>
                          <OutArgument x:TypeArguments="pme:QueryState_Enum">
                            <mca:CSharpReference x:TypeArguments="pme:QueryState_Enum">_state_enum</mca:CSharpReference>
                          </OutArgument>
                        </local:GetStateByQueryList_Code.State>
                        <local:GetStateByQueryList_Code.isMMS>
                          <InArgument x:TypeArguments="pme:MMS_Enum">
                            <mca:CSharpValue x:TypeArguments="pme:MMS_Enum">_isMMS</mca:CSharpValue>
                          </InArgument>
                        </local:GetStateByQueryList_Code.isMMS>
                      </local:GetStateByQueryList_Code>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID5">
                          <local:LogIn_Code Text="{x:Null}">
                            <local:LogIn_Code.LogIn>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">"查询集合的总数为" +((_list_queryModel==null)?0:_list_queryModel.Count());</mca:CSharpValue>
                              </InArgument>
                            </local:LogIn_Code.LogIn>
                          </local:LogIn_Code>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID6">
                              <local:TraversalCollectionWritten2Final_Code Text="{x:Null}">
                                <local:TraversalCollectionWritten2Final_Code.Enum_MatchCondition>
                                  <OutArgument x:TypeArguments="pme:MatchCondition_Enum">
                                    <mca:CSharpReference x:TypeArguments="pme:MatchCondition_Enum">_matchCondition_enum</mca:CSharpReference>
                                  </OutArgument>
                                </local:TraversalCollectionWritten2Final_Code.Enum_MatchCondition>
                                <local:TraversalCollectionWritten2Final_Code.List_QueryModel>
                                  <InArgument x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">
                                    <mca:CSharpValue x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">_list_queryModel</mca:CSharpValue>
                                  </InArgument>
                                </local:TraversalCollectionWritten2Final_Code.List_QueryModel>
                                <local:TraversalCollectionWritten2Final_Code.List_QueryReceive>
                                  <OutArgument x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">
                                    <mca:CSharpReference x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">_list_Exist_queryModel</mca:CSharpReference>
                                  </OutArgument>
                                </local:TraversalCollectionWritten2Final_Code.List_QueryReceive>
                                <local:TraversalCollectionWritten2Final_Code.State_Query>
                                  <InArgument x:TypeArguments="pme:QueryState_Enum">
                                    <mca:CSharpValue x:TypeArguments="pme:QueryState_Enum">_state_enum</mca:CSharpValue>
                                  </InArgument>
                                </local:TraversalCollectionWritten2Final_Code.State_Query>
                              </local:TraversalCollectionWritten2Final_Code>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID2">
                                  <If>
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">_matchCondition_enum== PMS.Model.Enum.MatchCondition_Enum.conform</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Sequence>
                                        <local:ListWriteInDb_Code Text="{x:Null}" Write_Enum="{x:Null}" DisplayName="ListWriteInDb_Code">
                                          <local:ListWriteInDb_Code.List_Final>
                                            <InArgument x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">
                                              <mca:CSharpValue x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">_list_Exist_queryModel</mca:CSharpValue>
                                            </InArgument>
                                          </local:ListWriteInDb_Code.List_Final>
                                        </local:ListWriteInDb_Code>
                                        <local:LogIn_Code Text="{x:Null}" LogIn="写入成功" />
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <FlowStep>
        <If DisplayName="遍历查询集合写入最终集合">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">_state_enum==PMS.Model.Enum.QueryState_Enum.remnant</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence>
              <Assign DisplayName="存在的查询集合（最终要写入数据库中）">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">
                    <mca:CSharpReference x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">_list_Exist_queryModel</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">
                    <mca:CSharpValue x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">new List&lt;SMSModel_QueryReceive&gt;();</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="pme:MatchCondition_Enum">
                    <mca:CSharpReference x:TypeArguments="pme:MatchCondition_Enum">_matchCondition_enum</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="pme:MatchCondition_Enum">
                    <mca:CSharpValue x:TypeArguments="pme:MatchCondition_Enum">PMS.Model.Enum.MatchCondition_Enum.unconform;</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <ForEach x:TypeArguments="pms:SMSModel_QueryReceive" DisplayName="ForEach&lt;SMSModel_QueryReceive&gt;">
                <ForEach.Values>
                  <InArgument x:TypeArguments="scg:IEnumerable(pms:SMSModel_QueryReceive)">
                    <mca:CSharpValue x:TypeArguments="scg:IEnumerable(pms:SMSModel_QueryReceive)">_list_queryModel</mca:CSharpValue>
                  </InArgument>
                </ForEach.Values>
                <ActivityAction x:TypeArguments="pms:SMSModel_QueryReceive">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="pms:SMSModel_QueryReceive" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence>
                    <Sequence.Variables>
                      <Variable x:TypeArguments="pme:ExistEnum" Name="_enum_ItemExist" />
                    </Sequence.Variables>
                    <Sequence>
                      <local:CheckMsgIdInRedist_Code Text="{x:Null}" DisplayName="CheckMsgIdInRedist_Code">
                        <local:CheckMsgIdInRedist_Code.Item_Model>
                          <InArgument x:TypeArguments="pms:SMSModel_QueryReceive">
                            <mca:CSharpValue x:TypeArguments="pms:SMSModel_QueryReceive">item</mca:CSharpValue>
                          </InArgument>
                        </local:CheckMsgIdInRedist_Code.Item_Model>
                        <local:CheckMsgIdInRedist_Code.enum_Exist>
                          <OutArgument x:TypeArguments="pme:ExistEnum">
                            <mca:CSharpReference x:TypeArguments="pme:ExistEnum">_enum_ItemExist</mca:CSharpReference>
                          </OutArgument>
                        </local:CheckMsgIdInRedist_Code.enum_Exist>
                      </local:CheckMsgIdInRedist_Code>
                      <If>
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">_enum_ItemExist==PMS.Model.Enum.ExistEnum.isExist</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <Sequence>
                            <local:LogIn_Code Text="{x:Null}">
                              <local:LogIn_Code.LogIn>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">item.msgId+"存在于数据库中"</mca:CSharpValue>
                                </InArgument>
                              </local:LogIn_Code.LogIn>
                            </local:LogIn_Code>
                            <local:InsertReciveModel2List_Code State="{x:Null}" Text="{x:Null}">
                              <local:InsertReciveModel2List_Code.Item>
                                <InArgument x:TypeArguments="pms:SMSModel_QueryReceive">
                                  <mca:CSharpValue x:TypeArguments="pms:SMSModel_QueryReceive">item</mca:CSharpValue>
                                </InArgument>
                              </local:InsertReciveModel2List_Code.Item>
                              <local:InsertReciveModel2List_Code.List_QueryReceive>
                                <InOutArgument x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">
                                  <mca:CSharpReference x:TypeArguments="scg:List(pms:SMSModel_QueryReceive)">_list_Exist_queryModel</mca:CSharpReference>
                                </InOutArgument>
                              </local:InsertReciveModel2List_Code.List_QueryReceive>
                              <local:InsertReciveModel2List_Code.Match_Enum>
                                <InOutArgument x:TypeArguments="pme:MatchCondition_Enum">
                                  <mca:CSharpReference x:TypeArguments="pme:MatchCondition_Enum">_matchCondition_enum</mca:CSharpReference>
                                </InOutArgument>
                              </local:InsertReciveModel2List_Code.Match_Enum>
                            </local:InsertReciveModel2List_Code>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <local:LogIn_Code Text="{x:Null}">
                            <local:LogIn_Code.LogIn>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">item.msgId+"不存在于缓存或数据库中"</mca:CSharpValue>
                              </InArgument>
                            </local:LogIn_Code.LogIn>
                          </local:LogIn_Code>
                        </If.Else>
                      </If>
                    </Sequence>
                  </Sequence>
                </ActivityAction>
              </ForEach>
              <local:LogIn_Code Text="{x:Null}">
                <local:LogIn_Code.LogIn>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">"现集合中共有" + _list_Exist_queryModel.Count() + "个对象"</mca:CSharpValue>
                  </InArgument>
                </local:LogIn_Code.LogIn>
              </local:LogIn_Code>
            </Sequence>
          </If.Then>
          <If.Else>
            <local:LogIn_Code Text="{x:Null}" LogIn="不满足条件跳出写入新集合操作" />
          </If.Else>
        </If>
      </FlowStep>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <sads:DebugSymbol.Symbol>d0hFOlwwM+WNj+WQjOW8gOWPkVznn63kv6FcUE1TXFBNU1xRdWVyeVdGTGliXE1haW5TdGF0aXN0aWNzX0FjdGl2aXR5LnhhbWwcFAcUZAECPAPCAg8CAQFIC0hSAgECUQlRkwEDAdABVA1fJQMBswFiEWgkAwGkAWsVezYCAXl+GYQBLAIBaocBHZwBSwIBMZ8BIbEBJgIBEFGKAVGQAQMB0QFcE1xbAwHCAVcTV4QBAwG0AWUXZXcDAaUBeBt4YwMBlgFuG26EAQMBiAFzG3N3AgF6gQEfgQGfAQIBa48BI48BjAECAVyZASOZAXcCAU6UASOUAZoBAgFAigEjigGMAQIBMqIBJ6IBpwECARGmASWvATACAR+nASetAUICASKuASeuAYcBAgEgqgEtqgGcAQIBI64Bfq4BhAECASE=</sads:DebugSymbol.Symbol>
    </Flowchart>
  </local:Activity1.Implementation>
</local:Activity1>